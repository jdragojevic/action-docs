initSidebarItems({"fn":[["sync15_passwords_add","SafetyDeref pointer, thus unsafe"],["sync15_passwords_check_valid","SafetyDeref pointer, thus unsafe"],["sync15_passwords_delete",""],["sync15_passwords_destroy_buffer",""],["sync15_passwords_destroy_string","Public destructor for strings managed by the other side of the FFI."],["sync15_passwords_disable_mem_security",""],["sync15_passwords_get_all",""],["sync15_passwords_get_by_base_domain",""],["sync15_passwords_get_by_id",""],["sync15_passwords_get_db_salt","Opens an existing database that stores its salt in the header bytes and retrieves its salt."],["sync15_passwords_import","SafetyDeref pointer, thus unsafe"],["sync15_passwords_interrupt",""],["sync15_passwords_interrupt_handle_destroy","SafetyThis is equivalent to calling Box::from_raw with panic handling, and thus inherits [`Box::from_raw`]'s safety properties. That is to say, this function is wildly unsafe."],["sync15_passwords_migrate_plaintext_header","Opens an existing database that stores its salt in the header bytes and migrates it to a plaintext header one."],["sync15_passwords_new_interrupt_handle",""],["sync15_passwords_num_open_connections",""],["sync15_passwords_potential_dupes_ignoring_username","SafetyDeref pointer, thus unsafe"],["sync15_passwords_rekey_database",""],["sync15_passwords_rekey_database_with_hex_key","Same as sync15_passwords_rekey_database, but accepts a byte array encryption key."],["sync15_passwords_reset",""],["sync15_passwords_state_destroy",""],["sync15_passwords_state_new",""],["sync15_passwords_state_new_with_hex_key","Same as sync15_passwords_state_new, but automatically hex-encodes the string."],["sync15_passwords_state_new_with_salt",""],["sync15_passwords_sync",""],["sync15_passwords_touch",""],["sync15_passwords_update","SafetyDeref pointer, thus unsafe"],["sync15_passwords_wipe",""],["sync15_passwords_wipe_local",""]],"struct":[["STORES",""]]});