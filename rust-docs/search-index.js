var searchIndex = JSON.parse('{\
"autofill":{"doc":"","i":[[0,"db","autofill","",null,null],[0,"addresses","autofill::db","",null,null],[5,"touch","autofill::db::addresses","",null,[[["connection",3],["guid",3]],["result",6]]],[0,"credit_cards","autofill::db","",null,null],[5,"update_credit_card","autofill::db::credit_cards","",null,[[["connection",3],["guid",3],["updatablecreditcardfields",3]],["result",6]]],[5,"delete_credit_card","","",null,[[["connection",3],["guid",3]],[["bool",15],["result",6]]]],[5,"touch","","",null,[[["connection",3],["guid",3]],["result",6]]],[0,"models","autofill::db","",null,null],[0,"address","autofill::db::models","",null,null],[3,"UpdatableAddressFields","autofill::db::models::address","",null,null],[12,"given_name","","",0,null],[12,"additional_name","","",0,null],[12,"family_name","","",0,null],[12,"organization","","",0,null],[12,"street_address","","",0,null],[12,"address_level3","","",0,null],[12,"address_level2","","",0,null],[12,"address_level1","","",0,null],[12,"postal_code","","",0,null],[12,"country","","",0,null],[12,"tel","","",0,null],[12,"email","","",0,null],[3,"Address","","",null,null],[12,"guid","","",1,null],[12,"given_name","","",1,null],[12,"additional_name","","",1,null],[12,"family_name","","",1,null],[12,"organization","","",1,null],[12,"street_address","","",1,null],[12,"address_level3","","",1,null],[12,"address_level2","","",1,null],[12,"address_level1","","",1,null],[12,"postal_code","","",1,null],[12,"country","","",1,null],[12,"tel","","",1,null],[12,"email","","",1,null],[12,"time_created","","",1,null],[12,"time_last_used","","",1,null],[12,"time_last_modified","","",1,null],[12,"times_used","","",1,null],[3,"InternalAddress","","",null,null],[12,"guid","","",2,null],[12,"given_name","","",2,null],[12,"additional_name","","",2,null],[12,"family_name","","",2,null],[12,"organization","","",2,null],[12,"street_address","","",2,null],[12,"address_level3","","",2,null],[12,"address_level2","","",2,null],[12,"address_level1","","",2,null],[12,"postal_code","","",2,null],[12,"country","","",2,null],[12,"tel","","",2,null],[12,"email","","",2,null],[12,"metadata","","",2,null],[11,"from_row","","",2,[[["row",3]],[["error",4],["result",4],["internaladdress",3]]]],[0,"credit_card","autofill::db::models","",null,null],[3,"UpdatableCreditCardFields","autofill::db::models::credit_card","",null,null],[12,"cc_name","","",3,null],[12,"cc_number_enc","","",3,null],[12,"cc_number_last_4","","",3,null],[12,"cc_exp_month","","",3,null],[12,"cc_exp_year","","",3,null],[12,"cc_type","","",3,null],[3,"CreditCard","","",null,null],[12,"guid","","",4,null],[12,"cc_name","","",4,null],[12,"cc_number_enc","","",4,null],[12,"cc_number_last_4","","",4,null],[12,"cc_exp_month","","",4,null],[12,"cc_exp_year","","",4,null],[12,"cc_type","","",4,null],[12,"time_created","","",4,null],[12,"time_last_used","","",4,null],[12,"time_last_modified","","",4,null],[12,"times_used","","",4,null],[3,"InternalCreditCard","","",null,null],[12,"guid","","",5,null],[12,"cc_name","","",5,null],[12,"cc_number_enc","","",5,null],[12,"cc_number_last_4","","",5,null],[12,"cc_exp_month","","",5,null],[12,"cc_exp_year","","",5,null],[12,"cc_type","","",5,null],[12,"metadata","","",5,null],[11,"from_row","","",5,[[["row",3]],[["internalcreditcard",3],["result",4],["error",4]]]],[3,"Metadata","autofill::db::models","Metadata that\'s common between the records.",null,null],[12,"time_created","","",6,null],[12,"time_last_used","","",6,null],[12,"time_last_modified","","",6,null],[12,"times_used","","",6,null],[12,"sync_change_counter","","",6,null],[0,"schema","autofill::db","",null,null],[17,"ADDRESS_COMMON_COLS","autofill::db::schema","",null,null],[17,"ADDRESS_COMMON_VALS","","",null,null],[17,"CREDIT_CARD_COMMON_COLS","","",null,null],[17,"CREDIT_CARD_COMMON_VALS","","",null,null],[5,"init","","",null,[[["connection",3]],["result",6]]],[5,"create_empty_sync_temp_tables","","",null,[[["connection",3]],["result",6]]],[0,"store","autofill::db","",null,null],[3,"STORE_FOR_MANAGER","autofill::db::store","",null,null],[3,"Store","","",null,null],[11,"new","","",7,[[],["result",6]]],[11,"add_credit_card","","",7,[[["updatablecreditcardfields",3]],[["creditcard",3],["result",6]]]],[11,"get_credit_card","","",7,[[["string",3]],[["creditcard",3],["result",6]]]],[11,"get_all_credit_cards","","",7,[[],[["result",6],["vec",3]]]],[11,"update_credit_card","","",7,[[["updatablecreditcardfields",3],["string",3]],["result",6]]],[11,"delete_credit_card","","",7,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_credit_card","","",7,[[["string",3]],["result",6]]],[11,"add_address","","",7,[[["updatableaddressfields",3]],[["result",6],["address",3]]]],[11,"get_address","","",7,[[["string",3]],[["result",6],["address",3]]]],[11,"get_all_addresses","","",7,[[],[["vec",3],["result",6]]]],[11,"update_address","","",7,[[["updatableaddressfields",3],["string",3]],["result",6]]],[11,"delete_address","","",7,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_address","","",7,[[["string",3]],["result",6]]],[11,"register_with_sync_manager","","",7,[[]]],[11,"create_credit_cards_sync_engine","","",7,[[],[["box",3],["syncengine",8]]]],[11,"create_addresses_sync_engine","","",7,[[],[["box",3],["syncengine",8]]]],[3,"StoreImpl","","",null,null],[11,"new","","",8,[[],["result",6]]],[11,"add_credit_card","","",8,[[["updatablecreditcardfields",3]],[["creditcard",3],["result",6]]]],[11,"get_credit_card","","",8,[[["string",3]],[["creditcard",3],["result",6]]]],[11,"get_all_credit_cards","","",8,[[],[["result",6],["vec",3]]]],[11,"update_credit_card","","",8,[[["updatablecreditcardfields",3],["string",3]],["result",6]]],[11,"delete_credit_card","","",8,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_credit_card","","",8,[[["string",3]],["result",6]]],[11,"add_address","","",8,[[["updatableaddressfields",3]],[["result",6],["address",3]]]],[11,"get_address","","",8,[[["string",3]],[["result",6],["address",3]]]],[11,"get_all_addresses","","",8,[[],[["vec",3],["result",6]]]],[11,"update_address","","",8,[[["updatableaddressfields",3],["string",3]],["result",6]]],[11,"delete_address","","",8,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_address","","",8,[[["string",3]],["result",6]]],[3,"AutofillDb","autofill::db","",null,null],[12,"writer","","",9,null],[11,"new","","",9,[[],["result",6]]],[11,"begin_interrupt_scope","","",9,[[],["sqlinterruptscope",3]]],[0,"encryption","autofill","",null,null],[3,"EncryptorDecryptor","autofill::encryption","",null,null],[11,"new","","",10,[[["str",15]],["result",6]]],[11,"encrypt","","",10,[[["str",15]],[["result",6],["string",3]]]],[11,"decrypt","","",10,[[["str",15]],[["result",6],["string",3]]]],[5,"encrypt_string","","",null,[[["string",3]],[["result",6],["string",3]]]],[5,"decrypt_string","","",null,[[["string",3]],[["result",6],["string",3]]]],[5,"create_key","","",null,[[],[["result",6],["string",3]]]],[0,"error","autofill","",null,null],[4,"Error","autofill::error","",null,null],[13,"SqlError","","",11,null],[13,"IoError","","",11,null],[13,"InterruptedError","","",11,null],[13,"IllegalDatabasePath","","",11,null],[13,"Utf8Error","","",11,null],[13,"JsonError","","",11,null],[13,"InvalidSyncPayload","","",11,null],[13,"CryptoError","","",11,null],[13,"MissingEncryptionKey","","",11,null],[6,"Result","","",null,null],[0,"sync","autofill","",null,null],[0,"address","autofill::sync","",null,null],[0,"incoming","autofill::sync::address","",null,null],[0,"outgoing","","",null,null],[5,"create_engine","","",null,[[["arc",3],["storeimpl",3]],[["internaladdress",3],["configsyncengine",3]]]],[11,"into_payload","autofill::db::models::address","",2,[[],[["payload",3],["result",6]]]],[0,"credit_card","autofill::sync","",null,null],[0,"incoming","autofill::sync::credit_card","",null,null],[0,"outgoing","","",null,null],[5,"create_engine","","",null,[[["arc",3],["storeimpl",3]],[["internalcreditcard",3],["configsyncengine",3]]]],[0,"engine","autofill::sync","",null,null],[3,"EngineConfig","autofill::sync::engine","",null,null],[17,"LAST_SYNC_META_KEY","","",null,null],[17,"GLOBAL_SYNCID_META_KEY","","",null,null],[17,"COLLECTION_SYNCID_META_KEY","","",null,null],[8,"SyncEngineStorageImpl","","",null,null],[10,"get_incoming_impl","","",12,[[["option",4]],[["result",6],["box",3]]]],[10,"reset_storage","","",12,[[["transaction",3]],["result",6]]],[10,"get_outgoing_impl","","",12,[[["option",4]],[["box",3],["result",6]]]],[3,"ConfigSyncEngine","","",null,null],[11,"new","","",13,[[["engineconfig",3],["arc",3],["box",3],["syncenginestorageimpl",8],["store",3]]]],[8,"ProcessIncomingRecordImpl","autofill::sync","",null,null],[16,"Record","","",14,null],[10,"stage_incoming","","",14,[[["transaction",3],["vec",3],["interruptee",8]],["result",6]]],[10,"finish_incoming","","Finish the incoming phase. This will typically caused …",14,[[["transaction",3]],["result",6]]],[10,"fetch_incoming_states","","",14,[[["transaction",3]],[["result",6],["vec",3]]]],[10,"get_local_dupe","","Returns a local record that has the same values as the …",14,[[["transaction",3]],[["result",6],["option",4]]]],[10,"update_local_record","","",14,[[["transaction",3],["bool",15]],["result",6]]],[10,"insert_local_record","","",14,[[["transaction",3]],["result",6]]],[10,"change_local_guid","","",14,[[["transaction",3],["guid",3]],["result",6]]],[10,"remove_record","","",14,[[["transaction",3],["guid",3]],["result",6]]],[10,"remove_tombstone","","",14,[[["transaction",3],["guid",3]],["result",6]]],[8,"ProcessOutgoingRecordImpl","","",null,null],[16,"Record","","",15,null],[10,"fetch_outgoing_records","","",15,[[["transaction",3],["servertimestamp",3],["string",3]],[["result",6],["outgoingchangeset",6]]]],[10,"finish_synced_items","","",15,[[["transaction",3],["vec",3],["guid",3]],["result",6]]],[8,"SyncRecord","","",null,null],[10,"record_name","","",16,[[],["str",15]]],[10,"id","","",16,[[],["guid",3]]],[10,"metadata","","",16,[[],["metadata",3]]],[10,"metadata_mut","","",16,[[],["metadata",3]]],[10,"merge","","",16,[[["option",4]],["mergeresult",4]]],[11,"merge","autofill::db::models","Merge the metadata from <code>other</code>, and possibly <code>mirror</code>, into …",6,[[["metadata",3],["option",4]]]],[4,"MergeResult","autofill::sync","",null,null],[13,"Merged","","",17,null],[12,"merged","autofill::sync::MergeResult","",18,null],[13,"Forked","autofill::sync","",17,null],[12,"forked","autofill::sync::MergeResult","",19,null],[3,"IncomingState","autofill::sync","",null,null],[14,"sync_merge_field_check","autofill","",null,null],[11,"from","autofill::db::models::address","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"get_hash","","",1,[[],["u64",15]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","autofill::db::models::credit_card","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","autofill::db::models","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","autofill::db::store","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","autofill::db","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","autofill::encryption","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","autofill::error","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","autofill::sync::engine","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","autofill::sync","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"record_name","autofill::db::models::address","",2,[[],["str",15]]],[11,"id","","",2,[[],["guid",3]]],[11,"metadata","","",2,[[],["metadata",3]]],[11,"metadata_mut","","",2,[[],["metadata",3]]],[11,"merge","","Performs a three-way merge between an incoming, local, …",2,[[["option",4]],["mergeresult",4]]],[11,"record_name","autofill::db::models::credit_card","",5,[[],["str",15]]],[11,"id","","",5,[[],["guid",3]]],[11,"metadata","","",5,[[],["metadata",3]]],[11,"metadata_mut","","",5,[[],["metadata",3]]],[11,"merge","","Performs a three-way merge between an incoming, local, …",5,[[["option",4]],["mergeresult",4]]],[11,"from","autofill::db::models::address","",1,[[["internaladdress",3]]]],[11,"from","autofill::db::models::credit_card","",4,[[["internalcreditcard",3]]]],[11,"from","autofill::error","",11,[[["error",4]]]],[11,"from","","",11,[[["error",3]]]],[11,"from","","",11,[[["interrupted",3]]]],[11,"from","","",11,[[["utf8error",3]]]],[11,"from","","",11,[[["error",3]]]],[11,"from","","",11,[[["jwcryptoerror",4]]]],[11,"clone","autofill::db::models::address","",0,[[],["updatableaddressfields",3]]],[11,"clone","","",1,[[],["address",3]]],[11,"clone","","",2,[[],["internaladdress",3]]],[11,"clone","autofill::db::models::credit_card","",3,[[],["updatablecreditcardfields",3]]],[11,"clone","","",4,[[],["creditcard",3]]],[11,"clone","","",5,[[],["internalcreditcard",3]]],[11,"clone","autofill::db::models","",6,[[],["metadata",3]]],[11,"default","autofill::db::models::address","",0,[[],["updatableaddressfields",3]]],[11,"default","","",1,[[],["address",3]]],[11,"default","","",2,[[],["internaladdress",3]]],[11,"default","autofill::db::models::credit_card","",3,[[],["updatablecreditcardfields",3]]],[11,"default","","",4,[[],["creditcard",3]]],[11,"default","","",5,[[],["internalcreditcard",3]]],[11,"default","autofill::db::models","",6,[[],["metadata",3]]],[11,"eq","autofill::db::models::address","",1,[[["address",3]],["bool",15]]],[11,"ne","","",1,[[["address",3]],["bool",15]]],[11,"eq","autofill::db::models","",6,[[["metadata",3]],["bool",15]]],[11,"ne","","",6,[[["metadata",3]],["bool",15]]],[11,"deref","autofill::db::store","",20,[[],["mutex",3]]],[11,"deref","autofill::db","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"fmt","autofill::db::models::address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::db::models::credit_card","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::db::models","",6,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::sync","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::error","",11,[[["formatter",3]],["result",6]]],[11,"hash","autofill::db::models::address","",1,[[]]],[11,"source","autofill::error","",11,[[],[["option",4],["error",8]]]],[11,"initialize","autofill::db::store","",20,[[]]],[11,"collection_name","autofill::sync::engine","",13,[[],[["cow",4],["str",15]]]],[11,"set_local_encryption_key","","",13,[[["str",15]],["result",6]]],[11,"apply_incoming","","",13,[[["incomingchangeset",6],["vec",3],["engine",3]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",13,[[["servertimestamp",3],["vec",3],["guid",3]],["result",6]]],[11,"get_collection_requests","","",13,[[["servertimestamp",3]],[["result",6],["vec",3]]]],[11,"get_sync_assoc","","",13,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",13,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",13,[[],["result",6]]]],"p":[[3,"UpdatableAddressFields"],[3,"Address"],[3,"InternalAddress"],[3,"UpdatableCreditCardFields"],[3,"CreditCard"],[3,"InternalCreditCard"],[3,"Metadata"],[3,"Store"],[3,"StoreImpl"],[3,"AutofillDb"],[3,"EncryptorDecryptor"],[4,"Error"],[8,"SyncEngineStorageImpl"],[3,"ConfigSyncEngine"],[8,"ProcessIncomingRecordImpl"],[8,"ProcessOutgoingRecordImpl"],[8,"SyncRecord"],[4,"MergeResult"],[13,"Merged"],[13,"Forked"],[3,"STORE_FOR_MANAGER"],[3,"EngineConfig"],[3,"IncomingState"]]},\
"cli_support":{"doc":"","i":[[0,"fxa_creds","cli_support","",null,null],[5,"get_default_fxa_config","cli_support::fxa_creds","",null,[[],["config",3]]],[5,"get_cli_fxa","","",null,[[["config",3],["str",15]],[["result",6],["clifxa",3]]]],[3,"CliFxa","","",null,null],[12,"account","","",0,null],[12,"client_init","","",0,null],[12,"tokenserver_url","","",0,null],[12,"root_sync_key","","",0,null],[0,"prompt","cli_support","",null,null],[5,"prompt_string","cli_support::prompt","",null,[[["asref",8],["str",15]],[["option",4],["string",3]]]],[5,"prompt_char","","",null,[[["str",15]],[["char",15],["option",4]]]],[5,"prompt_usize","","",null,[[["asref",8],["str",15]],[["usize",15],["option",4]]]],[5,"init_logging_with","cli_support","",null,[[["str",15]]]],[5,"init_trace_logging","","",null,[[]]],[5,"init_logging","","",null,[[]]],[11,"from","cli_support::fxa_creds","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]]],"p":[[3,"CliFxa"]]},\
"crashtest":{"doc":"Crash Test Helper APIsThe <code>crashtest</code> component offers a …","i":[[5,"trigger_rust_abort","crashtest","Trigger a hard abort inside the Rust code.",null,[[]]],[5,"trigger_rust_panic","","Trigger a panic inside the Rust code.",null,[[]]],[5,"trigger_rust_error","","Trigger an error inside the Rust code.",null,[[],[["crashtesterror",4],["result",4]]]],[4,"CrashTestError","","An error that can be returned from Rust code.",null,null],[13,"ErrorFromTheRustCode","","",0,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"CrashTestError"]]},\
"embedded_uniffi_bindgen":{"doc":"","i":[[5,"main","embedded_uniffi_bindgen","",null,[[],["result",6]]]],"p":[]},\
"error_support":{"doc":"","i":[[0,"backtrace","error_support","A compatibility shim for <code>backtrace</code>.",null,null],[3,"Backtrace","error_support::backtrace","",null,null],[14,"define_error_wrapper","error_support","Define a wrapper around the the provided ErrorKind type. …",null,null],[14,"define_error_conversions","","Define a set of conversions from external error types …",null,null],[14,"define_error","","All the error boilerplate (okay, with a couple exceptions …",null,null],[11,"from","error_support::backtrace","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Backtrace"]]},\
"ffi_support":{"doc":"FFI SupportThis crate implements a support library to …","i":[[0,"handle_map","ffi_support","This module provides a [<code>Handle</code>] type, which you can think …",null,null],[3,"HandleMap","ffi_support::handle_map","<code>HandleMap</code> is a collection type which can hold any type of …",null,null],[17,"MAX_CAPACITY","","The maximum capacity of a [<code>HandleMap</code>]. Attempting to …",null,null],[4,"HandleError","","An error representing the ways a <code>Handle</code> may be invalid.",null,null],[13,"NullHandle","","Identical to invalid handle, but has a slightly more …",0,null],[13,"InvalidHandle","","Returned from [<code>Handle::from_u64</code>] if [<code>Handle::is_valid</code>] …",0,null],[13,"StaleVersion","","Returned from get/get_mut/delete if the handle is stale …",0,null],[13,"IndexPastEnd","","Returned if the handle index references an index past the …",0,null],[13,"WrongMap","","The handle has a map_id for a different map than the one …",0,null],[11,"new","","Create a new <code>HandleMap</code> with the default capacity.",1,[[]]],[11,"new_with_capacity","","Allocate a new <code>HandleMap</code>. Note that the actual capacity …",1,[[["usize",15]]]],[11,"len","","Get the number of entries in the <code>HandleMap</code>.",1,[[],["usize",15]]],[11,"is_empty","","Returns true if the HandleMap is empty.",1,[[],["bool",15]]],[11,"capacity","","Returns the number of slots allocated in the handle map.",1,[[],["usize",15]]],[11,"insert","","Insert an item into the map, and return a handle to it.",1,[[],["handle",3]]],[11,"delete","","Delete an item from the HandleMap.",1,[[["handle",3]],[["handleerror",4],["result",4]]]],[11,"remove","","Remove an item from the HandleMap, returning the old …",1,[[["handle",3]],[["handleerror",4],["result",4]]]],[11,"get","","Get a reference to the item referenced by the handle, or …",1,[[["handle",3]],[["result",4],["handleerror",4]]]],[11,"get_mut","","Get a mut reference to the item referenced by the handle, …",1,[[["handle",3]],[["handleerror",4],["result",4]]]],[3,"Handle","","A Handle we allow to be returned over the FFI by …",null,null],[11,"into_u64","","Convert a <code>Handle</code> to a <code>u64</code>. You can also use <code>Into::into</code> …",2,[[],["u64",15]]],[11,"from_u64","","Convert a <code>u64</code> to a <code>Handle</code>. Inverse of <code>into_u64</code>. We also …",2,[[["u64",15]],[["result",4],["handleerror",4]]]],[11,"is_valid","","Returns whether or not <code>v</code> makes a bit pattern that could …",2,[[["u64",15]],["bool",15]]],[3,"ConcurrentHandleMap","","<code>ConcurrentHandleMap</code> is a relatively thin wrapper around …",null,null],[12,"map","","The underlying map. Public so that more advanced use-cases…",3,null],[11,"new","","Construct a new <code>ConcurrentHandleMap</code>.",3,[[]]],[11,"len","","Get the number of entries in the <code>ConcurrentHandleMap</code>.",3,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>ConcurrentHandleMap</code> is empty.",3,[[],["bool",15]]],[11,"insert","","Insert an item into the map, returning the newly …",3,[[],["handle",3]]],[11,"delete","","Remove an item from the map.",3,[[["handle",3]],[["handleerror",4],["result",4]]]],[11,"delete_u64","","Convenient wrapper for <code>delete</code> which takes a <code>u64</code> that it …",3,[[["u64",15]],[["handleerror",4],["result",4]]]],[11,"remove","","Remove an item from the map, returning either the item, …",3,[[["handle",3]],[["option",4],["result",4],["handleerror",4]]]],[11,"remove_u64","","Convenient wrapper for <code>remove</code> which takes a <code>u64</code> that it …",3,[[["u64",15]],[["option",4],["result",4],["handleerror",4]]]],[11,"get","","Call <code>callback</code> with a non-mutable reference to the item …",3,[[["handle",3]],["result",4]]],[11,"get_mut","","Call <code>callback</code> with a mutable reference to the item from …",3,[[["handle",3]],["result",4]]],[11,"get_u64","","Convenient wrapper for <code>get</code> which takes a <code>u64</code> that it will …",3,[[["u64",15]],["result",4]]],[11,"get_mut_u64","","Convenient wrapper for <code>get_mut</code> which takes a <code>u64</code> that it …",3,[[["u64",15]],["result",4]]],[11,"call_with_result_mut","","Helper that performs both a [<code>call_with_result</code>] and <code>get</code>.",3,[[["externerror",3],["u64",15]]]],[11,"call_with_result","","Helper that performs both a [<code>call_with_result</code>] and <code>get</code>.",3,[[["externerror",3],["u64",15]]]],[11,"call_with_output","","Helper that performs both a [<code>call_with_output</code>] and <code>get</code>.",3,[[["externerror",3],["u64",15]]]],[11,"call_with_output_mut","","Helper that performs both a [<code>call_with_output</code>] and <code>get_mut</code>…",3,[[["externerror",3],["u64",15]]]],[11,"insert_with_result","","Use <code>constructor</code> to create and insert a <code>T</code>, while inside a […",3,[[["externerror",3]],["u64",15]]],[11,"insert_with_output","","Equivalent to <code>insert_with_result</code> for the case where the …",3,[[["externerror",3]],["u64",15]]],[0,"abort_on_panic","ffi_support","This module exists just to expose a variant of […",null,null],[5,"with_abort_on_panic","ffi_support::abort_on_panic","A helper function useful for cases where you\'d like to …",null,[[]]],[5,"call_with_result","","Same as the root <code>call_with_result</code>, but aborts on panic …",null,[[["externerror",3]]]],[5,"call_with_output","","Same as the root <code>call_with_output</code>, but aborts on panic …",null,[[]]],[3,"ExternError","ffi_support","Represents an error that occured within rust, storing …",null,null],[3,"ErrorCode","","A wrapper around error codes, which is represented …",null,null],[3,"FfiStr","","<code>FfiStr<\'a></code> is a safe (<code>#[repr(transparent)]</code>) wrapper …",null,null],[8,"IntoFfi","","This trait is used to return types over the FFI. It …",null,null],[16,"Value","","This type must be:",4,null],[10,"ffi_default","","Return an \'empty\' value. This is what\'s passed back to C …",4,[[]]],[10,"into_ffi_value","","Convert ourselves into a value we can pass back to C with …",4,[[]]],[5,"rust_string_to_c","","Convert a rust string into a NUL-terminated utf-8 string …",null,[[]]],[5,"opt_rust_string_to_c","","Variant of [<code>rust_string_to_c</code>] which takes an Option, and …",null,[[["option",4]]]],[5,"destroy_c_string","","Free the memory of a string created by [<code>rust_string_to_c</code>] …",null,[[]]],[5,"rust_str_from_c","","Convert a null-terminated C string to a rust <code>str</code>. This …",null,[[],["str",15]]],[5,"opt_rust_str_from_c","","Same as <code>rust_string_from_c</code>, but returns None if <code>c_string</code> …",null,[[],[["option",4],["str",15]]]],[5,"rust_string_from_c","","Convert a null-terminated C into an owned rust string, …",null,[[],["string",3]]],[5,"opt_rust_string_from_c","","Same as <code>rust_string_from_c</code>, but returns None if <code>c_string</code> …",null,[[],[["string",3],["option",4]]]],[5,"call_with_result","","Call a callback that returns a <code>Result<T, E></code> while:",null,[[["externerror",3]]]],[5,"call_with_output","","Call a callback that returns a <code>T</code> while:",null,[[["externerror",3]]]],[3,"ByteBuffer","","ByteBuffer is a struct that represents an array of bytes …",null,null],[11,"new_with_size","","Creates a <code>ByteBuffer</code> of the requested size, zero-filled.",5,[[["usize",15]]]],[11,"from_vec","","Creates a <code>ByteBuffer</code> instance from a <code>Vec</code> instance.",5,[[["vec",3],["u8",15]]]],[11,"as_slice","","View the data inside this <code>ByteBuffer</code> as a <code>&[u8]</code>.",5,[[]]],[11,"as_mut_slice","","View the data inside this <code>ByteBuffer</code> as a <code>&mut [u8]</code>.",5,[[]]],[11,"into_vec","","Deprecated alias for [<code>ByteBuffer::destroy_into_vec</code>].",5,[[],[["vec",3],["u8",15]]]],[11,"destroy_into_vec","","Convert this <code>ByteBuffer</code> into a Vec, taking ownership of …",5,[[],[["vec",3],["u8",15]]]],[11,"destroy","","Reclaim memory stored in this ByteBuffer.",5,[[]]],[14,"implement_into_ffi_by_pointer","","Implements [<code>IntoFfi</code>] for the provided types (more than …",null,null],[14,"implement_into_ffi_by_json","","Implements [<code>IntoFfi</code>] for the provided types (more than …",null,null],[14,"implement_into_ffi_by_protobuf","","Implements [<code>IntoFfi</code>] for the provided types (more than …",null,null],[14,"implement_into_ffi_by_delegation","","Implement IntoFfi for a type by converting through …",null,null],[14,"define_string_destructor","","For a number of reasons (name collisions are a big one, …",null,null],[14,"define_box_destructor","","Define a (public) destructor for a type that was …",null,null],[14,"define_bytebuffer_destructor","","Define a (public) destructor for the ByteBuffer type.",null,null],[14,"define_handle_map_deleter","","Define a (public) destructor for a type that lives inside …",null,null],[14,"static_assert","","Force a compile error if the condition is not met. …",null,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","ffi_support::handle_map","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","ffi_support","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"ffi_default","ffi_support::handle_map","",2,[[],["u64",15]]],[11,"into_ffi_value","","",2,[[],["u64",15]]],[11,"ffi_default","ffi_support","",5,[[]]],[11,"into_ffi_value","","",5,[[]]],[11,"from","","",6,[[["box",3],["any",8]]]],[11,"from","","",6,[[["handleerror",4]]]],[11,"from","ffi_support::handle_map","",2,[[["u64",15]]]],[11,"from","ffi_support","",5,[[["vec",3],["u8",15]]]],[11,"clone","","",7,[[],["errorcode",3]]],[11,"clone","ffi_support::handle_map","",1,[[],["handlemap",3]]],[11,"clone","","",0,[[],["handleerror",4]]],[11,"clone","","",2,[[],["handle",3]]],[11,"default","ffi_support","",6,[[]]],[11,"default","","",7,[[],["errorcode",3]]],[11,"default","ffi_support::handle_map","",1,[[]]],[11,"default","","",3,[[]]],[11,"default","ffi_support","",5,[[]]],[11,"cmp","","",7,[[["errorcode",3]],["ordering",4]]],[11,"cmp","ffi_support::handle_map","",0,[[["handleerror",4]],["ordering",4]]],[11,"eq","ffi_support","",6,[[["externerror",3]],["bool",15]]],[11,"ne","","",6,[[["externerror",3]],["bool",15]]],[11,"eq","","",7,[[["errorcode",3]],["bool",15]]],[11,"ne","","",7,[[["errorcode",3]],["bool",15]]],[11,"eq","","",8,[[["ffistr",3]],["bool",15]]],[11,"eq","","",8,[[["str",15]],["bool",15]]],[11,"eq","","",8,[[["str",15]],["bool",15]]],[11,"eq","ffi_support::handle_map","",0,[[["handleerror",4]],["bool",15]]],[11,"eq","","",2,[[["handle",3]],["bool",15]]],[11,"ne","","",2,[[["handle",3]],["bool",15]]],[11,"partial_cmp","ffi_support","",7,[[["errorcode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["errorcode",3]],["bool",15]]],[11,"le","","",7,[[["errorcode",3]],["bool",15]]],[11,"gt","","",7,[[["errorcode",3]],["bool",15]]],[11,"ge","","",7,[[["errorcode",3]],["bool",15]]],[11,"partial_cmp","ffi_support::handle_map","",0,[[["handleerror",4]],[["option",4],["ordering",4]]]],[11,"fmt","ffi_support","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","ffi_support::handle_map","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"index","","",1,[[["handle",3]]]],[11,"new_error","ffi_support","Construct an ExternError representing failure from a code …",6,[[["errorcode",3]]]],[11,"success","","Returns a ExternError representing a success. Also …",6,[[]]],[11,"consume_and_log_if_error","","Helper for the case where we aren\'t exposing this back …",6,[[]]],[11,"get_code","","Get the <code>code</code> property.",6,[[],["errorcode",3]]],[11,"get_raw_message","","Get the <code>message</code> property as a pointer to c_char.",6,[[]]],[11,"get_message","","Get the <code>message</code> property as an [<code>FfiStr</code>]",6,[[],["ffistr",3]]],[11,"get_and_consume_message","","Get the <code>message</code> property as a String, or None if this is …",6,[[],[["string",3],["option",4]]]],[11,"manually_release","","Manually release the memory behind this string. You …",6,[[]]],[18,"SUCCESS","","The ErrorCode used for success.",7,null],[18,"PANIC","","The ErrorCode used for panics. It\'s unlikely you need to …",7,null],[18,"INVALID_HANDLE","","The ErrorCode used for handle map errors.",7,null],[11,"new","","Construct an error code from an integer code.",7,[[["i32",15]]]],[11,"code","","Get the raw numeric value of this ErrorCode.",7,[[],["i32",15]]],[11,"is_success","","Returns whether or not this is a success code.",7,[[],["bool",15]]],[11,"from_raw","","Construct an <code>FfiStr</code> from a raw pointer.",8,[[]]],[11,"from_cstr","","Construct a FfiStr from a <code>std::ffi::CStr</code>. This is …",8,[[["cstr",3]]]],[11,"as_str","","Get an <code>&str</code> out of the <code>FfiStr</code>. This will panic in any …",8,[[],["str",15]]],[11,"as_opt_str","","Get an <code>Option<&str></code> out of the <code>FfiStr</code>. If this stores a …",8,[[],[["option",4],["str",15]]]],[11,"into_opt_string","","Get an <code>Option<String></code> out of the <code>FfiStr</code>. Returns <code>None</code> if …",8,[[],[["string",3],["option",4]]]],[11,"into_string","","Get a <code>String</code> out of a <code>FfiStr</code>. This function is essential a…",8,[[],["string",3]]]],"p":[[4,"HandleError"],[3,"HandleMap"],[3,"Handle"],[3,"ConcurrentHandleMap"],[8,"IntoFfi"],[3,"ByteBuffer"],[3,"ExternError"],[3,"ErrorCode"],[3,"FfiStr"]]},\
"fxa_client":{"doc":"Firefox Accounts ClientThe fxa-client component lets …","i":[[0,"internal","fxa_client","Internal implementation details for the fxa_client crate.",null,null],[0,"config","fxa_client::internal","",null,null],[3,"Config","fxa_client::internal::config","",null,null],[12,"client_id","","",0,null],[12,"redirect_uri","","",0,null],[3,"RemoteConfig","","<code>RemoteConfig</code> struct stores configuration values from the …",null,null],[11,"release","","",0,[[["str",15]]]],[11,"stable_dev","","",0,[[["str",15]]]],[11,"stage_dev","","",0,[[["str",15]]]],[11,"china","","",0,[[["str",15]]]],[11,"localdev","","",0,[[["str",15]]]],[11,"new","","",0,[[["str",15]]]],[11,"override_token_server_url","","Override the token server URL that would otherwise be …",0,[[["str",15]]]],[11,"content_url","","",0,[[],[["url",3],["result",6]]]],[11,"content_url_path","","",0,[[["str",15]],[["url",3],["result",6]]]],[11,"client_config_url","","",0,[[],[["url",3],["result",6]]]],[11,"openid_config_url","","",0,[[],[["url",3],["result",6]]]],[11,"connect_another_device_url","","",0,[[],[["url",3],["result",6]]]],[11,"pair_url","","",0,[[],[["url",3],["result",6]]]],[11,"pair_supp_url","","",0,[[],[["url",3],["result",6]]]],[11,"oauth_force_auth_url","","",0,[[],[["url",3],["result",6]]]],[11,"settings_url","","",0,[[],[["url",3],["result",6]]]],[11,"settings_clients_url","","",0,[[],[["url",3],["result",6]]]],[11,"auth_url","","",0,[[],[["url",3],["result",6]]]],[11,"auth_url_path","","",0,[[["str",15]],[["url",3],["result",6]]]],[11,"profile_url","","",0,[[],[["url",3],["result",6]]]],[11,"profile_url_path","","",0,[[["str",15]],[["url",3],["result",6]]]],[11,"oauth_url","","",0,[[],[["url",3],["result",6]]]],[11,"oauth_url_path","","",0,[[["str",15]],[["url",3],["result",6]]]],[11,"token_server_endpoint_url","","",0,[[],[["url",3],["result",6]]]],[11,"authorization_endpoint","","",0,[[],[["url",3],["result",6]]]],[11,"issuer","","",0,[[],[["url",3],["result",6]]]],[11,"jwks_uri","","",0,[[],[["url",3],["result",6]]]],[11,"token_endpoint","","",0,[[],[["url",3],["result",6]]]],[11,"introspection_endpoint","","",0,[[],[["url",3],["result",6]]]],[11,"userinfo_endpoint","","",0,[[],[["url",3],["result",6]]]],[0,"device","fxa_client::internal","",null,null],[3,"Location","fxa_client::internal::device","",null,null],[12,"city","","",1,null],[12,"country","","",1,null],[12,"state","","",1,null],[12,"state_code","","",1,null],[4,"Type","","",null,null],[13,"Desktop","","",2,null],[13,"Mobile","","",2,null],[13,"Tablet","","",2,null],[13,"VR","","",2,null],[13,"TV","","",2,null],[13,"Unknown","","",2,null],[3,"Device","","",null,null],[12,"common","","",3,null],[12,"is_current_device","","",3,null],[12,"location","","",3,null],[12,"last_access_time","","",3,null],[3,"PushSubscription","","",null,null],[12,"endpoint","","",4,null],[12,"public_key","","",4,null],[12,"auth_key","","",4,null],[4,"CommandFetchReason","","The reason we are fetching commands.",null,null],[13,"Poll","","We are polling in-case we\'ve missed some.",5,null],[13,"Push","","We got a push notification with the index of the message.",5,null],[4,"Capability","","",null,null],[13,"SendTab","","",6,null],[0,"error","fxa_client::internal","",null,null],[4,"ErrorKind","fxa_client::internal::error","",null,null],[13,"BackoffError","","",7,null],[13,"UnknownOAuthState","","",7,null],[13,"MultipleScopesRequested","","",7,null],[13,"NoCachedToken","","",7,null],[13,"NoScopedKey","","",7,null],[13,"NoRefreshToken","","",7,null],[13,"NoSessionToken","","",7,null],[13,"NoMigrationData","","",7,null],[13,"NoCurrentDeviceId","","",7,null],[13,"UnknownTargetDevice","","",7,null],[13,"UnrecoverableServerError","","",7,null],[13,"IllegalState","","",7,null],[13,"UnknownCommand","","",7,null],[13,"SendTabDiagnosisError","","",7,null],[13,"XorLengthMismatch","","",7,null],[13,"OriginMismatch","","",7,null],[13,"MismatchedKeys","","",7,null],[13,"ScopeNotAllowed","","",7,null],[13,"UnsupportedCommand","","",7,null],[13,"MissingUrlParameter","","",7,null],[13,"NullPointer","","",7,null],[13,"InvalidBufferLength","","",7,null],[13,"AuthCircuitBreakerError","","",7,null],[13,"RemoteError","","",7,null],[12,"code","fxa_client::internal::error::ErrorKind","",8,null],[12,"errno","","",8,null],[12,"error","","",8,null],[12,"message","","",8,null],[12,"info","","",8,null],[13,"CryptoError","fxa_client::internal::error","",7,null],[13,"EceError","","",7,null],[13,"HexDecodeError","","",7,null],[13,"Base64Decode","","",7,null],[13,"JsonError","","",7,null],[13,"JwCryptoError","","",7,null],[13,"UTF8DecodeError","","",7,null],[13,"RequestError","","",7,null],[13,"MalformedUrl","","",7,null],[13,"UnexpectedStatus","","",7,null],[13,"SyncError","","",7,null],[13,"HawkError","","",7,null],[13,"IntegerConversionError","","",7,null],[6,"Result","","",null,null],[3,"Error","","",null,null],[11,"kind","","",9,[[],["errorkind",4]]],[11,"backtrace","","",9,[[],[["mutex",3],["option",4]]]],[4,"IncomingDeviceCommand","fxa_client::internal","",null,null],[13,"TabReceived","","",10,null],[12,"sender","fxa_client::internal::IncomingDeviceCommand","",11,null],[12,"payload","","",11,null],[3,"FirefoxAccount","fxa_client::internal","",null,null],[11,"with_config","","Create a new <code>FirefoxAccount</code> instance using a <code>Config</code>.",12,[[["config",3]]]],[11,"new","","Create a new <code>FirefoxAccount</code> instance.",12,[[["option",4],["str",15]]]],[11,"from_json","","Restore a <code>FirefoxAccount</code> instance from a serialized state …",12,[[["str",15]],["result",6]]],[11,"to_json","","Serialize a <code>FirefoxAccount</code> instance internal state to be …",12,[[],[["string",3],["result",6]]]],[11,"clear_devices_and_attached_clients_cache","","Clear the attached clients and devices cache",12,[[]]],[11,"start_over","","Clear the whole persisted/cached state of the account, …",12,[[]]],[11,"get_token_server_endpoint_url","","Get the Sync Token Server endpoint URL.",12,[[],[["string",3],["result",6]]]],[11,"get_pairing_authority_url","","Get the pairing URL to navigate to on the Auth side …",12,[[],[["string",3],["result",6]]]],[11,"get_connection_success_url","","Get the \\\"connection succeeded\\\" page URL. It is typically …",12,[[],[["string",3],["result",6]]]],[11,"get_manage_account_url","","Get the \\\"manage account\\\" page URL. It is typically used …",12,[[["str",15]],[["string",3],["result",6]]]],[11,"get_manage_devices_url","","Get the \\\"manage devices\\\" page URL. It is typically used …",12,[[["str",15]],[["string",3],["result",6]]]],[11,"disconnect","","Disconnect from the account and optionally destroy our …",12,[[]]],[4,"FxaError","fxa_client","Generic error type thrown by many [<code>FirefoxAccount</code>] …",null,null],[13,"Authentication","","Thrown when there was a problem with the authentication …",13,null],[13,"Network","","Thrown if an operation fails due to network access …",13,null],[13,"NoExistingAuthFlow","","Thrown if the application attempts to complete an OAuth …",13,null],[13,"WrongAuthFlow","","Thrown if the application attempts to complete an OAuth …",13,null],[13,"Panic","","Thrown if there is a panic in the underlying Rust code.",13,null],[13,"Other","","A catch-all for other unspecified errors.",13,null],[3,"FirefoxAccount","","Object representing the signed-in state of an application.",null,null],[11,"new","","Create a new [<code>FirefoxAccount</code>] instance, not connected to …",14,[[["option",4],["str",15]],["firefoxaccount",3]]],[11,"from_json","","Restore a [<code>FirefoxAccount</code>] instance from serialized state.",14,[[["str",15]],[["result",4],["fxaerror",4],["firefoxaccount",3]]]],[11,"to_json","","Save current state to a JSON string.",14,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"begin_oauth_flow","","Initiate a web-based OAuth sign-in flow.",14,[[["metricsparams",3],["option",4],["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_pairing_authority_url","","Get the URL at which to begin a device-pairing signin …",14,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"begin_pairing_flow","","Initiate a device-pairing sign-in flow.",14,[[["metricsparams",3],["option",4],["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"complete_oauth_flow","","Complete an OAuth flow.",14,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"check_authorization_status","","Check authorization status for this application.",14,[[],[["fxaerror",4],["authorizationinfo",3],["result",4]]]],[11,"disconnect","","Disconnect from the user\'s account.",14,[[]]],[11,"get_profile","","Get profile information for the signed-in user, if any.",14,[[["bool",15]],[["profile",3],["result",4],["fxaerror",4]]]],[11,"initialize_device","","Create a new device record for this application.",14,[[["devicetype",4],["vec",3],["devicecapability",4],["str",15]],[["fxaerror",4],["result",4]]]],[11,"get_current_device_id","","Get the device id registered for this application.",14,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_devices","","Get the list of devices registered on the user\'s account.",14,[[["bool",15]],[["vec",3],["fxaerror",4],["result",4]]]],[11,"get_attached_clients","","Get the list of all client applications attached to the …",14,[[],[["vec",3],["fxaerror",4],["result",4]]]],[11,"set_device_name","","Update the display name used for this application …",14,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"clear_device_name","","Clear any custom display name used for this application …",14,[[],[["fxaerror",4],["result",4]]]],[11,"ensure_capabilities","","Ensure that the device record has a specific set of …",14,[[["vec",3],["devicecapability",4]],[["fxaerror",4],["result",4]]]],[11,"set_push_subscription","","Set or update a push subscription endpoint for this …",14,[[["devicepushsubscription",3]],[["fxaerror",4],["result",4]]]],[11,"handle_push_message","","Process and respond to server-delivered account update …",14,[[["str",15]],[["fxaerror",4],["result",4],["vec",3]]]],[11,"poll_device_commands","","Poll the server for any pending device commands.",14,[[],[["result",4],["fxaerror",4],["vec",3]]]],[11,"send_single_tab","","Use device commands to send a single tab to another …",14,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"get_token_server_endpoint_url","","Get the URL at which to access the user\'s sync data.",14,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_connection_success_url","","Get a URL which shows a \\\"successfully connceted!\\\" message.",14,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_manage_account_url","","Get a URL at which the user can manage their account and …",14,[[["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_manage_devices_url","","Get a URL at which the user can manage the devices …",14,[[["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_access_token","","Get a short-lived OAuth access token for the user\'s …",14,[[["i64",15],["option",4],["str",15]],[["result",4],["fxaerror",4],["accesstokeninfo",3]]]],[11,"get_session_token","","Get the session token for the user\'s account, if one is …",14,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"handle_session_token_change","","Update the stored session token for the user\'s account.",14,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"authorize_code_using_session_token","","Create a new OAuth authorization code using the stored …",14,[[["authorizationparameters",3]],[["fxaerror",4],["string",3],["result",4]]]],[11,"clear_access_token_cache","","Clear the access token cache in response to an auth …",14,[[]]],[11,"gather_telemetry","","Collect and return telemetry about send-tab attempts.",14,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"migrate_from_session_token","","Sign in by using legacy session-token state.",14,[[["bool",15],["str",15]],[["fxamigrationresult",3],["fxaerror",4],["result",4]]]],[11,"retry_migrate_from_session_token","","Retry a previously failed migration from legacy …",14,[[],[["fxamigrationresult",3],["fxaerror",4],["result",4]]]],[11,"is_in_migration_state","","Check for a previously failed migration from legacy …",14,[[],["migrationstate",4]]],[3,"AuthorizationInfo","","Information about the authorization state of the …",null,null],[12,"active","","",15,null],[3,"MetricsParams","","Additional metrics tracking parameters to include in an …",null,null],[12,"parameters","","",16,null],[3,"AccessTokenInfo","","An OAuth access token, with its associated keys and …",null,null],[12,"scope","","The scope of access granted by token.",17,null],[12,"token","","The access token itself.",17,null],[12,"key","","The client-side encryption key associated with this scope.",17,null],[12,"expires_at","","The expiry time of the token, in seconds.",17,null],[3,"ScopedKey","","A cryptograpic key associated with an OAuth scope.",null,null],[12,"kty","","The type of key.",18,null],[12,"scope","","The OAuth scope with which this key is associated.",18,null],[12,"k","","The key material, as base64-url-encoded bytes.",18,null],[12,"kid","","An opaque unique identifier for this key.",18,null],[3,"AuthorizationParameters","","Parameters provided in an incoming OAuth request.",null,null],[12,"client_id","","",19,null],[12,"scope","","",19,null],[12,"state","","",19,null],[12,"access_type","","",19,null],[12,"code_challenge","","",19,null],[12,"code_challenge_method","","",19,null],[12,"keys_jwk","","",19,null],[3,"Device","","A device connected to the user\'s account.",null,null],[12,"id","","",20,null],[12,"display_name","","",20,null],[12,"device_type","","",20,null],[12,"capabilities","","",20,null],[12,"push_subscription","","",20,null],[12,"push_endpoint_expired","","",20,null],[12,"is_current_device","","",20,null],[12,"last_access_time","","",20,null],[4,"DeviceType","","Enumeration for the different types of device.",null,null],[13,"Desktop","","",21,null],[13,"Mobile","","",21,null],[13,"Tablet","","",21,null],[13,"VR","","",21,null],[13,"TV","","",21,null],[13,"Unknown","","",21,null],[3,"DevicePushSubscription","","Details of a web-push subscription endpoint.",null,null],[12,"endpoint","","",22,null],[12,"public_key","","",22,null],[12,"auth_key","","",22,null],[4,"DeviceCapability","","A \\\"capability\\\" offered by a device.",null,null],[13,"SendTab","","",23,null],[4,"AccountEvent","","An event that happened on the user\'s account.",null,null],[13,"CommandReceived","","Sent when another device has invoked a command for this …",24,null],[12,"command","fxa_client::AccountEvent","",25,null],[13,"ProfileUpdated","fxa_client","Sent when the user has modified their account profile …",24,null],[13,"AccountAuthStateChanged","","Sent when when there has been a change in authorization …",24,null],[13,"AccountDestroyed","","Sent when the user deletes their Firefox Account.",24,null],[13,"DeviceConnected","","Sent when a new device connects to the user\'s account.",24,null],[12,"device_name","fxa_client::AccountEvent","",26,null],[13,"DeviceDisconnected","fxa_client","Sent when a device disconnects from the user\'s account.",24,null],[12,"device_id","fxa_client::AccountEvent","",27,null],[12,"is_local_device","","",27,null],[4,"IncomingDeviceCommand","fxa_client","A command invoked by another device.",null,null],[13,"TabReceived","","Indicates that a tab has been sent to this device.",28,null],[12,"sender","fxa_client::IncomingDeviceCommand","",29,null],[12,"payload","","",29,null],[3,"SendTabPayload","fxa_client","The payload sent when invoking a \\\"send tab\\\" command.",null,null],[12,"entries","","The navigation history of the sent tab.",30,null],[12,"flow_id","","A unique identifier to be included in send-tab metrics.",30,null],[12,"stream_id","","A unique identifier to be included in send-tab metrics.",30,null],[3,"TabHistoryEntry","","An individual entry in the navigation history of a sent …",null,null],[12,"title","","",31,null],[12,"url","","",31,null],[3,"AttachedClient","","A client connected to the user\'s account.",null,null],[12,"client_id","","",32,null],[12,"device_id","","",32,null],[12,"device_type","","",32,null],[12,"is_current_session","","",32,null],[12,"name","","",32,null],[12,"created_time","","",32,null],[12,"last_access_time","","",32,null],[12,"scope","","",32,null],[3,"Profile","","Information about the user that controls a Firefox …",null,null],[12,"uid","","The user\'s account uid",33,null],[12,"email","","The user\'s current primary email address.",33,null],[12,"display_name","","The user\'s preferred textual display name.",33,null],[12,"avatar","","The URL of a profile picture representing the user.",33,null],[12,"is_default_avatar","","Whether the <code>avatar</code> URL represents the default avatar …",33,null],[4,"MigrationState","","The current state migration from legacy sign-in data.",null,null],[13,"None","","No in-flight migration.",34,null],[13,"CopySessionToken","","An in-flight migration that will copy the sessionToken.",34,null],[13,"ReuseSessionToken","","An in-flight migration that will re-use the sessionToken.",34,null],[3,"FxAMigrationResult","","Statistics about the completion of a migration from …",null,null],[12,"total_duration","","The time taken to migrate, in milliseconds.",35,null],[11,"from","fxa_client::internal","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","fxa_client::internal::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","fxa_client::internal::device","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"get_hash","","",6,[[],["u64",15]]],[11,"vzip","","",6,[[]]],[11,"from","fxa_client::internal::error","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","fxa_client::internal","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","fxa_client","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","fxa_client::internal::device","",6,[[["devicecapability",4]]]],[11,"from","fxa_client","",23,[[["capability",4]]]],[11,"from","","",21,[[["type",4]]]],[11,"from","fxa_client::internal::device","",2,[[["devicetype",4]]]],[11,"from","fxa_client::internal::error","",7,[[["error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["fromhexerror",4]]]],[11,"from","","",7,[[["decodeerror",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["jwcryptoerror",4]]]],[11,"from","","",7,[[["fromutf8error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["parseerror",4]]]],[11,"from","","",7,[[["unexpectedstatus",3]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["tryfrominterror",3]]]],[11,"from","","",9,[[["errorkind",4]],["error",3]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","","",9,[[["fromhexerror",4]]]],[11,"from","","",9,[[["decodeerror",4]]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["jwcryptoerror",4]]]],[11,"from","","",9,[[["fromutf8error",3]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","","",9,[[["unexpectedstatus",3]]]],[11,"from","","",9,[[["parseerror",4]]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","","",9,[[["tryfrominterror",3]]]],[11,"from","fxa_client","",13,[[["error",3]],["fxaerror",4]]],[11,"from","fxa_client::internal::device","",4,[[["devicepushsubscription",3]]]],[11,"from","fxa_client","",22,[[["pushsubscription",3]]]],[11,"clone","fxa_client::internal","",10,[[],["incomingdevicecommand",4]]],[11,"clone","fxa_client::internal::config","",0,[[],["config",3]]],[11,"clone","fxa_client::internal::device","",5,[[],["commandfetchreason",4]]],[11,"clone","","",6,[[],["capability",4]]],[11,"clone","","",4,[[],["pushsubscription",3]]],[11,"clone","","",2,[[],["devicetype",4]]],[11,"clone","","",1,[[],["devicelocation",3]]],[11,"clone","","",3,[[],["getdeviceresponse",3]]],[11,"clone","fxa_client","",18,[[],["scopedkey",3]]],[11,"eq","fxa_client::internal::device","",6,[[["capability",4]],["bool",15]]],[11,"deref","","",3,[[],["deviceresponsecommon",3]]],[11,"fmt","fxa_client::internal","",10,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::config","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::error","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::device","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::error","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client","",13,[[["formatter",3]],["result",6]]],[11,"hash","fxa_client::internal::device","",6,[[]]],[11,"try_from","fxa_client","",28,[[["incomingdevicecommand",4]],["result",6]]],[11,"try_from","","",20,[[["device",3]],["result",6]]],[11,"try_from","","",19,[[["url",3]],["result",6]]],[11,"source","fxa_client::internal::error","",7,[[],[["error",8],["option",4]]]],[11,"deserialize","fxa_client::internal::config","",0,[[],["result",4]]],[11,"deserialize","fxa_client::internal::device","",6,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","fxa_client","",18,[[],["result",4]]],[11,"serialize","fxa_client::internal::config","",0,[[],["result",4]]],[11,"serialize","fxa_client::internal::device","",6,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","fxa_client","",18,[[],["result",4]]],[11,"get_devices","fxa_client::internal","Fetches the list of devices from the current account …",12,[[["bool",15]],[["vec",3],["result",6]]]],[11,"get_current_device","","",12,[[],[["option",4],["result",6]]]],[11,"initialize_device","","Initalizes our own device, most of the time this will be …",12,[[["type",4],["str",15]],["result",6]]],[11,"ensure_capabilities","","Register a set of device capabilities against the current …",12,[[],["result",6]]],[11,"poll_device_commands","","Poll and parse any pending available command for our …",12,[[["commandfetchreason",4]],[["result",6],["vec",3]]]],[11,"ios_fetch_device_command","","Retrieve and parse a specific command designated by its …",12,[[["u64",15]],[["incomingdevicecommand",4],["result",6]]]],[11,"set_device_name","","",12,[[["str",15]],["result",6]]],[11,"clear_device_name","","",12,[[],["result",6]]],[11,"set_push_subscription","","",12,[[["pushsubscription",3]],["result",6]]],[11,"get_current_device_id","","Retrieve the current device id from state",12,[[],[["string",3],["result",6]]]],[11,"migrate_from_session_token","","Migrate from a logged-in with a sessionToken Firefox …",12,[[["bool",15],["str",15]],[["fxamigrationresult",3],["result",6]]]],[11,"is_in_migration_state","","Check if the client is in a pending migration state",12,[[],["migrationstate",4]]],[11,"try_migration","","",12,[[],[["fxamigrationresult",3],["result",6]]]],[11,"get_attached_clients","","Fetches the list of attached clients connected to the …",12,[[],[["result",6],["vec",3]]]],[11,"get_access_token","","Fetch a short-lived access token using the saved refresh …",12,[[["u64",15],["option",4],["str",15]],[["result",6],["accesstokeninfo",3]]]],[11,"get_session_token","","Retrieve the current session token from state",12,[[],[["string",3],["result",6]]]],[11,"check_authorization_status","","Check whether user is authorized using our refresh token.",12,[[],[["result",6],["introspectinfo",3]]]],[11,"begin_pairing_flow","","Initiate a pairing flow and return a URL that should be …",12,[[["metricsparams",3],["option",4],["str",15]],[["string",3],["result",6]]]],[11,"begin_oauth_flow","","Initiate an OAuth login flow and return a URL that should …",12,[[["metricsparams",3],["option",4],["str",15]],[["string",3],["result",6]]]],[11,"authorize_code_using_session_token","","Fetch an OAuth code for a particular client using a …",12,[[["authorizationparameters",3]],[["string",3],["result",6]]]],[11,"complete_oauth_flow","","Complete an OAuth flow initiated in <code>begin_oauth_flow</code> or …",12,[[["str",15]],["result",6]]],[11,"handle_session_token_change","","Typically called during a password change flow. …",12,[[["str",15]],["result",6]]],[11,"clear_access_token_cache","","<strong>💾 This method may alter the persisted account state.</strong>",12,[[]]],[11,"get_profile","","Fetch the profile for the user. This method will …",12,[[["bool",15]],[["profile",3],["result",6]]]],[11,"handle_push_message","","Handle any incoming push message payload coming from the …",12,[[["str",15]],[["result",6],["vec",3]]]],[11,"key_bytes","fxa_client","",18,[[],[["result",6],["vec",3]]]],[11,"send_single_tab","fxa_client::internal","Send a single tab to another device designated by its …",12,[[["str",15]],["result",6]]],[11,"gather_telemetry","","Gathers and resets telemetry for this account instance. …",12,[[],[["string",3],["result",6]]]]],"p":[[3,"Config"],[3,"Location"],[4,"Type"],[3,"Device"],[3,"PushSubscription"],[4,"CommandFetchReason"],[4,"Capability"],[4,"ErrorKind"],[13,"RemoteError"],[3,"Error"],[4,"IncomingDeviceCommand"],[13,"TabReceived"],[3,"FirefoxAccount"],[4,"FxaError"],[3,"FirefoxAccount"],[3,"AuthorizationInfo"],[3,"MetricsParams"],[3,"AccessTokenInfo"],[3,"ScopedKey"],[3,"AuthorizationParameters"],[3,"Device"],[4,"DeviceType"],[3,"DevicePushSubscription"],[4,"DeviceCapability"],[4,"AccountEvent"],[13,"CommandReceived"],[13,"DeviceConnected"],[13,"DeviceDisconnected"],[4,"IncomingDeviceCommand"],[13,"TabReceived"],[3,"SendTabPayload"],[3,"TabHistoryEntry"],[3,"AttachedClient"],[3,"Profile"],[4,"MigrationState"],[3,"FxAMigrationResult"],[3,"RemoteConfig"]]},\
"interrupt_support":{"doc":"","i":[[8,"Interruptee","interrupt_support","Represents the state of something that may be …",null,null],[10,"was_interrupted","","",0,[[],["bool",15]]],[11,"err_if_interrupted","","",0,[[],[["interrupted",3],["result",4]]]],[3,"NeverInterrupts","","A convenience implementation, should only be used in …",null,null],[3,"Interrupted","","The error returned by err_if_interrupted.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"was_interrupted","","",1,[[],["bool",15]]],[11,"clone","","",2,[[],["interrupted",3]]],[11,"eq","","",2,[[["interrupted",3]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[8,"Interruptee"],[3,"NeverInterrupts"],[3,"Interrupted"]]},\
"logins":{"doc":"","i":[[0,"schema","logins","Logins Schema v4The schema we use is a evolution of the …",null,null],[17,"VERSION","logins::schema","Note that firefox-ios is currently on version 3. Version …",null,null],[17,"COMMON_COLS","","Every column shared by both tables except for <code>id</code>",null,null],[0,"msg_types","logins","",null,null],[3,"PasswordInfo","logins::msg_types","",null,null],[12,"id","","",0,null],[12,"hostname","","",0,null],[12,"password","","",0,null],[12,"username","","",0,null],[12,"http_realm","","",0,null],[12,"form_submit_url","","",0,null],[12,"username_field","","",0,null],[12,"password_field","","",0,null],[12,"times_used","","",0,null],[12,"time_created","","",0,null],[12,"time_last_used","","",0,null],[12,"time_password_changed","","",0,null],[11,"http_realm","","Returns the value of <code>http_realm</code>, or the default value if …",0,[[],["str",15]]],[11,"form_submit_url","","Returns the value of <code>form_submit_url</code>, or the default …",0,[[],["str",15]]],[3,"PasswordInfos","","",null,null],[12,"infos","","",1,null],[3,"LoginDb","logins","",null,null],[12,"db","","",2,null],[3,"LoginStore","","",null,null],[12,"db","","",3,null],[12,"scope","","",3,null],[4,"ErrorKind","","",null,null],[13,"InvalidLogin","","",4,null],[13,"BadSyncStatus","","",4,null],[13,"DuplicateGuid","","",4,null],[13,"NoSuchRecord","","",4,null],[13,"NonEmptyTable","","",4,null],[13,"InvalidSalt","","",4,null],[13,"SyncAdapterError","","",4,null],[13,"JsonError","","",4,null],[13,"SqlError","","",4,null],[13,"UrlParseError","","",4,null],[13,"Interrupted","","",4,null],[13,"ProtobufDecodeError","","",4,null],[6,"Result","","",null,null],[3,"Error","","",null,null],[4,"InvalidLogin","","",null,null],[13,"EmptyOrigin","","",5,null],[13,"EmptyPassword","","",5,null],[13,"DuplicateLogin","","",5,null],[13,"BothTargets","","",5,null],[13,"NoTarget","","",5,null],[13,"IllegalFieldValue","","",5,null],[12,"field_info","logins::InvalidLogin","",6,null],[3,"Login","logins","",null,null],[12,"guid","","",7,null],[12,"hostname","","",7,null],[12,"form_submit_url","","",7,null],[12,"http_realm","","",7,null],[12,"username","","",7,null],[12,"password","","",7,null],[12,"username_field","","",7,null],[12,"password_field","","",7,null],[12,"time_created","","",7,null],[12,"time_password_changed","","",7,null],[12,"time_last_used","","",7,null],[12,"times_used","","",7,null],[3,"PasswordStore","","",null,null],[12,"db","","",8,null],[12,"mem_cached_state","","",8,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"vzip","","",7,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","logins::msg_types","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","logins","",4,[[["error",3]]]],[11,"from","","",4,[[["error",3]]]],[11,"from","","",4,[[["error",4]]]],[11,"from","","",4,[[["parseerror",4]]]],[11,"from","","",4,[[["interrupted",3]]]],[11,"from","","",4,[[["decodeerror",3]]]],[11,"from","","",9,[[["errorkind",4]],["error",3]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["parseerror",4]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","","",9,[[["invalidlogin",4]]]],[11,"from","","",9,[[["interrupted",3]]]],[11,"from","","",9,[[["decodeerror",3]]]],[11,"from","logins::msg_types","",0,[[["login",3]]]],[11,"from","logins","",7,[[["passwordinfo",3]]]],[11,"clone","","",7,[[],["login",3]]],[11,"clone","logins::msg_types","",0,[[],["passwordinfo",3]]],[11,"clone","","",1,[[],["passwordinfos",3]]],[11,"default","logins","",7,[[],["login",3]]],[11,"default","logins::msg_types","",0,[[],["passwordinfo",3]]],[11,"default","","",1,[[],["passwordinfos",3]]],[11,"eq","logins","",7,[[["login",3]],["bool",15]]],[11,"ne","","",7,[[["login",3]],["bool",15]]],[11,"eq","logins::msg_types","",0,[[["passwordinfo",3]],["bool",15]]],[11,"ne","","",0,[[["passwordinfo",3]],["bool",15]]],[11,"eq","","",1,[[["passwordinfos",3]],["bool",15]]],[11,"ne","","",1,[[["passwordinfos",3]],["bool",15]]],[11,"deref","logins","",2,[[],["connection",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","logins::msg_types","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","logins","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"serialize","","",7,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"collection_name","","",3,[[],[["cow",4],["str",15]]]],[11,"apply_incoming","","",3,[[["engine",3],["vec",3],["incomingchangeset",6]],[["outgoingchangeset",6],["result",6]]]],[11,"sync_finished","","",3,[[["servertimestamp",3],["vec",3],["guid",3]],["result",6]]],[11,"get_collection_requests","","",3,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[11,"get_sync_assoc","","",3,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",3,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",3,[[],["result",6]]],[11,"ffi_default","logins::msg_types","",0,[[]]],[11,"into_ffi_value","","",0,[[]]],[11,"ffi_default","","",1,[[]]],[11,"into_ffi_value","","",1,[[]]],[11,"encode_raw","","",0,[[]]],[11,"merge_field","","",0,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",0,[[],["usize",15]]],[11,"clear","","",0,[[]]],[11,"encode_raw","","",1,[[]]],[11,"merge_field","","",1,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",1,[[],["usize",15]]],[11,"clear","","",1,[[]]],[11,"conn","logins","",2,[[],["connection",3]]],[11,"kind","","",9,[[],["errorkind",4]]],[11,"backtrace","","",9,[[],[["option",4],["mutex",3]]]],[11,"label","","",9,[[],["str",15]]],[11,"guid","","",7,[[],["guid",3]]],[11,"guid_str","","",7,[[],["str",15]]],[11,"check_valid","","Checks whether the Login is valid, without attempting to …",7,[[],["result",6]]],[11,"fixup","","Return either the existing login, a fixed-up verion, or …",7,[[],["result",6]]],[11,"maybe_fixup","","Like <code>fixup()</code> above, but takes <code>self</code> by reference and …",7,[[],[["result",6],["option",4]]]],[11,"with_connection","","",2,[[["connection",3],["option",4],["str",15]],["result",6]]],[11,"open","","",2,[[["option",4],["str",15]],["result",6]]],[11,"open_with_salt","","",2,[[["str",15]],["result",6]]],[11,"open_in_memory","","",2,[[["option",4],["str",15]],["result",6]]],[11,"open_and_get_salt","","Opens an existing database and fetches the salt. This …",2,[[["str",15]],[["result",6],["string",3]]]],[11,"open_and_migrate_to_plaintext_header","","",2,[[["str",15]],["result",6]]],[11,"disable_mem_security","","",2,[[],["result",6]]],[11,"rekey_database","","Change the key on an existing encrypted database, it must …",2,[[["str",15]],["result",6]]],[11,"new_interrupt_handle","","",2,[[],["sqlinterrupthandle",3]]],[11,"begin_interrupt_scope","","",2,[[],["sqlinterruptscope",3]]],[11,"get_all","","",2,[[],[["vec",3],["result",6]]]],[11,"get_by_base_domain","","",2,[[["str",15]],[["vec",3],["result",6]]]],[11,"get_by_id","","",2,[[["str",15]],[["option",4],["result",6]]]],[11,"touch","","",2,[[["str",15]],["result",6]]],[11,"add","","",2,[[["login",3]],[["result",6],["login",3]]]],[11,"import_multiple","","",2,[[],[["result",6],["migrationmetrics",3]]]],[11,"update","","",2,[[["login",3]],["result",6]]],[11,"check_valid_with_no_dupes","","",2,[[["login",3]],["result",6]]],[11,"fixup_and_check_for_dupes","","",2,[[["login",3]],[["result",6],["login",3]]]],[11,"check_for_dupes","","",2,[[["login",3]],["result",6]]],[11,"dupe_exists","","",2,[[["login",3]],[["result",6],["bool",15]]]],[11,"potential_dupes_ignoring_username","","",2,[[["login",3]],[["vec",3],["result",6]]]],[11,"exists","","",2,[[["str",15]],[["result",6],["bool",15]]]],[11,"delete","","Delete the record with the provided id. Returns true if …",2,[[["str",15]],[["result",6],["bool",15]]]],[11,"reset","","",2,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",2,[[["sqlinterruptscope",3]],["result",6]]],[11,"wipe_local","","",2,[[],["result",6]]],[11,"fetch_outgoing","","",2,[[["servertimestamp",3],["sqlinterruptscope",3]],[["result",6],["outgoingchangeset",6]]]],[11,"set_global_state","","",2,[[["option",4]],["result",6]]],[11,"get_global_state","","",2,[[],[["option",4],["result",6]]]],[11,"migrate_global_state","","A utility we can kill by the end of 2019 ;)",2,[[],["result",6]]],[11,"new","","",3,[[["logindb",3]]]],[11,"new","","",8,[[["option",4],["str",15]],["result",6]]],[11,"new_with_salt","","",8,[[["str",15]],["result",6]]],[11,"new_in_memory","","",8,[[["option",4],["str",15]],["result",6]]],[11,"list","","",8,[[],[["vec",3],["result",6]]]],[11,"get","","",8,[[["str",15]],[["option",4],["result",6]]]],[11,"get_by_base_domain","","",8,[[["str",15]],[["vec",3],["result",6]]]],[11,"potential_dupes_ignoring_username","","",8,[[["login",3]],[["vec",3],["result",6]]]],[11,"touch","","",8,[[["str",15]],["result",6]]],[11,"delete","","",8,[[["str",15]],[["result",6],["bool",15]]]],[11,"wipe","","",8,[[],["result",6]]],[11,"wipe_local","","",8,[[],["result",6]]],[11,"reset","","",8,[[],["result",6]]],[11,"update","","",8,[[["login",3]],["result",6]]],[11,"add","","",8,[[["login",3]],[["result",6],["string",3]]]],[11,"import_multiple","","",8,[[],[["result",6],["migrationmetrics",3]]]],[11,"disable_mem_security","","",8,[[],["result",6]]],[11,"rekey_database","","",8,[[["str",15]],["result",6]]],[11,"conn","","",8,[[],["connection",3]]],[11,"new_interrupt_handle","","",8,[[],["sqlinterrupthandle",3]]],[11,"sync","","A convenience wrapper around sync_multiple.",8,[[["sync15storageclientinit",3],["keybundle",3]],[["result",6],["synctelemetryping",3]]]],[11,"check_valid_with_no_dupes","","",8,[[["login",3]],["result",6]]]],"p":[[3,"PasswordInfo"],[3,"PasswordInfos"],[3,"LoginDb"],[3,"LoginStore"],[4,"ErrorKind"],[4,"InvalidLogin"],[13,"IllegalFieldValue"],[3,"Login"],[3,"PasswordStore"],[3,"Error"]]},\
"logins_ffi":{"doc":"","i":[[3,"STORES","logins_ffi","",null,null],[5,"sync15_passwords_state_new","","",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"sync15_passwords_state_new_with_salt","","",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"sync15_passwords_num_open_connections","","",null,[[["externerror",3]],["u64",15]]],[5,"sync15_passwords_state_new_with_hex_key","","Same as sync15_passwords_state_new, but automatically …",null,[[["u32",15],["externerror",3],["ffistr",3]],["u64",15]]],[5,"sync15_passwords_get_db_salt","","Opens an existing database that stores its salt in the …",null,[[["externerror",3],["ffistr",3]]]],[5,"sync15_passwords_migrate_plaintext_header","","Opens an existing database that stores its salt in the …",null,[[["externerror",3],["ffistr",3]]]],[5,"sync15_passwords_disable_mem_security","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_rekey_database","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"sync15_passwords_rekey_database_with_hex_key","","Same as sync15_passwords_rekey_database, but accepts a …",null,[[["u32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_sync","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"sync15_passwords_touch","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"sync15_passwords_check_valid","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_delete","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["u8",15]]],[5,"sync15_passwords_wipe","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_wipe_local","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_reset","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_new_interrupt_handle","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_interrupt","","",null,[[["externerror",3],["sqlinterrupthandle",3]]]],[5,"sync15_passwords_get_all","","",null,[[["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"sync15_passwords_get_by_base_domain","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"sync15_passwords_potential_dupes_ignoring_username","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"sync15_passwords_get_by_id","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"sync15_passwords_add","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_import","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_update","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"sync15_passwords_destroy_buffer","","",null,[[["bytebuffer",3]]]],[5,"sync15_passwords_state_destroy","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_interrupt_handle_destroy","","SafetyThis is equivalent to calling Box::from_raw with …",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"deref","","",0,[[],["concurrenthandlemap",3]]],[11,"initialize","","",0,[[]]]],"p":[[3,"STORES"]]},\
"nimbus":{"doc":"","i":[[0,"error","nimbus","Not complete yet This is where the error definitions can …",null,null],[4,"NimbusError","nimbus::error","",null,null],[13,"InvalidPersistedData","","",0,null],[13,"RkvError","","",0,null],[13,"IOError","","",0,null],[13,"JSONError","","",0,null],[13,"EvaluationError","","",0,null],[13,"InvalidExpression","","",0,null],[13,"InvalidFraction","","",0,null],[13,"TryFromSliceError","","",0,null],[13,"EmptyRatiosError","","",0,null],[13,"OutOfBoundsError","","",0,null],[13,"UrlParsingError","","",0,null],[13,"RequestError","","",0,null],[13,"UuidError","","",0,null],[13,"ResponseError","","",0,null],[13,"InvalidExperimentFormat","","",0,null],[13,"InvalidPath","","",0,null],[13,"InternalError","","",0,null],[13,"NoSuchExperiment","","",0,null],[13,"NoSuchBranch","","",0,null],[13,"BackoffError","","",0,null],[13,"DatabaseNotReady","","",0,null],[6,"Result","","",null,null],[5,"evaluate_enrollment","nimbus","Determine the enrolment status for an experiment.",null,[[["experiment",3],["appcontext",3],["uuid",3],["availablerandomizationunits",3]],[["result",6],["experimentenrollment",3]]]],[3,"RemoteSettingsConfig","","Optional custom configuration Currently includes the …",null,null],[12,"server_url","","",1,null],[12,"bucket_name","","",1,null],[12,"collection_name","","",1,null],[4,"EnrollmentStatus","","",null,null],[13,"Enrolled","","",2,null],[12,"enrollment_id","nimbus::EnrollmentStatus","",3,null],[12,"reason","","",3,null],[12,"branch","","",3,null],[12,"feature_id","","",3,null],[13,"NotEnrolled","nimbus","",2,null],[12,"reason","nimbus::EnrollmentStatus","",4,null],[13,"Disqualified","nimbus","",2,null],[12,"enrollment_id","nimbus::EnrollmentStatus","",5,null],[12,"reason","","",5,null],[12,"branch","","",5,null],[13,"WasEnrolled","nimbus","",2,null],[12,"enrollment_id","nimbus::EnrollmentStatus","",6,null],[12,"branch","","",6,null],[12,"experiment_ended_at","","",6,null],[13,"Error","nimbus","",2,null],[12,"reason","nimbus::EnrollmentStatus","",7,null],[3,"AppContext","nimbus","The <code>AppContext</code> object represents the parameters and …",null,null],[12,"app_name","","",8,null],[12,"app_id","","",8,null],[12,"channel","","",8,null],[12,"app_version","","",8,null],[12,"app_build","","",8,null],[12,"architecture","","",8,null],[12,"device_manufacturer","","",8,null],[12,"device_model","","",8,null],[12,"locale","","",8,null],[12,"os","","",8,null],[12,"os_version","","",8,null],[12,"android_sdk_version","","",8,null],[12,"debug_tag","","",8,null],[3,"NimbusClient","","Nimbus is the main struct representing the experiments …",null,null],[11,"new","","",9,[[["remotesettingsconfig",3],["into",8],["pathbuf",3],["option",4],["appcontext",3],["availablerandomizationunits",3]],["result",6]]],[11,"initialize","","",9,[[],["result",6]]],[11,"get_experiment_branch","","",9,[[["string",3]],[["result",6],["option",4]]]],[11,"get_experiment_branches","","",9,[[["string",3]],[["result",6],["vec",3]]]],[11,"get_global_user_participation","","",9,[[],[["bool",15],["result",6]]]],[11,"set_global_user_participation","","",9,[[["bool",15]],[["result",6],["vec",3]]]],[11,"get_active_experiments","","",9,[[],[["vec",3],["result",6]]]],[11,"get_all_experiments","","",9,[[],[["vec",3],["result",6]]]],[11,"opt_in_with_branch","","",9,[[["string",3]],[["result",6],["vec",3]]]],[11,"opt_out","","",9,[[["string",3]],[["result",6],["vec",3]]]],[11,"update_experiments","","",9,[[],[["result",6],["vec",3]]]],[11,"fetch_experiments","","",9,[[],["result",6]]],[11,"apply_pending_experiments","","",9,[[],[["result",6],["vec",3]]]],[11,"set_experiments_locally","","",9,[[["string",3]],["result",6]]],[11,"reset_telemetry_identifiers","","Reset internal state in response to application-level …",9,[[["availablerandomizationunits",3]],[["result",6],["vec",3]]]],[11,"nimbus_id","","",9,[[],[["uuid",3],["result",6]]]],[11,"set_nimbus_id","","",9,[[["uuid",3]],["result",6]]],[3,"EnrolledExperiment","","",null,null],[12,"feature_ids","","",10,null],[12,"slug","","",10,null],[12,"user_facing_name","","",10,null],[12,"user_facing_description","","",10,null],[12,"branch_slug","","",10,null],[12,"enrollment_id","","",10,null],[17,"SCHEMA_VERSION","","This is the currently supported major schema version.",null,null],[3,"Experiment","","",null,null],[12,"schema_version","","",11,null],[12,"slug","","",11,null],[12,"app_name","","",11,null],[12,"app_id","","",11,null],[12,"channel","","",11,null],[12,"user_facing_name","","",11,null],[12,"user_facing_description","","",11,null],[12,"is_enrollment_paused","","",11,null],[12,"bucket_config","","",11,null],[12,"probe_sets","","",11,null],[12,"branches","","",11,null],[12,"feature_ids","","",11,null],[12,"targeting","","",11,null],[12,"start_date","","",11,null],[12,"end_date","","",11,null],[12,"proposed_duration","","",11,null],[12,"proposed_enrollment","","",11,null],[12,"reference_branch","","",11,null],[3,"FeatureConfig","","",null,null],[12,"feature_id","","",12,null],[12,"enabled","","",12,null],[3,"Branch","","",null,null],[12,"slug","","",13,null],[12,"ratio","","",13,null],[12,"feature","","",13,null],[3,"BucketConfig","","",null,null],[12,"randomization_unit","","",14,null],[12,"namespace","","",14,null],[12,"start","","",14,null],[12,"count","","",14,null],[12,"total","","",14,null],[4,"RandomizationUnit","","",null,null],[13,"NimbusId","","",15,null],[13,"ClientId","","",15,null],[3,"AvailableRandomizationUnits","","",null,null],[12,"client_id","","",16,null],[11,"with_client_id","","",16,[[["str",15]]]],[11,"get_value","","",16,[[["str",15],["randomizationunit",4]],[["option",4],["str",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"to_bytes","","",2,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","nimbus::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","nimbus","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"to_bytes","","",8,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"to_bytes","","",11,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"to_bytes","","",12,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"to_bytes","","",13,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"to_bytes","","",14,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"to_bytes","","",15,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","nimbus::error","",0,[[["storeerror",4]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["tryfromsliceerror",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["evaluationerror",4]]]],[11,"clone","nimbus","",2,[[],["enrollmentstatus",4]]],[11,"clone","","",1,[[],["remotesettingsconfig",3]]],[11,"clone","","",8,[[],["appcontext",3]]],[11,"clone","","",10,[[],["enrolledexperiment",3]]],[11,"clone","","",11,[[],["experiment",3]]],[11,"clone","","",12,[[],["featureconfig",3]]],[11,"clone","","",13,[[],["branch",3]]],[11,"clone","","",14,[[],["bucketconfig",3]]],[11,"clone","","",15,[[],["randomizationunit",4]]],[11,"default","","",8,[[],["appcontext",3]]],[11,"default","","",11,[[],["experiment",3]]],[11,"default","","",12,[[],["featureconfig",3]]],[11,"default","","",13,[[],["branch",3]]],[11,"default","","",14,[[],["bucketconfig",3]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[],["availablerandomizationunits",3]]],[11,"eq","","",2,[[["enrollmentstatus",4]],["bool",15]]],[11,"ne","","",2,[[["enrollmentstatus",4]],["bool",15]]],[11,"eq","","",11,[[["experiment",3]],["bool",15]]],[11,"ne","","",11,[[["experiment",3]],["bool",15]]],[11,"eq","","",12,[[["featureconfig",3]],["bool",15]]],[11,"ne","","",12,[[["featureconfig",3]],["bool",15]]],[11,"eq","","",13,[[["branch",3]],["bool",15]]],[11,"ne","","",13,[[["branch",3]],["bool",15]]],[11,"eq","","",14,[[["bucketconfig",3]],["bool",15]]],[11,"ne","","",14,[[["bucketconfig",3]],["bool",15]]],[11,"eq","","",15,[[["randomizationunit",4]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::error","",0,[[["formatter",3]],["result",6]]],[11,"hash","nimbus","",2,[[]]],[11,"source","nimbus::error","",0,[[],[["option",4],["error",8]]]],[11,"serialize","nimbus","",2,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"new_enrolled","","",2,[[["enrolledreason",4],["str",15]]]],[11,"is_enrolled","","",2,[[],["bool",15]]]],"p":[[4,"NimbusError"],[3,"RemoteSettingsConfig"],[4,"EnrollmentStatus"],[13,"Enrolled"],[13,"NotEnrolled"],[13,"Disqualified"],[13,"WasEnrolled"],[13,"Error"],[3,"AppContext"],[3,"NimbusClient"],[3,"EnrolledExperiment"],[3,"Experiment"],[3,"FeatureConfig"],[3,"Branch"],[3,"BucketConfig"],[4,"RandomizationUnit"],[3,"AvailableRandomizationUnits"]]},\
"nss":{"doc":"","i":[[0,"aes","nss","",null,null],[4,"Operation","nss::aes","",null,null],[13,"Encrypt","","",0,null],[13,"Decrypt","","",0,null],[5,"aes_gcm_crypt","","",null,[[["operation",4]],[["vec",3],["result",6]]]],[5,"aes_cbc_crypt","","",null,[[["operation",4]],[["vec",3],["result",6]]]],[5,"common_crypt","","",null,[[["usize",15],["secitem",6],["ck_mechanism_type",6],["operation",4]],[["vec",3],["result",6]]]],[0,"ec","nss","",null,null],[4,"Curve","nss::ec","",null,null],[13,"P256","","",1,null],[13,"P384","","",1,null],[11,"get_field_len","","",1,[[],["u32",15]]],[3,"EcKey","","",null,null],[11,"new","","",2,[[["curve",4]]]],[11,"from_coordinates","","",2,[[["curve",4]],["result",6]]],[11,"curve","","",2,[[],["curve",4]]],[11,"public_key","","",2,[[]]],[11,"private_key","","",2,[[]]],[5,"generate_keypair","","",null,[[["curve",4]],["result",6]]],[3,"PrivateKey","","",null,null],[11,"convert_to_public_key","","",3,[[],[["result",6],["publickey",3]]]],[11,"curve","","",3,[[],["curve",4]]],[11,"private_value","","",3,[[],[["vec",3],["result",6]]]],[11,"import","","",3,[[["eckey",3]],["result",6]]],[11,"export","","",3,[[],[["result",6],["eckey",3]]]],[3,"PublicKey","","",null,null],[11,"curve","","",4,[[],["curve",4]]],[11,"verify","","ECDSA verify operation",4,[[["hashalgorithm",4]],["result",6]]],[11,"to_bytes","","",4,[[],[["vec",3],["result",6]]]],[11,"from_bytes","","",4,[[["curve",4]],[["result",6],["publickey",3]]]],[0,"ecdh","nss","",null,null],[5,"ecdh_agreement","nss::ecdh","",null,[[["publickey",3],["privatekey",3]],[["vec",3],["result",6]]]],[0,"pbkdf2","nss","",null,null],[5,"pbkdf2_key_derive","nss::pbkdf2","",null,[[["u32",15],["hashalgorithm",4]],["result",6]]],[0,"pk11","nss","",null,null],[0,"context","nss::pk11","",null,null],[4,"HashAlgorithm","nss::pk11::context","",null,null],[13,"SHA256","","",5,null],[13,"SHA384","","",5,null],[5,"hash_buf","","",null,[[["hashalgorithm",4]],[["vec",3],["result",6]]]],[5,"hmac_sign","","",null,[[["hashalgorithm",4]],[["vec",3],["result",6]]]],[5,"create_context_by_sym_key","","Safe wrapper around PK11_CreateContextBySymKey that …",null,[[["ck_mechanism_type",6],["ck_attribute_type",6],["symkey",3]],[["result",6],["context",3]]]],[0,"slot","nss::pk11","",null,null],[5,"generate_random","nss::pk11::slot","",null,[[],["result",6]]],[0,"sym_key","nss::pk11","",null,null],[5,"hkdf_expand","nss::pk11::sym_key","",null,[[["usize",15],["hashalgorithm",4]],[["vec",3],["result",6]]]],[0,"types","nss::pk11","",null,null],[3,"SymKey","nss::pk11::types","",null,null],[3,"PrivateKey","","",null,null],[3,"PublicKey","","",null,null],[3,"GenericObject","","",null,null],[3,"Context","","",null,null],[3,"Slot","","",null,null],[3,"AlgorithmID","","",null,null],[11,"convert_to_public_key","","",6,[[],[["result",6],["publickey",3]]]],[0,"secport","nss","",null,null],[5,"secure_memcmp","nss::secport","",null,[[],["bool",15]]],[3,"Error","nss","",null,null],[4,"ErrorKind","","",null,null],[13,"NSSInitFailure","","",7,null],[13,"NSSError","","",7,null],[13,"InternalError","","",7,null],[13,"ConversionError","","",7,null],[13,"Base64Decode","","",7,null],[6,"Result","","",null,null],[5,"ensure_initialized","","",null,[[]]],[14,"scoped_ptr","","",null,null],[11,"from","nss::aes","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","nss::ec","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","nss","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","nss::pk11::context","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","nss::pk11::types","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"drop","","",9,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",11,[[]]],[11,"drop","","",12,[[]]],[11,"drop","","",13,[[]]],[11,"drop","","",14,[[]]],[11,"from","nss","",7,[[["tryfrominterror",3]]]],[11,"from","","",7,[[["decodeerror",4]]]],[11,"from","","",8,[[["errorkind",4]],["error",3]]],[11,"from","","",8,[[["decodeerror",4]]]],[11,"from","","",8,[[["tryfrominterror",3]]]],[11,"clone","nss::aes","",0,[[],["operation",4]]],[11,"clone","nss::ec","",1,[[],["curve",4]]],[11,"clone","","",2,[[],["eckey",3]]],[11,"clone","nss::pk11::context","",5,[[],["hashalgorithm",4]]],[11,"eq","nss::aes","",0,[[["operation",4]],["bool",15]]],[11,"eq","nss::ec","",1,[[["curve",4]],["bool",15]]],[11,"eq","","",2,[[["eckey",3]],["bool",15]]],[11,"ne","","",2,[[["eckey",3]],["bool",15]]],[11,"deref","","",3,[[],["pk11privatekey",3]]],[11,"deref","","",4,[[],["pk11publickey",3]]],[11,"fmt","nss::aes","",0,[[["formatter",3]],["result",6]]],[11,"fmt","nss::ec","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","nss","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","nss::pk11::context","",5,[[["formatter",3]],["result",6]]],[11,"fmt","nss","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"serialize","nss::ec","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"kind","nss","",8,[[],["errorkind",4]]],[11,"backtrace","","",8,[[],[["mutex",3],["option",4]]]]],"p":[[4,"Operation"],[4,"Curve"],[3,"EcKey"],[3,"PrivateKey"],[3,"PublicKey"],[4,"HashAlgorithm"],[3,"PrivateKey"],[4,"ErrorKind"],[3,"Error"],[3,"SymKey"],[3,"PublicKey"],[3,"GenericObject"],[3,"Context"],[3,"Slot"],[3,"AlgorithmID"]]},\
"nss_build_common":{"doc":"This shouldn\'t exist, but does because if something isn\'t …","i":[[4,"LinkingKind","nss_build_common","",null,null],[13,"Dynamic","","",0,null],[12,"folded_libs","nss_build_common::LinkingKind","",1,null],[13,"Static","nss_build_common","",0,null],[3,"NoNssDir","","",null,null],[5,"link_nss","","",null,[[],[["result",4],["nonssdir",3]]]],[5,"env","","",null,[[["str",15]],[["osstring",3],["option",4]]]],[5,"env_str","","",null,[[["str",15]],[["option",4],["string",3]]]],[5,"env_flag","","",null,[[["str",15]],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["linkingkind",4]]],[11,"clone","","",2,[[],["nonssdir",3]]],[11,"eq","","",0,[[["linkingkind",4]],["bool",15]]],[11,"ne","","",0,[[["linkingkind",4]],["bool",15]]],[11,"eq","","",2,[[["nonssdir",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[4,"LinkingKind"],[13,"Dynamic"],[3,"NoNssDir"]]},\
"nss_sys":{"doc":"","i":[[5,"SECKEY_CopyPublicKey","nss_sys","",null,null],[5,"SECKEY_ConvertToPublicKey","","",null,null],[5,"SECKEY_DestroyPrivateKey","","",null,null],[5,"SECKEY_DestroyPublicKey","","",null,null],[5,"NSS_VersionCheck","","",null,null],[5,"NSS_InitContext","","",null,null],[5,"PK11_FreeSlot","","",null,null],[5,"PK11_GetInternalSlot","","",null,null],[5,"PK11_GenerateRandom","","",null,null],[5,"PK11_FreeSymKey","","",null,null],[5,"PK11_ImportSymKey","","",null,null],[5,"PK11_Derive","","",null,null],[5,"PK11_PubDeriveWithKDF","","",null,null],[5,"PK11_ExtractKeyValue","","",null,null],[5,"PK11_GetKeyData","","",null,null],[5,"PK11_GenerateKeyPair","","",null,null],[5,"PK11_FindKeyByKeyID","","",null,null],[5,"PK11_Decrypt","","",null,null],[5,"PK11_Encrypt","","",null,null],[5,"PK11_VerifyWithMechanism","","",null,null],[5,"PK11_MapSignKeyType","","",null,null],[5,"PK11_DestroyContext","","",null,null],[5,"PK11_CreateContextBySymKey","","",null,null],[5,"PK11_DigestBegin","","",null,null],[5,"PK11_HashBuf","","",null,null],[5,"PK11_DigestOp","","",null,null],[5,"PK11_DigestFinal","","",null,null],[5,"PK11_DestroyGenericObject","","",null,null],[5,"PK11_CreateGenericObject","","",null,null],[5,"PK11_ReadRawAttribute","","",null,null],[5,"PK11_CreatePBEV2AlgorithmID","","",null,null],[5,"PK11_PBEKeyGen","","",null,null],[5,"PR_GetError","","",null,null],[5,"PR_GetErrorTextLength","","",null,null],[5,"PR_GetErrorText","","",null,null],[5,"SECITEM_FreeItem","","",null,null],[5,"SECOID_FindOIDByTag","","",null,null],[5,"SECOID_DestroyAlgorithmID","","",null,null],[5,"PORT_FreeArena","","",null,null],[5,"NSS_SecureMemcmp","","",null,null],[17,"EC_POINT_FORM_UNCOMPRESSED","","",null,null],[17,"SHA256_LENGTH","","",null,null],[17,"SHA384_LENGTH","","",null,null],[17,"HASH_LENGTH_MAX","","",null,null],[17,"AES_BLOCK_SIZE","","",null,null],[6,"SECKEYPublicKey","","",null,null],[3,"SECKEYPublicKeyStr","","",null,null],[12,"arena","","",0,null],[12,"keyType","","",0,null],[12,"pkcs11Slot","","",0,null],[12,"pkcs11ID","","",0,null],[12,"u","","",0,null],[19,"SECKEYPublicKeyStr_u","","",null,null],[12,"rsa","","",1,null],[12,"dsa","","",1,null],[12,"dh","","",1,null],[12,"kea","","",1,null],[12,"fortezza","","",1,null],[12,"ec","","",1,null],[6,"SECKEYPrivateKey","","",null,null],[3,"SECKEYPrivateKeyStr","","",null,null],[12,"arena","","",2,null],[12,"keyType","","",2,null],[12,"pkcs11Slot","","",2,null],[12,"pkcs11ID","","",2,null],[12,"pkcs11IsTemp","","",2,null],[12,"wincx","","",2,null],[12,"staticflags","","",2,null],[4,"KeyType","","",null,null],[13,"nullKey","","",3,null],[13,"rsaKey","","",3,null],[13,"dsaKey","","",3,null],[13,"fortezzaKey","","",3,null],[13,"dhKey","","",3,null],[13,"keaKey","","",3,null],[13,"ecKey","","",3,null],[13,"rsaPssKey","","",3,null],[13,"rsaOaepKey","","",3,null],[6,"SECKEYRSAPublicKey","","",null,null],[3,"SECKEYRSAPublicKeyStr","","",null,null],[12,"arena","","",4,null],[12,"modulus","","",4,null],[12,"publicExponent","","",4,null],[6,"SECKEYDSAPublicKey","","",null,null],[3,"SECKEYDSAPublicKeyStr","","",null,null],[12,"params","","",5,null],[12,"publicValue","","",5,null],[6,"SECKEYPQGParams","","",null,null],[3,"SECKEYPQGParamsStr","","",null,null],[12,"arena","","",6,null],[12,"prime","","",6,null],[12,"subPrime","","",6,null],[12,"base","","",6,null],[6,"SECKEYDHPublicKey","","",null,null],[3,"SECKEYDHPublicKeyStr","","",null,null],[12,"arena","","",7,null],[12,"prime","","",7,null],[12,"base","","",7,null],[12,"publicValue","","",7,null],[6,"SECKEYKEAPublicKey","","",null,null],[3,"SECKEYKEAPublicKeyStr","","",null,null],[12,"params","","",8,null],[12,"publicValue","","",8,null],[6,"SECKEYKEAParams","","",null,null],[3,"SECKEYKEAParamsStr","","",null,null],[12,"arena","","",9,null],[12,"hash","","",9,null],[6,"SECKEYFortezzaPublicKey","","",null,null],[3,"SECKEYFortezzaPublicKeyStr","","",null,null],[12,"KEAversion","","",10,null],[12,"DSSversion","","",10,null],[12,"KMID","","",10,null],[12,"clearance","","",10,null],[12,"KEApriviledge","","",10,null],[12,"DSSpriviledge","","",10,null],[12,"KEAKey","","",10,null],[12,"DSSKey","","",10,null],[12,"params","","",10,null],[12,"keaParams","","",10,null],[6,"SECKEYECPublicKey","","",null,null],[3,"SECKEYECPublicKeyStr","","",null,null],[12,"DEREncodedParams","","",11,null],[12,"size","","",11,null],[12,"publicValue","","",11,null],[12,"encoding","","",11,null],[6,"SECKEYECParams","","",null,null],[4,"ECPointEncoding","","",null,null],[13,"ECPoint_Uncompressed","","",12,null],[13,"ECPoint_XOnly","","",12,null],[13,"ECPoint_Undefined","","",12,null],[17,"NSS_INIT_READONLY","","",null,null],[17,"NSS_INIT_NOCERTDB","","",null,null],[17,"NSS_INIT_NOMODDB","","",null,null],[17,"NSS_INIT_FORCEOPEN","","",null,null],[17,"NSS_INIT_OPTIMIZESPACE","","",null,null],[6,"NSSInitContext","","",null,null],[6,"NSSInitParameters","","",null,null],[17,"NSSCK_VENDOR_NSS","","",null,null],[17,"CKM_NSS","","",null,null],[17,"CKM_NSS_HKDF_SHA256","","",null,null],[17,"CKM_NSS_HKDF_SHA384","","",null,null],[6,"CK_GCM_PARAMS","","",null,null],[3,"CK_GCM_PARAMS_V3","","",null,null],[12,"pIv","","",13,null],[12,"ulIvLen","","",13,null],[12,"ulIvBits","","",13,null],[12,"pAAD","","",13,null],[12,"ulAADLen","","",13,null],[12,"ulTagBits","","",13,null],[3,"CK_NSS_HKDFParams","","",null,null],[12,"bExtract","","",14,null],[12,"pSalt","","",14,null],[12,"ulSaltLen","","",14,null],[12,"bExpand","","",14,null],[12,"pInfo","","",14,null],[12,"ulInfoLen","","",14,null],[17,"CK_TRUE","","",null,null],[17,"CK_FALSE","","",null,null],[6,"CK_BYTE","","",null,null],[6,"CK_BBOOL","","",null,null],[6,"CK_ULONG","","",null,null],[6,"CK_BYTE_PTR","","",null,null],[6,"CK_VOID_PTR","","",null,null],[6,"CK_OBJECT_HANDLE","","",null,null],[6,"CK_OBJECT_CLASS","","",null,null],[6,"CK_KEY_TYPE","","",null,null],[6,"CK_ATTRIBUTE_TYPE","","",null,null],[3,"CK_ATTRIBUTE","","",null,null],[12,"type_","","",15,null],[12,"pValue","","",15,null],[12,"ulValueLen","","",15,null],[6,"CK_MECHANISM_TYPE","","",null,null],[17,"CK_INVALID_HANDLE","","",null,null],[17,"CKO_PRIVATE_KEY","","",null,null],[17,"CKK_EC","","",null,null],[17,"CKA_CLASS","","",null,null],[17,"CKA_TOKEN","","",null,null],[17,"CKA_PRIVATE","","",null,null],[17,"CKA_VALUE","","",null,null],[17,"CKA_KEY_TYPE","","",null,null],[17,"CKA_ID","","",null,null],[17,"CKA_SENSITIVE","","",null,null],[17,"CKA_ENCRYPT","","",null,null],[17,"CKA_WRAP","","",null,null],[17,"CKA_SIGN","","",null,null],[17,"CKA_EC_PARAMS","","",null,null],[17,"CKA_EC_POINT","","",null,null],[17,"CKM_VENDOR_DEFINED","","",null,null],[17,"CKM_SHA256_HMAC","","",null,null],[17,"CKM_SHA384_HMAC","","",null,null],[17,"CKM_SHA512_HMAC","","",null,null],[17,"CKM_EC_KEY_PAIR_GEN","","",null,null],[17,"CKM_ECDH1_DERIVE","","",null,null],[17,"CKM_AES_CBC_PAD","","",null,null],[17,"CKM_AES_GCM","","",null,null],[17,"CKD_NULL","","",null,null],[3,"PLArena","","",null,null],[12,"next","","",16,null],[12,"base","","",16,null],[12,"limit","","",16,null],[12,"avail","","",16,null],[3,"PLArenaPool","","",null,null],[12,"first","","",17,null],[12,"current","","",17,null],[12,"arenasize","","",17,null],[12,"mask","","",17,null],[6,"PRErrorCode","","",null,null],[6,"PRIntn","","",null,null],[6,"PRBool","","",null,null],[6,"PRUword","","",null,null],[6,"PRInt32","","",null,null],[6,"PRUint32","","",null,null],[17,"PR_FALSE","","",null,null],[17,"PR_TRUE","","",null,null],[17,"SEC_ASN1_OBJECT_ID","","",null,null],[4,"SECItemType","","",null,null],[13,"siBuffer","","",18,null],[13,"siClearDataBuffer","","",18,null],[13,"siCipherDataBuffer","","",18,null],[13,"siDERCertBuffer","","",18,null],[13,"siEncodedCertBuffer","","",18,null],[13,"siDERNameBuffer","","",18,null],[13,"siEncodedNameBuffer","","",18,null],[13,"siAsciiNameString","","",18,null],[13,"siAsciiString","","",18,null],[13,"siDEROID","","",18,null],[13,"siUnsignedInteger","","",18,null],[13,"siUTCTime","","",18,null],[13,"siGeneralizedTime","","",18,null],[13,"siVisibleString","","",18,null],[13,"siUTF8String","","",18,null],[13,"siBMPString","","",18,null],[6,"SECItem","","",null,null],[3,"SECItemStr","","",null,null],[12,"type_","","",19,null],[12,"data","","",19,null],[12,"len","","",19,null],[4,"_SECStatus","","",null,null],[13,"SECWouldBlock","","",20,null],[13,"SECFailure","","",20,null],[13,"SECSuccess","","",20,null],[4,"SECStatus","","",null,null],[13,"SECWouldBlock","","",20,null],[13,"SECFailure","","",20,null],[13,"SECSuccess","","",20,null],[6,"PK11SlotInfo","","",null,null],[6,"PK11SymKey","","",null,null],[6,"PK11Context","","",null,null],[4,"PK11Origin","","",null,null],[13,"PK11_OriginNULL","","",21,null],[13,"PK11_OriginDerive","","",21,null],[13,"PK11_OriginGenerated","","",21,null],[13,"PK11_OriginFortezzaHack","","",21,null],[13,"PK11_OriginUnwrap","","",21,null],[4,"PK11ObjectType","","",null,null],[13,"PK11_TypeGeneric","","",22,null],[13,"PK11_TypePrivKey","","",22,null],[13,"PK11_TypePubKey","","",22,null],[13,"PK11_TypeCert","","",22,null],[13,"PK11_TypeSymKey","","",22,null],[6,"PK11GenericObject","","",null,null],[3,"SECAlgorithmIDStr","","",null,null],[12,"algorithm","","",23,null],[12,"parameters","","",23,null],[6,"SECAlgorithmID","","",null,null],[3,"SECOidDataStr","","",null,null],[12,"oid","","",24,null],[12,"offset","","",24,null],[12,"desc","","",24,null],[12,"mechanism","","",24,null],[12,"supportedExtension","","",24,null],[6,"SECOidData","","",null,null],[4,"SECSupportExtenTag","","",null,null],[13,"INVALID_CERT_EXTENSION","","",25,null],[13,"UNSUPPORTED_CERT_EXTENSION","","",25,null],[13,"SUPPORTED_CERT_EXTENSION","","",25,null],[4,"SECOidTag","","",null,null],[13,"SEC_OID_UNKNOWN","","",26,null],[13,"SEC_OID_MD2","","",26,null],[13,"SEC_OID_MD4","","",26,null],[13,"SEC_OID_MD5","","",26,null],[13,"SEC_OID_SHA1","","",26,null],[13,"SEC_OID_RC2_CBC","","",26,null],[13,"SEC_OID_RC4","","",26,null],[13,"SEC_OID_DES_EDE3_CBC","","",26,null],[13,"SEC_OID_RC5_CBC_PAD","","",26,null],[13,"SEC_OID_DES_ECB","","",26,null],[13,"SEC_OID_DES_CBC","","",26,null],[13,"SEC_OID_DES_OFB","","",26,null],[13,"SEC_OID_DES_CFB","","",26,null],[13,"SEC_OID_DES_MAC","","",26,null],[13,"SEC_OID_DES_EDE","","",26,null],[13,"SEC_OID_ISO_SHA_WITH_RSA_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS1_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD2_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD4_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD5_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA1_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_MD2_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_MD5_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_SHA1_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS7","","",26,null],[13,"SEC_OID_PKCS7_DATA","","",26,null],[13,"SEC_OID_PKCS7_SIGNED_DATA","","",26,null],[13,"SEC_OID_PKCS7_ENVELOPED_DATA","","",26,null],[13,"SEC_OID_PKCS7_SIGNED_ENVELOPED_DATA","","",26,null],[13,"SEC_OID_PKCS7_DIGESTED_DATA","","",26,null],[13,"SEC_OID_PKCS7_ENCRYPTED_DATA","","",26,null],[13,"SEC_OID_PKCS9_EMAIL_ADDRESS","","",26,null],[13,"SEC_OID_PKCS9_UNSTRUCTURED_NAME","","",26,null],[13,"SEC_OID_PKCS9_CONTENT_TYPE","","",26,null],[13,"SEC_OID_PKCS9_MESSAGE_DIGEST","","",26,null],[13,"SEC_OID_PKCS9_SIGNING_TIME","","",26,null],[13,"SEC_OID_PKCS9_COUNTER_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS9_CHALLENGE_PASSWORD","","",26,null],[13,"SEC_OID_PKCS9_UNSTRUCTURED_ADDRESS","","",26,null],[13,"SEC_OID_PKCS9_EXTENDED_CERTIFICATE_ATTRIBUTES","","",26,null],[13,"SEC_OID_PKCS9_SMIME_CAPABILITIES","","",26,null],[13,"SEC_OID_AVA_COMMON_NAME","","",26,null],[13,"SEC_OID_AVA_COUNTRY_NAME","","",26,null],[13,"SEC_OID_AVA_LOCALITY","","",26,null],[13,"SEC_OID_AVA_STATE_OR_PROVINCE","","",26,null],[13,"SEC_OID_AVA_ORGANIZATION_NAME","","",26,null],[13,"SEC_OID_AVA_ORGANIZATIONAL_UNIT_NAME","","",26,null],[13,"SEC_OID_AVA_DN_QUALIFIER","","",26,null],[13,"SEC_OID_AVA_DC","","",26,null],[13,"SEC_OID_NS_TYPE_GIF","","",26,null],[13,"SEC_OID_NS_TYPE_JPEG","","",26,null],[13,"SEC_OID_NS_TYPE_URL","","",26,null],[13,"SEC_OID_NS_TYPE_HTML","","",26,null],[13,"SEC_OID_NS_TYPE_CERT_SEQUENCE","","",26,null],[13,"SEC_OID_MISSI_KEA_DSS_OLD","","",26,null],[13,"SEC_OID_MISSI_DSS_OLD","","",26,null],[13,"SEC_OID_MISSI_KEA_DSS","","",26,null],[13,"SEC_OID_MISSI_DSS","","",26,null],[13,"SEC_OID_MISSI_KEA","","",26,null],[13,"SEC_OID_MISSI_ALT_KEA","","",26,null],[13,"SEC_OID_NS_CERT_EXT_NETSCAPE_OK","","",26,null],[13,"SEC_OID_NS_CERT_EXT_ISSUER_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SUBJECT_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_TYPE","","",26,null],[13,"SEC_OID_NS_CERT_EXT_BASE_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_REVOCATION_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_REVOCATION_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_CRL_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_CERT_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_RENEWAL_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_POLICY_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_HOMEPAGE_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_ENTITY_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_USER_PICTURE","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SSL_SERVER_NAME","","",26,null],[13,"SEC_OID_NS_CERT_EXT_COMMENT","","",26,null],[13,"SEC_OID_NS_CERT_EXT_LOST_PASSWORD_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_RENEWAL_TIME","","",26,null],[13,"SEC_OID_NS_KEY_USAGE_GOVT_APPROVED","","",26,null],[13,"SEC_OID_X509_SUBJECT_DIRECTORY_ATTR","","",26,null],[13,"SEC_OID_X509_SUBJECT_KEY_ID","","",26,null],[13,"SEC_OID_X509_KEY_USAGE","","",26,null],[13,"SEC_OID_X509_PRIVATE_KEY_USAGE_PERIOD","","",26,null],[13,"SEC_OID_X509_SUBJECT_ALT_NAME","","",26,null],[13,"SEC_OID_X509_ISSUER_ALT_NAME","","",26,null],[13,"SEC_OID_X509_BASIC_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_NAME_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_CRL_DIST_POINTS","","",26,null],[13,"SEC_OID_X509_CERTIFICATE_POLICIES","","",26,null],[13,"SEC_OID_X509_POLICY_MAPPINGS","","",26,null],[13,"SEC_OID_X509_POLICY_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_AUTH_KEY_ID","","",26,null],[13,"SEC_OID_X509_EXT_KEY_USAGE","","",26,null],[13,"SEC_OID_X509_AUTH_INFO_ACCESS","","",26,null],[13,"SEC_OID_X509_CRL_NUMBER","","",26,null],[13,"SEC_OID_X509_REASON_CODE","","",26,null],[13,"SEC_OID_X509_INVALID_DATE","","",26,null],[13,"SEC_OID_X500_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_RFC1274_UID","","",26,null],[13,"SEC_OID_RFC1274_MAIL","","",26,null],[13,"SEC_OID_PKCS12","","",26,null],[13,"SEC_OID_PKCS12_MODE_IDS","","",26,null],[13,"SEC_OID_PKCS12_ESPVK_IDS","","",26,null],[13,"SEC_OID_PKCS12_BAG_IDS","","",26,null],[13,"SEC_OID_PKCS12_CERT_BAG_IDS","","",26,null],[13,"SEC_OID_PKCS12_OIDS","","",26,null],[13,"SEC_OID_PKCS12_PBE_IDS","","",26,null],[13,"SEC_OID_PKCS12_SIGNATURE_IDS","","",26,null],[13,"SEC_OID_PKCS12_ENVELOPING_IDS","","",26,null],[13,"SEC_OID_PKCS12_PKCS8_KEY_SHROUDING","","",26,null],[13,"SEC_OID_PKCS12_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_CERT_AND_CRL_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_SECRET_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_X509_CERT_CRL_BAG","","",26,null],[13,"SEC_OID_PKCS12_SDSI_CERT_BAG","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_TRIPLE_DES","","",26,null],[13,"SEC_OID_PKCS12_RSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_ANSIX9_DSA_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX9_DSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_BOGUS_DSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_VERISIGN_USER_NOTICES","","",26,null],[13,"SEC_OID_PKIX_CPS_POINTER_QUALIFIER","","",26,null],[13,"SEC_OID_PKIX_USER_NOTICE_QUALIFIER","","",26,null],[13,"SEC_OID_PKIX_OCSP","","",26,null],[13,"SEC_OID_PKIX_OCSP_BASIC_RESPONSE","","",26,null],[13,"SEC_OID_PKIX_OCSP_NONCE","","",26,null],[13,"SEC_OID_PKIX_OCSP_CRL","","",26,null],[13,"SEC_OID_PKIX_OCSP_RESPONSE","","",26,null],[13,"SEC_OID_PKIX_OCSP_NO_CHECK","","",26,null],[13,"SEC_OID_PKIX_OCSP_ARCHIVE_CUTOFF","","",26,null],[13,"SEC_OID_PKIX_OCSP_SERVICE_LOCATOR","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_REGTOKEN","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_AUTHENTICATOR","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PKIPUBINFO","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PKI_ARCH_OPTIONS","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_OLD_CERT_ID","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PROTOCOL_ENC_KEY","","",26,null],[13,"SEC_OID_PKIX_REGINFO_UTF8_PAIRS","","",26,null],[13,"SEC_OID_PKIX_REGINFO_CERT_REQUEST","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_SERVER_AUTH","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_CLIENT_AUTH","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_CODE_SIGN","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_EMAIL_PROTECT","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_TIME_STAMP","","",26,null],[13,"SEC_OID_OCSP_RESPONDER","","",26,null],[13,"SEC_OID_NETSCAPE_SMIME_KEA","","",26,null],[13,"SEC_OID_FORTEZZA_SKIPJACK","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_3KEY_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_2KEY_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_SAFE_CONTENTS_ID","","",26,null],[13,"SEC_OID_PKCS12_PKCS8_SHROUDED_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_PKCS8_SHROUDED_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_CERT_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_CRL_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_SECRET_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_SAFE_CONTENTS_BAG_ID","","",26,null],[13,"SEC_OID_PKCS9_X509_CERT","","",26,null],[13,"SEC_OID_PKCS9_SDSI_CERT","","",26,null],[13,"SEC_OID_PKCS9_X509_CRL","","",26,null],[13,"SEC_OID_PKCS9_FRIENDLY_NAME","","",26,null],[13,"SEC_OID_PKCS9_LOCAL_KEY_ID","","",26,null],[13,"SEC_OID_BOGUS_KEY_USAGE","","",26,null],[13,"SEC_OID_X942_DIFFIE_HELMAN_KEY","","",26,null],[13,"SEC_OID_NETSCAPE_NICKNAME","","",26,null],[13,"SEC_OID_NETSCAPE_RECOVERY_REQUEST","","",26,null],[13,"SEC_OID_CERT_RENEWAL_LOCATOR","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SCOPE_OF_USE","","",26,null],[13,"SEC_OID_CMS_EPHEMERAL_STATIC_DIFFIE_HELLMAN","","",26,null],[13,"SEC_OID_CMS_3DES_KEY_WRAP","","",26,null],[13,"SEC_OID_CMS_RC2_KEY_WRAP","","",26,null],[13,"SEC_OID_SMIME_ENCRYPTION_KEY_PREFERENCE","","",26,null],[13,"SEC_OID_AES_128_ECB","","",26,null],[13,"SEC_OID_AES_128_CBC","","",26,null],[13,"SEC_OID_AES_192_ECB","","",26,null],[13,"SEC_OID_AES_192_CBC","","",26,null],[13,"SEC_OID_AES_256_ECB","","",26,null],[13,"SEC_OID_AES_256_CBC","","",26,null],[13,"SEC_OID_SDN702_DSA_SIGNATURE","","",26,null],[13,"SEC_OID_MS_SMIME_ENCRYPTION_KEY_PREFERENCE","","",26,null],[13,"SEC_OID_SHA256","","",26,null],[13,"SEC_OID_SHA384","","",26,null],[13,"SEC_OID_SHA512","","",26,null],[13,"SEC_OID_PKCS1_SHA256_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA384_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA512_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_AES_128_KEY_WRAP","","",26,null],[13,"SEC_OID_AES_192_KEY_WRAP","","",26,null],[13,"SEC_OID_AES_256_KEY_WRAP","","",26,null],[13,"SEC_OID_ANSIX962_EC_PUBLIC_KEY","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA1_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V3","","",26,null],[13,"SEC_OID_SECG_EC_SECP256R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP112R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP112R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP128R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP128R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP160K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP160R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP160R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP192K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP224K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP224R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP256K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP384R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP521R1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB176V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB191V4","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB191V5","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB208W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB239V4","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB239V5","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB272W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB304W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB359V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB368W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB431R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT113R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT113R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT131R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT131R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT163K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT163R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT163R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT193R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT193R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT233K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT233R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT239K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT283K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT283R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT409K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT409R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT571K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT571R1","","",26,null],[13,"SEC_OID_NETSCAPE_AOLSCREENNAME","","",26,null],[13,"SEC_OID_AVA_SURNAME","","",26,null],[13,"SEC_OID_AVA_SERIAL_NUMBER","","",26,null],[13,"SEC_OID_AVA_STREET_ADDRESS","","",26,null],[13,"SEC_OID_AVA_TITLE","","",26,null],[13,"SEC_OID_AVA_POSTAL_ADDRESS","","",26,null],[13,"SEC_OID_AVA_POSTAL_CODE","","",26,null],[13,"SEC_OID_AVA_POST_OFFICE_BOX","","",26,null],[13,"SEC_OID_AVA_GIVEN_NAME","","",26,null],[13,"SEC_OID_AVA_INITIALS","","",26,null],[13,"SEC_OID_AVA_GENERATION_QUALIFIER","","",26,null],[13,"SEC_OID_AVA_HOUSE_IDENTIFIER","","",26,null],[13,"SEC_OID_AVA_PSEUDONYM","","",26,null],[13,"SEC_OID_PKIX_CA_ISSUERS","","",26,null],[13,"SEC_OID_PKCS9_EXTENSION_REQUEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SIGNATURE_RECOMMENDED_DIGEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SIGNATURE_SPECIFIED_DIGEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA224_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA256_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA384_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA512_SIGNATURE","","",26,null],[13,"SEC_OID_X509_HOLD_INSTRUCTION_CODE","","",26,null],[13,"SEC_OID_X509_DELTA_CRL_INDICATOR","","",26,null],[13,"SEC_OID_X509_ISSUING_DISTRIBUTION_POINT","","",26,null],[13,"SEC_OID_X509_CERT_ISSUER","","",26,null],[13,"SEC_OID_X509_FRESHEST_CRL","","",26,null],[13,"SEC_OID_X509_INHIBIT_ANY_POLICY","","",26,null],[13,"SEC_OID_X509_SUBJECT_INFO_ACCESS","","",26,null],[13,"SEC_OID_CAMELLIA_128_CBC","","",26,null],[13,"SEC_OID_CAMELLIA_192_CBC","","",26,null],[13,"SEC_OID_CAMELLIA_256_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBKDF2","","",26,null],[13,"SEC_OID_PKCS5_PBES2","","",26,null],[13,"SEC_OID_PKCS5_PBMAC1","","",26,null],[13,"SEC_OID_HMAC_SHA1","","",26,null],[13,"SEC_OID_HMAC_SHA224","","",26,null],[13,"SEC_OID_HMAC_SHA256","","",26,null],[13,"SEC_OID_HMAC_SHA384","","",26,null],[13,"SEC_OID_HMAC_SHA512","","",26,null],[13,"SEC_OID_PKIX_TIMESTAMPING","","",26,null],[13,"SEC_OID_PKIX_CA_REPOSITORY","","",26,null],[13,"SEC_OID_ISO_SHA1_WITH_RSA_SIGNATURE","","",26,null],[13,"SEC_OID_SEED_CBC","","",26,null],[13,"SEC_OID_X509_ANY_POLICY","","",26,null],[13,"SEC_OID_PKCS1_RSA_OAEP_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MGF1","","",26,null],[13,"SEC_OID_PKCS1_PSPECIFIED","","",26,null],[13,"SEC_OID_PKCS1_RSA_PSS_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS1_SHA224_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_SHA224","","",26,null],[13,"SEC_OID_EV_INCORPORATION_LOCALITY","","",26,null],[13,"SEC_OID_EV_INCORPORATION_STATE","","",26,null],[13,"SEC_OID_EV_INCORPORATION_COUNTRY","","",26,null],[13,"SEC_OID_BUSINESS_CATEGORY","","",26,null],[13,"SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA224_DIGEST","","",26,null],[13,"SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA256_DIGEST","","",26,null],[13,"SEC_OID_MS_EXT_KEY_USAGE_CTL_SIGNING","","",26,null],[13,"SEC_OID_AVA_NAME","","",26,null],[13,"SEC_OID_AES_128_GCM","","",26,null],[13,"SEC_OID_AES_192_GCM","","",26,null],[13,"SEC_OID_AES_256_GCM","","",26,null],[13,"SEC_OID_IDEA_CBC","","",26,null],[13,"SEC_OID_RC2_40_CBC","","",26,null],[13,"SEC_OID_DES_40_CBC","","",26,null],[13,"SEC_OID_RC4_40","","",26,null],[13,"SEC_OID_RC4_56","","",26,null],[13,"SEC_OID_NULL_CIPHER","","",26,null],[13,"SEC_OID_HMAC_MD5","","",26,null],[13,"SEC_OID_TLS_RSA","","",26,null],[13,"SEC_OID_TLS_DHE_RSA","","",26,null],[13,"SEC_OID_TLS_DHE_DSS","","",26,null],[13,"SEC_OID_TLS_DH_RSA","","",26,null],[13,"SEC_OID_TLS_DH_DSS","","",26,null],[13,"SEC_OID_TLS_DH_ANON","","",26,null],[13,"SEC_OID_TLS_ECDHE_ECDSA","","",26,null],[13,"SEC_OID_TLS_ECDHE_RSA","","",26,null],[13,"SEC_OID_TLS_ECDH_ECDSA","","",26,null],[13,"SEC_OID_TLS_ECDH_RSA","","",26,null],[13,"SEC_OID_TLS_ECDH_ANON","","",26,null],[13,"SEC_OID_TLS_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DHE_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DHE_DSS_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_DSS_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_ANON_EXPORT","","",26,null],[13,"SEC_OID_APPLY_SSL_POLICY","","",26,null],[13,"SEC_OID_CHACHA20_POLY1305","","",26,null],[13,"SEC_OID_TLS_ECDHE_PSK","","",26,null],[13,"SEC_OID_TLS_DHE_PSK","","",26,null],[13,"SEC_OID_TLS_FFDHE_2048","","",26,null],[13,"SEC_OID_TLS_FFDHE_3072","","",26,null],[13,"SEC_OID_TLS_FFDHE_4096","","",26,null],[13,"SEC_OID_TLS_FFDHE_6144","","",26,null],[13,"SEC_OID_TLS_FFDHE_8192","","",26,null],[13,"SEC_OID_TLS_DHE_CUSTOM","","",26,null],[13,"SEC_OID_CURVE25519","","",26,null],[13,"SEC_OID_TLS13_KEA_ANY","","",26,null],[13,"SEC_OID_X509_ANY_EXT_KEY_USAGE","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_IKE","","",26,null],[13,"SEC_OID_IPSEC_IKE_END","","",26,null],[13,"SEC_OID_IPSEC_IKE_INTERMEDIATE","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_END","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_TUNNEL","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_USER","","",26,null],[13,"SEC_OID_TOTAL","","",26,null],[6,"size_t","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"clone","","",4,[[],["seckeyrsapublickeystr",3]]],[11,"clone","","",5,[[],["seckeydsapublickeystr",3]]],[11,"clone","","",6,[[],["seckeypqgparamsstr",3]]],[11,"clone","","",7,[[],["seckeydhpublickeystr",3]]],[11,"clone","","",8,[[],["seckeykeapublickeystr",3]]],[11,"clone","","",9,[[],["seckeykeaparamsstr",3]]],[11,"clone","","",10,[[],["seckeyfortezzapublickeystr",3]]],[11,"clone","","",11,[[],["seckeyecpublickeystr",3]]],[11,"clone","","",12,[[],["ecpointencoding",4]]],[11,"clone","","",15,[[],["ck_attribute",3]]],[11,"clone","","",16,[[],["plarena",3]]],[11,"clone","","",17,[[],["plarenapool",3]]],[11,"clone","","",19,[[],["secitemstr",3]]],[11,"clone","","",23,[[],["secalgorithmidstr",3]]],[11,"clone","","",24,[[],["secoiddatastr",3]]],[11,"eq","","",20,[[["_secstatus",4]],["bool",15]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]]],"p":[[3,"SECKEYPublicKeyStr"],[19,"SECKEYPublicKeyStr_u"],[3,"SECKEYPrivateKeyStr"],[4,"KeyType"],[3,"SECKEYRSAPublicKeyStr"],[3,"SECKEYDSAPublicKeyStr"],[3,"SECKEYPQGParamsStr"],[3,"SECKEYDHPublicKeyStr"],[3,"SECKEYKEAPublicKeyStr"],[3,"SECKEYKEAParamsStr"],[3,"SECKEYFortezzaPublicKeyStr"],[3,"SECKEYECPublicKeyStr"],[4,"ECPointEncoding"],[3,"CK_GCM_PARAMS_V3"],[3,"CK_NSS_HKDFParams"],[3,"CK_ATTRIBUTE"],[3,"PLArena"],[3,"PLArenaPool"],[4,"SECItemType"],[3,"SECItemStr"],[4,"_SECStatus"],[4,"PK11Origin"],[4,"PK11ObjectType"],[3,"SECAlgorithmIDStr"],[3,"SECOidDataStr"],[4,"SECSupportExtenTag"],[4,"SECOidTag"]]},\
"places":{"doc":"","i":[[0,"api","places","",null,null],[0,"history","places::api","",null,null],[5,"can_add_url","places::api::history","",null,[[["url",3]],[["bool",15],["result",6]]]],[3,"AddablePlaceInfo","","",null,null],[12,"url","","",0,null],[12,"title","","",0,null],[12,"visits","","",0,null],[3,"AddableVisit","","",null,null],[12,"date","","",1,null],[12,"transition","","",1,null],[12,"referrer","","",1,null],[12,"is_local","","",1,null],[5,"insert","","",null,[[["placesdb",3],["addableplaceinfo",3]],["result",6]]],[4,"RedirectSourceType","","",null,null],[13,"Temporary","","",2,null],[13,"Permanent","","",2,null],[5,"visit_uri","","",null,[[["url",3],["option",4],["bool",15],["option",4],["url",3],["redirectsourcetype",4],["placesdb",3],["visittransition",4]],["result",6]]],[0,"matcher","places::api","",null,null],[3,"SearchParams","places::api::matcher","",null,null],[12,"search_string","","",3,null],[12,"limit","","",3,null],[5,"search_frecent","","Synchronously queries all providers for autocomplete …",null,[[["placesdb",3],["searchparams",3]],[["result",6],["vec",3]]]],[5,"match_url","","",null,[[["placesdb",3]],[["option",4],["result",6]]]],[5,"accept_result","","Records an accepted autocomplete match, recording the …",null,[[["placesdb",3],["url",3],["str",15]],["result",6]]],[5,"split_after_prefix","","",null,[[["str",15]]]],[5,"split_after_host_and_port","","",null,[[["str",15]]]],[4,"MatchReason","","The match reason specifies why an autocomplete search …",null,null],[13,"Keyword","","",4,null],[13,"Origin","","",4,null],[13,"Url","","",4,null],[13,"PreviousUse","","",4,null],[13,"Bookmark","","",4,null],[13,"Tags","","",4,null],[3,"SearchResult","","",null,null],[12,"search_string","","The search string for this match.",5,null],[12,"url","","The URL to open when the user confirms a match. This is …",5,null],[12,"title","","The title of the autocompleted value, to show in the UI. …",5,null],[12,"icon_url","","The favicon URL.",5,null],[12,"frecency","","A frecency score for this match.",5,null],[12,"reasons","","A list of reasons why this matched.",5,null],[11,"from_adaptive_row","","Default search behaviors from Desktop: HISTORY, BOOKMARK, …",5,[[["row",3]],["result",6]]],[11,"from_suggestion_row","","",5,[[["row",3]],["result",6]]],[11,"from_origin_row","","",5,[[["row",3]],["result",6]]],[11,"from_url_row","","",5,[[["row",3]],["result",6]]],[0,"places_api","places::api","",null,null],[17,"GLOBAL_STATE_META_KEY","places::api::places_api","",null,null],[4,"ConnectionType","","",null,null],[13,"ReadOnly","","",6,null],[13,"ReadWrite","","",6,null],[13,"Sync","","",6,null],[11,"from_primitive","","",6,[[["u8",15]],["option",4]]],[11,"rusqlite_flags","","",6,[[],["openflags",3]]],[3,"SyncState","","",null,null],[12,"mem_cached_state","","",7,null],[12,"disk_cached_state","","",7,null],[3,"PlacesApi","","The entry-point to the places API. This object gives …",null,null],[11,"new","","Create a new, or fetch an already open, PlacesApi backed …",8,[[],[["arc",3],["result",6]]]],[11,"new_memory","","Create a new, or fetch an already open, memory-based …",8,[[["str",15]],[["arc",3],["result",6]]]],[11,"open_connection","","Open a connection to the database.",8,[[["connectiontype",4]],[["placesdb",3],["result",6]]]],[11,"open_sync_connection","","",8,[[],[["syncconn",3],["result",6]]]],[11,"close_connection","","Close a connection to the database. If the connection is …",8,[[["placesdb",3]],["result",6]]],[11,"sync_history","","",8,[[["keybundle",3],["sync15storageclientinit",3]],[["result",6],["synctelemetryping",3]]]],[11,"sync_bookmarks","","",8,[[["keybundle",3],["sync15storageclientinit",3]],[["result",6],["synctelemetryping",3]]]],[11,"do_sync_one","","",8,[[["str",15]],[["result",6],["synctelemetryping",3]]]],[11,"sync","","",8,[[["keybundle",3],["sync15storageclientinit",3]],[["result",6],["syncresult",3]]]],[11,"wipe_bookmarks","","",8,[[],["result",6]]],[11,"reset_bookmarks","","",8,[[],["result",6]]],[11,"wipe_history","","",8,[[],["result",6]]],[11,"reset_history","","",8,[[],["result",6]]],[11,"new_sync_conn_interrupt_handle","","Get a new interrupt handle for the sync connection.",8,[[],[["sqlinterrupthandle",3],["result",6]]]],[3,"SyncConn","","Wrapper around PlacesDb that automatically sets a flag (…",null,null],[5,"apply_observation","places::api","",null,[[["placesdb",3],["visitobservation",3]],["result",6]]],[0,"error","places","",null,null],[4,"ErrorKind","places::error","",null,null],[13,"InvalidPlaceInfo","","",9,null],[13,"Corruption","","",9,null],[13,"SyncAdapterError","","",9,null],[13,"MergeError","","",9,null],[13,"JsonError","","",9,null],[13,"SqlError","","",9,null],[13,"UrlParseError","","",9,null],[13,"ConnectionAlreadyOpen","","",9,null],[13,"InvalidConnectionType","","",9,null],[13,"IoError","","",9,null],[13,"InterruptedError","","",9,null],[13,"WrongApiForClose","","",9,null],[13,"MissingBookmarkKind","","",9,null],[13,"UnsupportedIncomingBookmarkType","","",9,null],[13,"UnsupportedSyncedBookmarkKind","","",9,null],[13,"UnsupportedSyncedBookmarkValidity","","",9,null],[13,"IllegalDatabasePath","","",9,null],[13,"ProtobufDecodeError","","",9,null],[13,"Utf8Error","","",9,null],[13,"DatabaseUpgradeError","","",9,null],[13,"UnsupportedDatabaseVersion","","",9,null],[6,"Result","","",null,null],[3,"Error","","",null,null],[11,"kind","","",10,[[],["errorkind",4]]],[11,"backtrace","","",10,[[],[["option",4],["mutex",3]]]],[4,"InvalidPlaceInfo","","",null,null],[13,"NoUrl","","",11,null],[13,"InvalidGuid","","",11,null],[13,"InvalidParent","","",11,null],[13,"InvalidChildGuid","","",11,null],[13,"NoSuchGuid","","",11,null],[13,"NoSuchUrl","","",11,null],[13,"MismatchedBookmarkType","","",11,null],[13,"UrlTooLong","","",11,null],[13,"InvalidTag","","",11,null],[13,"IllegalChange","","",11,null],[13,"CannotUpdateRoot","","",11,null],[4,"Corruption","","",null,null],[13,"NoParent","","",12,null],[13,"InvalidLocalRoots","","",12,null],[13,"InvalidSyncedRoots","","",12,null],[13,"NonRootWithoutParent","","",12,null],[0,"types","places","",null,null],[3,"VisitTransitionSet","places::types","",null,null],[3,"InvalidVisitType","","",null,null],[4,"VisitTransition","","",null,null],[13,"Link","","",13,null],[13,"Typed","","",13,null],[13,"Bookmark","","",13,null],[13,"Embed","","",13,null],[13,"RedirectPermanent","","",13,null],[13,"RedirectTemporary","","",13,null],[13,"Download","","",13,null],[13,"FramedLink","","",13,null],[13,"Reload","","",13,null],[11,"from_primitive","","",13,[[["u8",15]],["option",4]]],[4,"BookmarkType","","Bookmark types.",null,null],[13,"Bookmark","","",14,null],[13,"Folder","","",14,null],[13,"Separator","","",14,null],[11,"from_u8","","",14,[[["u8",15]],["option",4]]],[11,"from_u8_with_valid_url","","",14,[[["fn",8],["u8",15]]]],[4,"SyncStatus","","Re SyncStatus - note that:",null,null],[13,"Unknown","","",15,null],[13,"New","","",15,null],[13,"Normal","","",15,null],[11,"from_u8","","",15,[[["u8",15]]]],[0,"bookmark_sync","places","",null,null],[0,"engine","places::bookmark_sync","",null,null],[17,"LAST_SYNC_META_KEY","places::bookmark_sync::engine","",null,null],[17,"GLOBAL_SYNCID_META_KEY","","",null,null],[17,"COLLECTION_SYNCID_META_KEY","","",null,null],[3,"BookmarksEngine","","",null,null],[12,"db","","",16,null],[11,"new","","",16,[[["sqlinterruptscope",3],["placesdb",3]]]],[0,"record","places::bookmark_sync","",null,null],[3,"BookmarkRecordId","places::bookmark_sync::record","A bookmark record ID. Bookmark record IDs are the same as …",null,null],[11,"from_payload_id","","Creates a bookmark record ID from a Sync record payload …",17,[[["syncguid",3]],["bookmarkrecordid",3]]],[11,"as_payload_id","","Returns a reference to the record payload ID. This is the …",17,[[],["str",15]]],[11,"into_payload_id","","Returns the record payload ID. This is the owned version …",17,[[],["string",3]]],[11,"as_guid","","Returns a reference to the GUID for this record ID.",17,[[],["syncguid",3]]],[3,"BookmarkRecord","","",null,null],[12,"record_id","","",18,null],[12,"parent_record_id","","",18,null],[12,"parent_title","","",18,null],[12,"date_added","","",18,null],[12,"has_dupe","","",18,null],[12,"title","","",18,null],[12,"url","","",18,null],[12,"keyword","","",18,null],[12,"tags","","",18,null],[3,"QueryRecord","","",null,null],[12,"record_id","","",19,null],[12,"parent_record_id","","",19,null],[12,"parent_title","","",19,null],[12,"date_added","","",19,null],[12,"has_dupe","","",19,null],[12,"title","","",19,null],[12,"url","","",19,null],[12,"tag_folder_name","","",19,null],[3,"FolderRecord","","",null,null],[12,"record_id","","",20,null],[12,"parent_record_id","","",20,null],[12,"parent_title","","",20,null],[12,"date_added","","",20,null],[12,"has_dupe","","",20,null],[12,"title","","",20,null],[12,"children","","",20,null],[3,"LivemarkRecord","","",null,null],[12,"record_id","","",21,null],[12,"parent_record_id","","",21,null],[12,"parent_title","","",21,null],[12,"date_added","","",21,null],[12,"has_dupe","","",21,null],[12,"title","","",21,null],[12,"feed_url","","",21,null],[12,"site_url","","",21,null],[3,"SeparatorRecord","","",null,null],[12,"record_id","","",22,null],[12,"parent_record_id","","",22,null],[12,"parent_title","","",22,null],[12,"date_added","","",22,null],[12,"has_dupe","","",22,null],[12,"position","","",22,null],[4,"BookmarkItemRecord","","",null,null],[13,"Bookmark","","",23,null],[13,"Query","","",23,null],[13,"Folder","","",23,null],[13,"Livemark","","",23,null],[13,"Separator","","",23,null],[4,"SyncedBookmarkKind","places::bookmark_sync","Synced item kinds. These are stored in …",null,null],[13,"Bookmark","","",24,null],[13,"Query","","",24,null],[13,"Folder","","",24,null],[13,"Livemark","","",24,null],[13,"Separator","","",24,null],[11,"from_u8","","",24,[[["u8",15]],["result",6]]],[4,"SyncedBookmarkValidity","","Synced item validity states. These are stored in …",null,null],[13,"Valid","","",25,null],[13,"Reupload","","",25,null],[13,"Replace","","",25,null],[11,"from_u8","","",25,[[["u8",15]],["result",6]]],[0,"db","places","",null,null],[0,"db","places::db","",null,null],[17,"MAX_VARIABLE_NUMBER","places::db::db","",null,null],[3,"GLOBAL_BOOKMARK_CHANGE_COUNTERS","","",null,null],[3,"PlacesDb","","",null,null],[12,"db","","",26,null],[11,"open","","",26,[[["usize",15],["mutex",3],["connectiontype",4],["arc",3]],["result",6]]],[11,"new_interrupt_handle","","",26,[[],["sqlinterrupthandle",3]]],[11,"begin_interrupt_scope","","",26,[[],["sqlinterruptscope",3]]],[11,"conn_type","","",26,[[],["connectiontype",4]]],[11,"global_bookmark_change_tracker","","Returns an object that can tell you whether any changes …",26,[[],["globalchangecountertracker",3]]],[11,"api_id","","",26,[[],["usize",15]]],[3,"GlobalChangeCounterTracker","","An object that can tell you whether a bookmark changing …",null,null],[11,"new","","",27,[[["usize",15]]]],[11,"changed","","",27,[[],["bool",15]]],[11,"begin_transaction","","Begin the \\\"correct\\\" transaction type for this connection.",26,[[],[["result",6],["placestransaction",3]]]],[3,"PlacesTransaction","places::db","High level transaction type which \\\"does the right thing\\\" …",null,null],[0,"ffi","places","",null,null],[0,"error_codes","places::ffi","",null,null],[17,"UNEXPECTED","places::ffi::error_codes","An unexpected error occurred which likely cannot be …",null,null],[17,"URL_PARSE_ERROR","","A URL was provided that we failed to parse",null,null],[17,"DATABASE_BUSY","","The requested operation failed because the database was …",null,null],[17,"DATABASE_INTERRUPTED","","The requested operation failed because it was interrupted",null,null],[17,"DATABASE_CORRUPT","","The requested operation failed because the store is …",null,null],[17,"INVALID_PLACE_INFO_INVALID_PARENT","","<code>InvalidParent</code>: Attempt to add a child to a non-folder.",null,null],[17,"INVALID_PLACE_INFO_NO_ITEM","","<code>NoItem</code>: The GUID provided does not exist.",null,null],[17,"INVALID_PLACE_INFO_URL_TOO_LONG","","<code>UrlTooLong</code>: The provided URL cannot be inserted, as it is …",null,null],[17,"INVALID_PLACE_INFO_ILLEGAL_CHANGE","","<code>IllegalChange</code>: Attempt to change a property on a bookmark …",null,null],[17,"INVALID_PLACE_INFO_CANNOT_UPDATE_ROOT","","<code>CannotUpdateRoot</code>: Attempt to modify a root in a way that …",null,null],[0,"frecency","places","",null,null],[3,"FrecencySettings","places::frecency","",null,null],[12,"num_visits","","",28,null],[12,"first_bucket_cutoff_days","","",28,null],[12,"second_bucket_cutoff_days","","",28,null],[12,"third_bucket_cutoff_days","","",28,null],[12,"fourth_bucket_cutoff_days","","",28,null],[12,"first_bucket_weight","","",28,null],[12,"second_bucket_weight","","",28,null],[12,"third_bucket_weight","","",28,null],[12,"fourth_bucket_weight","","",28,null],[12,"default_bucket_weight","","",28,null],[12,"embed_visit_bonus","","",28,null],[12,"framed_link_visit_bonus","","",28,null],[12,"link_visit_bonus","","",28,null],[12,"typed_visit_bonus","","",28,null],[12,"bookmark_visit_bonus","","",28,null],[12,"download_visit_bonus","","",28,null],[12,"permanent_redirect_visit_bonus","","",28,null],[12,"temporary_redirect_visit_bonus","","",28,null],[12,"redirect_source_visit_bonus","","",28,null],[12,"default_visit_bonus","","",28,null],[12,"unvisited_bookmark_bonus","","",28,null],[12,"unvisited_typed_bonus","","",28,null],[12,"reload_visit_bonus","","",28,null],[17,"DEFAULT_FRECENCY_SETTINGS","","",null,null],[11,"get_transition_bonus","","",28,[[["visittransition",4],["bool",15],["option",4]],["i32",15]]],[5,"calculate_frecency","","",null,[[["connection",3],["frecencysettings",3],["option",4],["i64",15],["bool",15]],[["result",6],["i32",15]]]],[0,"hash","places","",null,null],[5,"hash_url","places::hash","This should be identical to the \\\"real\\\" …",null,[[["str",15]],["u64",15]]],[4,"PrefixMode","","",null,null],[13,"Lo","","Equivalent to <code>\\\"prefix_lo\\\"</code> in mozilla::places::HashURL",29,null],[13,"Hi","","Equivalent to <code>\\\"prefix_hi\\\"</code> in mozilla::places::HashURL",29,null],[5,"hash_url_prefix","","This should be identical to the \\\"real\\\" …",null,[[["prefixmode",4],["str",15]],["u64",15]]],[5,"hash_string","","This should return identical results to …",null,[[["str",15]],["u32",15]]],[0,"history_sync","places","",null,null],[0,"engine","places::history_sync","",null,null],[17,"LAST_SYNC_META_KEY","places::history_sync::engine","",null,null],[17,"GLOBAL_SYNCID_META_KEY","","",null,null],[17,"COLLECTION_SYNCID_META_KEY","","",null,null],[3,"HistoryEngine","","",null,null],[12,"db","","",30,null],[11,"new","","",30,[[["sqlinterruptscope",3],["placesdb",3]]]],[11,"migrate_v1_global_state","","A utility we can kill by the end of 2019 ;) Or even …",30,[[["placesdb",3]],["result",6]]],[0,"record","places::history_sync","",null,null],[3,"HistoryRecordVisit","places::history_sync::record","",null,null],[12,"date","","",31,null],[12,"transition","","",31,null],[3,"HistoryRecord","","",null,null],[12,"id","","",32,null],[12,"title","","",32,null],[12,"hist_uri","","",32,null],[12,"visits","","",32,null],[12,"sortindex","","",32,null],[12,"ttl","","",32,null],[3,"HistorySyncRecord","","",null,null],[12,"guid","","",33,null],[12,"record","","",33,null],[11,"from_payload","","",33,[[["payload",3]],["result",6]]],[17,"HISTORY_TTL","places::history_sync","",null,null],[3,"ServerVisitTimestamp","","Visit timestamps on the server are <em>microseconds</em> since the …",null,null],[12,"0","","",34,null],[0,"import","places","",null,null],[0,"common","places::import","",null,null],[0,"sql_fns","places::import::common","",null,null],[5,"sanitize_timestamp","places::import::common::sql_fns","",null,[[["context",3]],[["timestamp",3],["result",6]]]],[5,"validate_url","","",null,[[["context",3]],[["option",4],["result",6]]]],[5,"sanitize_utf8","","",null,[[["context",3]],[["option",4],["result",6]]]],[3,"NOW","places::import::common","",null,null],[5,"attached_database","","",null,[[["str",15],["syncconn",3],["url",3]],[["result",6],["executeondrop",3]]]],[3,"ExecuteOnDrop","","We use/abuse the mirror to perform our import, but need …",null,null],[11,"new","","",35,[[["string",3],["syncconn",3]]]],[11,"execute_now","","",35,[[],["result",6]]],[0,"fennec","places::import","",null,null],[0,"bookmarks","places::import::fennec","",null,null],[3,"BookmarksMigrationResult","places::import::fennec::bookmarks","",null,null],[12,"num_total","","",36,null],[12,"num_succeeded","","",36,null],[12,"num_failed","","",36,null],[12,"total_duration","","",36,null],[5,"import","","",null,[[["placesapi",3]],[["result",6],["bookmarksmigrationresult",3]]]],[5,"import_pinned_sites","","",null,[[["placesapi",3]],[["vec",3],["result",6]]]],[4,"FennecBookmarkType","","",null,null],[13,"Folder","","",37,null],[13,"Bookmark","","",37,null],[13,"Separator","","",37,null],[0,"history","places::import::fennec","",null,null],[3,"HistoryMigrationResult","places::import::fennec::history","",null,null],[12,"num_total","","",38,null],[12,"num_succeeded","","",38,null],[12,"num_failed","","",38,null],[12,"total_duration","","",38,null],[5,"import","","",null,[[["placesapi",3]],[["historymigrationresult",3],["result",6]]]],[5,"select_count","","",null,[[["placesdb",3],["str",15]],["u32",15]]],[0,"ios_bookmarks","places::import","",null,null],[5,"import_ios_bookmarks","places::import::ios_bookmarks","This import is used for iOS sync users migrating from …",null,[[["placesapi",3]],["result",6]]],[4,"IosBookmarkType","","",null,null],[13,"Bookmark","","",39,null],[13,"Folder","","",39,null],[13,"Separator","","",39,null],[0,"match_impl","places","",null,null],[4,"MatchBehavior","places::match_impl","",null,null],[13,"Anywhere","","",40,null],[13,"BoundaryAnywhere","","Match first on word boundaries, and if we do not get …",40,null],[13,"Boundary","","Match on word boundaries in each searchable term.",40,null],[13,"Beginning","","Match only the beginning of each search term.",40,null],[13,"AnywhereUnmodified","","Match anywhere in each searchable term without doing any …",40,null],[13,"BeginningCaseSensitive","","Match only the beginning of each search term using a case …",40,null],[3,"SearchBehavior","","",null,null],[18,"HISTORY","","Search through history.",41,null],[18,"BOOKMARK","","Search through bookmarks.",41,null],[18,"TAG","","Search through tags.",41,null],[18,"TITLE","","Search through the title of pages.",41,null],[18,"URL","","Search the URL of pages.",41,null],[18,"TYPED","","Search for typed pages",41,null],[18,"JAVASCRIPT","","Search for javascript: urls",41,null],[18,"OPENPAGE","","Search for open pages (currently not meaningfully …",41,null],[18,"RESTRICT","","Use intersection between history, typed, bookmark, tag …",41,null],[18,"SEARCHES","","Include search suggestions from the currently selected …",41,null],[11,"empty","","Returns an empty set of flags",41,[[],["searchbehavior",3]]],[11,"all","","Returns the set containing all flags.",41,[[],["searchbehavior",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",41,[[["u32",15]],[["option",4],["searchbehavior",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",41,[[["u32",15]],["searchbehavior",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",41,[[["u32",15]],["searchbehavior",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",41,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",41,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",41,[[["searchbehavior",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",41,[[["searchbehavior",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["searchbehavior",3]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["searchbehavior",3]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["searchbehavior",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",41,[[["bool",15],["searchbehavior",3]]]],[11,"any","","",41,[[]]],[5,"find_in_string","","",null,[[["bool",15],["str",15]],["bool",15]]],[3,"AutocompleteMatch","","",null,null],[12,"search_str","","",42,null],[12,"url_str","","",42,null],[12,"title_str","","",42,null],[12,"tags","","",42,null],[12,"visit_count","","",42,null],[12,"typed","","",42,null],[12,"bookmarked","","",42,null],[12,"open_page_count","","",42,null],[12,"match_behavior","","",42,null],[12,"search_behavior","","",42,null],[11,"invoke","","",42,[[],["bool",15]]],[0,"observation","places","",null,null],[3,"VisitObservation","places::observation","An \\\"observation\\\" based model for updating history. You …",null,null],[12,"url","","Ideally, we\'d use url::Url here with <code>serde_url</code>, but we …",43,null],[12,"title","","",43,null],[12,"visit_type","","",43,null],[12,"is_error","","",43,null],[12,"is_redirect_source","","",43,null],[12,"is_permanent_redirect_source","","",43,null],[12,"at","","",43,null],[12,"referrer","","Semantically also a url::Url, See the comment about the …",43,null],[12,"is_remote","","",43,null],[11,"new","","",43,[[["url",3]]]],[11,"with_title","","",43,[[]]],[11,"with_visit_type","","",43,[[]]],[11,"with_is_error","","",43,[[]]],[11,"with_is_redirect_source","","",43,[[]]],[11,"with_is_permanent_redirect_source","","",43,[[]]],[11,"with_at","","",43,[[]]],[11,"with_is_remote","","",43,[[]]],[11,"with_referrer","","",43,[[]]],[11,"get_redirect_frecency_boost","","",43,[[],["bool",15]]],[11,"get_is_hidden","","",43,[[],["bool",15]]],[0,"storage","places","",null,null],[0,"bookmarks","places::storage","",null,null],[0,"public_node","places::storage::bookmarks","",null,null],[3,"PublicNode","places::storage::bookmarks::public_node","This type basically exists to become a …",null,null],[12,"node_type","","",44,null],[12,"guid","","",44,null],[12,"parent_guid","","",44,null],[12,"position","","",44,null],[12,"date_added","","",44,null],[12,"last_modified","","",44,null],[12,"url","","",44,null],[12,"title","","",44,null],[12,"child_guids","","",44,null],[12,"child_nodes","","",44,null],[5,"fetch_bookmarks_by_url","","",null,[[["placesdb",3],["url",3]],[["vec",3],["result",6]]]],[5,"fetch_bookmark","","This is similar to fetch_tree, but does not recursively …",null,[[["placesdb",3],["syncguid",3],["bool",15]],[["option",4],["result",6]]]],[5,"update_bookmark_from_message","","",null,[[["placesdb",3],["protobookmark",3]],["result",6]]],[5,"fetch_public_tree","","Call fetch_public_tree_with_depth with …",null,[[["placesdb",3],["syncguid",3]],[["option",4],["result",6]]]],[5,"fetch_public_tree_with_depth","","Call fetch_tree with a depth parameter and convert the …",null,[[["placesdb",3],["syncguid",3],["fetchdepth",4]],[["option",4],["result",6]]]],[5,"search_bookmarks","","",null,[[["placesdb",3],["u32",15],["str",15]],[["vec",3],["result",6]]]],[5,"recent_bookmarks","","",null,[[["placesdb",3],["u32",15]],[["vec",3],["result",6]]]],[3,"SEARCH_QUERY","","",null,null],[0,"bookmark_sync","places::storage::bookmarks","",null,null],[5,"create_synced_bookmark_roots","places::storage::bookmarks::bookmark_sync","Sets up the syncable roots. All items in …",null,[[["placesdb",3]],["result",6]]],[4,"BookmarkRootGuid","places::storage::bookmarks","Special GUIDs associated with bookmark roots. It\'s …",null,null],[13,"Root","","",45,null],[13,"Menu","","",45,null],[13,"Toolbar","","",45,null],[13,"Unfiled","","",45,null],[13,"Mobile","","",45,null],[17,"USER_CONTENT_ROOTS","","",null,null],[5,"create_bookmark_roots","","",null,[[["connection",3]],["result",6]]],[4,"BookmarkPosition","","",null,null],[13,"Specific","","",46,null],[13,"Append","","",46,null],[4,"FetchDepth","","",null,null],[13,"Specific","","",47,null],[13,"Deepest","","",47,null],[3,"InsertableBookmark","","Structures which can be used to insert a bookmark, folder …",null,null],[12,"parent_guid","","",48,null],[12,"position","","",48,null],[12,"date_added","","",48,null],[12,"last_modified","","",48,null],[12,"guid","","",48,null],[12,"url","","",48,null],[12,"title","","",48,null],[3,"InsertableSeparator","","",null,null],[12,"parent_guid","","",49,null],[12,"position","","",49,null],[12,"date_added","","",49,null],[12,"last_modified","","",49,null],[12,"guid","","",49,null],[3,"InsertableFolder","","",null,null],[12,"parent_guid","","",50,null],[12,"position","","",50,null],[12,"date_added","","",50,null],[12,"last_modified","","",50,null],[12,"guid","","",50,null],[12,"title","","",50,null],[4,"InsertableItem","","",null,null],[13,"Bookmark","","",51,null],[13,"Separator","","",51,null],[13,"Folder","","",51,null],[5,"insert_bookmark","","",null,[[["placesdb",3],["insertableitem",4]],[["result",6],["syncguid",3]]]],[5,"maybe_truncate_title","","",null,[[["option",4]],[["str",15],["option",4]]]],[5,"delete_bookmark","","Delete the specified bookmark. Returns true if a bookmark …",null,[[["placesdb",3],["syncguid",3]],[["bool",15],["result",6]]]],[4,"UpdateTreeLocation","","Support for modifying bookmarks, including changing the …",null,null],[13,"None","","",52,null],[13,"Position","","",52,null],[13,"Parent","","",52,null],[3,"UpdatableBookmark","","Structures which can be used to update a bookmark, folder …",null,null],[12,"location","","",53,null],[12,"url","","",53,null],[12,"title","","",53,null],[3,"UpdatableSeparator","","",null,null],[12,"location","","",54,null],[3,"UpdatableFolder","","",null,null],[12,"location","","",55,null],[12,"title","","",55,null],[4,"UpdatableItem","","",null,null],[13,"Bookmark","","",56,null],[13,"Separator","","",56,null],[13,"Folder","","",56,null],[11,"location","","",56,[[],["updatetreelocation",4]]],[5,"update_bookmark","","",null,[[["placesdb",3],["syncguid",3],["updatableitem",4]],["result",6]]],[3,"BookmarkNode","","",null,null],[12,"guid","","",57,null],[12,"date_added","","",57,null],[12,"last_modified","","",57,null],[12,"title","","",57,null],[12,"url","","",57,null],[3,"SeparatorNode","","",null,null],[12,"guid","","",58,null],[12,"date_added","","",58,null],[12,"last_modified","","",58,null],[3,"FolderNode","","",null,null],[12,"guid","","",59,null],[12,"date_added","","",59,null],[12,"last_modified","","",59,null],[12,"title","","",59,null],[12,"children","","",59,null],[4,"BookmarkTreeNode","","",null,null],[13,"Bookmark","","",60,null],[13,"Separator","","",60,null],[13,"Folder","","",60,null],[11,"node_type","","",60,[[],["bookmarktype",4]]],[11,"guid","","",60,[[],["syncguid",3]]],[11,"created_modified","","",60,[[]]],[5,"bookmarks_get_url_for_keyword","","Get the URL of the bookmark matching a keyword",null,[[["placesdb",3],["str",15]],[["option",4],["result",6]]]],[5,"delete_everything","","Erases all bookmarks and resets all Sync metadata.",null,[[["placesdb",3]],["result",6]]],[5,"insert_tree","","",null,[[["placesdb",3],["foldernode",3]],["result",6]]],[5,"fetch_tree","","Fetch the tree starting at the specified guid. Returns a …",null,[[["placesdb",3],["syncguid",3],["fetchdepth",4]],[["result",6],["option",4]]]],[0,"history","places::storage","",null,null],[0,"history_sync","places::storage::history","",null,null],[3,"FetchedVisit","places::storage::history::history_sync","",null,null],[12,"is_local","","",61,null],[12,"visit_date","","",61,null],[12,"visit_type","","",61,null],[11,"from_row","","",61,[[["row",3]],["result",6]]],[3,"FetchedVisitPage","","",null,null],[12,"url","","",62,null],[12,"guid","","",62,null],[12,"row_id","","",62,null],[12,"title","","",62,null],[11,"from_row","","",62,[[["row",3]],["result",6]]],[5,"fetch_visits","","",null,[[["placesdb",3],["usize",15],["url",3]],[["option",4],["result",6]]]],[5,"apply_synced_visits","","Apply history visit from sync. This assumes they have all …",null,[[["placesdb",3],["syncguid",3],["url",3],["option",4]],["result",6]]],[5,"apply_synced_reconciliation","","",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[5,"apply_synced_deletion","","",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[4,"OutgoingInfo","","",null,null],[13,"Record","","",63,null],[13,"Tombstone","","",63,null],[5,"fetch_outgoing","","",null,[[["placesdb",3],["usize",15]],[["result",6],["hashmap",3]]]],[5,"finish_outgoing","","",null,[[["placesdb",3]],["result",6]]],[5,"apply_observation","places::storage::history","Returns the RowId of a new visit in moz_historyvisits, or …",null,[[["placesdb",3],["visitobservation",3]],[["result",6],["option",4]]]],[5,"apply_observation_direct","","Returns the RowId of a new visit in moz_historyvisits, or …",null,[[["placesdb",3],["visitobservation",3]],[["result",6],["option",4]]]],[5,"update_frecency","","",null,[[["placesdb",3],["rowid",3],["option",4],["bool",15]],["result",6]]],[5,"frecency_stale_at","","Indicates if and when a URL\'s frecency was marked as …",null,[[["placesdb",3],["url",3]],[["result",6],["option",4]]]],[5,"url_to_guid","","Returns the GUID for the specified Url, or None if it …",null,[[["placesdb",3],["url",3]],[["option",4],["result",6]]]],[5,"href_to_guid","","Returns the GUID for the specified Url String, or None if …",null,[[["placesdb",3],["str",15]],[["option",4],["result",6]]]],[5,"delete_visits_for","","Deletes all visits for a page given its GUID, creating …",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[5,"delete_visits_between","","Delete all visits in a date range.",null,[[["placesdb",3],["timestamp",3]],["result",6]]],[5,"delete_place_visit_at_time","","",null,[[["placesdb",3],["url",3],["timestamp",3]],["result",6]]],[5,"delete_place_visit_at_time_by_href","","",null,[[["placesdb",3],["timestamp",3],["str",15]],["result",6]]],[5,"prune_destructively","","",null,[[["placesdb",3]],["result",6]]],[5,"wipe_local","","",null,[[["placesdb",3]],["result",6]]],[5,"delete_everything","","",null,[[["placesdb",3]],["result",6]]],[5,"delete_visits_between_in_tx","","",null,[[["placesdb",3],["timestamp",3]],["result",6]]],[5,"get_visited","","",null,[[["placesdb",3]],[["result",6],["vec",3]]]],[5,"get_visited_into","","Low level api used to implement both get_visited and the …",null,[[["placesdb",3]],["result",6]]],[5,"get_visited_urls","","Get the set of urls that were visited between <code>start</code> and …",null,[[["placesdb",3],["bool",15],["timestamp",3]],[["vec",3],["result",6]]]],[5,"get_top_frecent_site_infos","","",null,[[["placesdb",3],["i64",15],["i32",15]],[["topfrecentsiteinfos",3],["result",6]]]],[5,"get_visit_infos","","",null,[[["placesdb",3],["timestamp",3],["visittransitionset",3]],[["result",6],["historyvisitinfos",3]]]],[5,"get_visit_count","","",null,[[["placesdb",3],["visittransitionset",3]],[["i64",15],["result",6]]]],[5,"get_visit_page","","",null,[[["placesdb",3],["i64",15],["visittransitionset",3]],[["result",6],["historyvisitinfos",3]]]],[5,"get_visit_page_with_bound","","",null,[[["placesdb",3],["i64",15],["visittransitionset",3]],[["historyvisitinfoswithbound",3],["result",6]]]],[0,"tags","places::storage","",null,null],[4,"ValidatedTag","places::storage::tags","The validity of a tag.",null,null],[13,"Invalid","","The tag is invalid.",64,null],[13,"Normalized","","The tag is valid, but normalized to remove leading and …",64,null],[13,"Original","","The original tag is valid.",64,null],[11,"is_original","","Returns <code>true</code> if the original tag is valid; <code>false</code> if it\'s …",64,[[],["bool",15]]],[11,"ensure_valid","","Returns the tag string if the tag is valid or normalized, …",64,[[],[["str",15],["result",6]]]],[5,"validate_tag","","Checks the validity of the specified tag.",null,[[["str",15]],["validatedtag",4]]],[5,"tag_url","","Tags the specified URL.",null,[[["placesdb",3],["url",3],["str",15]],["result",6]]],[5,"untag_url","","Remove the specified tag from the specified URL.",null,[[["placesdb",3],["url",3],["str",15]],["result",6]]],[5,"remove_all_tags_from_url","","Remove all tags from the specified URL.",null,[[["placesdb",3],["url",3]],["result",6]]],[5,"remove_tag","","Remove the specified tag from all URLs.",null,[[["placesdb",3],["str",15]],["result",6]]],[5,"get_urls_with_tag","","Retrieves a list of URLs which have the specified tag.",null,[[["placesdb",3],["str",15]],[["vec",3],["result",6]]]],[5,"get_tags_for_url","","Retrieves a list of tags for the specified URL.",null,[[["placesdb",3],["url",3]],[["vec",3],["result",6]]]],[17,"URL_LENGTH_MAX","places::storage","From …",null,null],[17,"TITLE_LENGTH_MAX","","",null,null],[17,"TAG_LENGTH_MAX","","",null,null],[3,"RowId","","",null,null],[12,"0","","",65,null],[3,"PageInfo","","",null,null],[12,"url","","",66,null],[12,"guid","","",66,null],[12,"row_id","","",66,null],[12,"title","","",66,null],[12,"hidden","","",66,null],[12,"typed","","",66,null],[12,"frecency","","",66,null],[12,"visit_count_local","","",66,null],[12,"visit_count_remote","","",66,null],[12,"last_visit_date_local","","",66,null],[12,"last_visit_date_remote","","",66,null],[12,"sync_status","","",66,null],[12,"sync_change_counter","","",66,null],[11,"from_row","","",66,[[["row",3]],["result",6]]],[3,"FetchedPageInfo","","",null,null],[12,"page","","",67,null],[12,"last_visit_id","","",67,null],[11,"from_row","","",67,[[["row",3]],["result",6]]],[5,"fetch_page_info","","",null,[[["placesdb",3],["url",3]],[["result",6],["option",4]]]],[5,"run_maintenance","","",null,[[["placesdb",3]],["result",6]]],[5,"delete_pending_temp_tables","","Delete all items in the temp tables we use for staging …",null,[[["placesdb",3]],["result",6]]],[0,"msg_types","places","",null,null],[3,"HistoryVisitInfo","places::msg_types","",null,null],[12,"url","","",68,null],[12,"title","","",68,null],[12,"timestamp","","",68,null],[12,"visit_type","","",68,null],[12,"is_hidden","","",68,null],[11,"title","","Returns the value of <code>title</code>, or the default value if <code>title</code> …",68,[[],["str",15]]],[3,"HistoryVisitInfos","","",null,null],[12,"infos","","",69,null],[3,"HistoryVisitInfosWithBound","","",null,null],[12,"infos","","",70,null],[12,"bound","","",70,null],[12,"offset","","",70,null],[3,"BookmarkNode","","A bookmark node.",null,null],[12,"node_type","","The type of this bookmark, a <code>BookmarkType</code> (from <code>types.rs</code>).",71,null],[12,"guid","","The bookmarks guid.",71,null],[12,"date_added","","Creation time, in milliseconds since the unix epoch.",71,null],[12,"last_modified","","Last modification time, in milliseconds since the unix …",71,null],[12,"parent_guid","","Guid of the parent record.",71,null],[12,"position","","Zero based index within the parent.",71,null],[12,"title","","Bookmark title. Not present for type = …",71,null],[12,"url","","Bookmark URL. Only allowed/present for type = …",71,null],[12,"child_guids","","IDs of folder children, in order. Only present for type = …",71,null],[12,"child_nodes","","Data about folder children, in order. Only present for …",71,null],[12,"have_child_nodes","","Returned by reads, and used to distinguish between the …",71,null],[11,"node_type","","Returns the value of <code>node_type</code>, or the default value if …",71,[[],["i32",15]]],[11,"guid","","Returns the value of <code>guid</code>, or the default value if <code>guid</code> …",71,[[],["str",15]]],[11,"date_added","","Returns the value of <code>date_added</code>, or the default value if …",71,[[],["i64",15]]],[11,"last_modified","","Returns the value of <code>last_modified</code>, or the default value …",71,[[],["i64",15]]],[11,"parent_guid","","Returns the value of <code>parent_guid</code>, or the default value if …",71,[[],["str",15]]],[11,"position","","Returns the value of <code>position</code>, or the default value if …",71,[[],["u32",15]]],[11,"title","","Returns the value of <code>title</code>, or the default value if <code>title</code> …",71,[[],["str",15]]],[11,"url","","Returns the value of <code>url</code>, or the default value if <code>url</code> is …",71,[[],["str",15]]],[11,"have_child_nodes","","Returns the value of <code>have_child_nodes</code>, or the default …",71,[[],["bool",15]]],[3,"BookmarkNodeList","","An array of bookmark nodes, since we can\'t represent that …",null,null],[12,"nodes","","",72,null],[3,"SearchResultMessage","","",null,null],[12,"url","","",73,null],[12,"title","","",73,null],[12,"frecency","","",73,null],[12,"reasons","","",73,null],[11,"reasons","","Returns an iterator which yields the valid enum values …",73,[[],[["filtermap",3],["cloned",3]]]],[11,"push_reasons","","Appends the provided enum value to <code>reasons</code>.",73,[[["searchresultreason",4]]]],[3,"SearchResultList","","",null,null],[12,"results","","",74,null],[3,"TopFrecentSiteInfo","","",null,null],[12,"url","","",75,null],[12,"title","","",75,null],[11,"title","","Returns the value of <code>title</code>, or the default value if <code>title</code> …",75,[[],["str",15]]],[3,"TopFrecentSiteInfos","","",null,null],[12,"infos","","",76,null],[4,"SearchResultReason","","Protobuf allows nesting these, but prost behaves weirdly …",null,null],[13,"Keyword","","Never used in practice. Maybe remove this from here and …",77,null],[13,"Origin","","",77,null],[13,"Url","","",77,null],[13,"PreviousUse","","",77,null],[13,"Bookmark","","",77,null],[13,"Tag","","If we get real tag support, just add <code>optional string tags</code> …",77,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>SearchResultReason</code>.",77,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>SearchResultReason</code>, or <code>None</code> if <code>value</code> …",77,[[["i32",15]],[["option",4],["searchresultreason",4]]]],[11,"from","places::api::history","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","places::api::matcher","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","places::api::places_api","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","places::error","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","places::types","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"get_hash","","",79,[[],["u64",15]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"get_hash","","",13,[[],["u64",15]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"get_hash","","",14,[[],["u64",15]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"get_hash","","",15,[[],["u64",15]]],[11,"vzip","","",15,[[]]],[11,"from","places::bookmark_sync::engine","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","places::bookmark_sync::record","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"get_hash","","",17,[[],["u64",15]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"get_hash","","",18,[[],["u64",15]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"get_hash","","",19,[[],["u64",15]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"get_hash","","",20,[[],["u64",15]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"get_hash","","",21,[[],["u64",15]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"get_hash","","",22,[[],["u64",15]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"get_hash","","",23,[[],["u64",15]]],[11,"vzip","","",23,[[]]],[11,"from","places::bookmark_sync","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"get_hash","","",24,[[],["u64",15]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"get_hash","","",25,[[],["u64",15]]],[11,"vzip","","",25,[[]]],[11,"from","places::db::db","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","places::db","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","places::frecency","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","places::hash","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","places::history_sync::engine","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","places::history_sync::record","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"get_hash","","",31,[[],["u64",15]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"get_hash","","",32,[[],["u64",15]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","places::history_sync","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"get_hash","","",34,[[],["u64",15]]],[11,"vzip","","",34,[[]]],[11,"from","places::import::common","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","places::import::fennec::bookmarks","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"get_hash","","",37,[[],["u64",15]]],[11,"vzip","","",37,[[]]],[11,"from","places::import::fennec::history","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","places::import::ios_bookmarks","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"get_hash","","",39,[[],["u64",15]]],[11,"vzip","","",39,[[]]],[11,"from","places::match_impl","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"get_hash","","",41,[[],["u64",15]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","places::observation","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","places::storage::bookmarks::public_node","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","places::storage::bookmarks","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"get_hash","","",45,[[],["u64",15]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","places::storage::history::history_sync","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","places::storage::tags","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","places::storage","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","places::msg_types","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"get_hash","","",77,[[],["u64",15]]],[11,"vzip","","",77,[[]]],[11,"drop","places::api::places_api","",78,[[]]],[11,"drop","places::db::db","",26,[[]]],[11,"drop","places::import::common","",35,[[]]],[11,"from","places::msg_types","",73,[[["searchresult",3]]]],[11,"from","","",77,[[["matchreason",4]]]],[11,"from","places::error","",9,[[["error",3]]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","","",9,[[["parseerror",4]]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["interrupted",3]]]],[11,"from","","",9,[[["decodeerror",3]]]],[11,"from","","",9,[[["utf8error",3]]]],[11,"from","","",10,[[["errorkind",4]],["error",3]]],[11,"from","","",10,[[["error",3]]]],[11,"from","","",10,[[["error",3]]]],[11,"from","","",10,[[["parseerror",4]]]],[11,"from","","",10,[[["error",4]]]],[11,"from","","",10,[[["invalidplaceinfo",4]]]],[11,"from","","",10,[[["corruption",4]]]],[11,"from","","",10,[[["error",3]]]],[11,"from","","",10,[[["error",3]]]],[11,"from","","",10,[[["decodeerror",3]]]],[11,"from","","",10,[[["interrupted",3]]]],[11,"from","","",10,[[["utf8error",3]]]],[11,"from","places::bookmark_sync::record","",17,[[["syncguid",3]],["bookmarkrecordid",3]]],[11,"from","","",23,[[["bookmarkrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",23,[[["queryrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",23,[[["folderrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",23,[[["livemarkrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",23,[[["separatorrecord",3]],["bookmarkitemrecord",4]]],[11,"from","places::bookmark_sync","",24,[[["kind",4]],["syncedbookmarkkind",4]]],[11,"from","places::history_sync","",34,[[["timestamp",3]],["servervisittimestamp",3]]],[11,"from","","",34,[[["systemtime",3]]]],[11,"from","places::storage::bookmarks::public_node","",44,[[["bookmarktreenode",4]]]],[11,"from","places::msg_types","",71,[[["publicnode",3]]]],[11,"from","","",72,[[["vec",3],["publicnode",3]]]],[11,"from","","",72,[[["bookmarknode",3],["vec",3]]]],[11,"from","places::storage::bookmarks","",51,[[["insertablebookmark",3]]]],[11,"from","","",51,[[["insertableseparator",3]]]],[11,"from","","",51,[[["insertablefolder",3]]]],[11,"from","","",56,[[["updatablebookmark",3]]]],[11,"from","","",56,[[["updatableseparator",3]]]],[11,"from","","",56,[[["updatablefolder",3]]]],[11,"from","","",60,[[["bookmarknode",3]]]],[11,"from","","",60,[[["separatornode",3]]]],[11,"from","","",60,[[["foldernode",3]]]],[11,"extend","places::types","",79,[[]]],[11,"extend","places::match_impl","",41,[[["intoiterator",8]]]],[11,"into_iter","places::types","",79,[[],["visittransitionsetiter",3]]],[11,"clone","places::api::history","",2,[[],["redirectsourcetype",4]]],[11,"clone","places::api::matcher","",3,[[],["searchparams",3]]],[11,"clone","","",4,[[],["matchreason",4]]],[11,"clone","","",5,[[],["searchresult",3]]],[11,"clone","places::api::places_api","",6,[[],["connectiontype",4]]],[11,"clone","places::types","",79,[[],["visittransitionset",3]]],[11,"clone","","",80,[[],["invalidvisittype",3]]],[11,"clone","","",13,[[],["visittransition",4]]],[11,"clone","","",14,[[],["bookmarktype",4]]],[11,"clone","","",15,[[],["syncstatus",4]]],[11,"clone","places::bookmark_sync::record","",17,[[],["bookmarkrecordid",3]]],[11,"clone","","",18,[[],["bookmarkrecord",3]]],[11,"clone","","",19,[[],["queryrecord",3]]],[11,"clone","","",20,[[],["folderrecord",3]]],[11,"clone","","",21,[[],["livemarkrecord",3]]],[11,"clone","","",22,[[],["separatorrecord",3]]],[11,"clone","","",23,[[],["bookmarkitemrecord",4]]],[11,"clone","places::bookmark_sync","",24,[[],["syncedbookmarkkind",4]]],[11,"clone","","",25,[[],["syncedbookmarkvalidity",4]]],[11,"clone","places::frecency","",28,[[],["frecencysettings",3]]],[11,"clone","places::hash","",29,[[],["prefixmode",4]]],[11,"clone","places::history_sync::record","",31,[[],["historyrecordvisit",3]]],[11,"clone","","",32,[[],["historyrecord",3]]],[11,"clone","places::history_sync","",34,[[],["servervisittimestamp",3]]],[11,"clone","places::import::fennec::bookmarks","",36,[[],["bookmarksmigrationresult",3]]],[11,"clone","","",37,[[],["fennecbookmarktype",4]]],[11,"clone","places::import::fennec::history","",38,[[],["historymigrationresult",3]]],[11,"clone","places::import::ios_bookmarks","",39,[[],["iosbookmarktype",4]]],[11,"clone","places::match_impl","",40,[[],["matchbehavior",4]]],[11,"clone","","",41,[[],["searchbehavior",3]]],[11,"clone","places::storage::bookmarks::public_node","",44,[[],["publicnode",3]]],[11,"clone","places::storage::bookmarks","",45,[[],["bookmarkrootguid",4]]],[11,"clone","","",46,[[],["bookmarkposition",4]]],[11,"clone","","",48,[[],["insertablebookmark",3]]],[11,"clone","","",49,[[],["insertableseparator",3]]],[11,"clone","","",50,[[],["insertablefolder",3]]],[11,"clone","","",51,[[],["insertableitem",4]]],[11,"clone","","",52,[[],["updatetreelocation",4]]],[11,"clone","","",53,[[],["updatablebookmark",3]]],[11,"clone","","",54,[[],["updatableseparator",3]]],[11,"clone","","",55,[[],["updatablefolder",3]]],[11,"clone","","",56,[[],["updatableitem",4]]],[11,"clone","places::storage::history::history_sync","",61,[[],["fetchedvisit",3]]],[11,"clone","places::storage::tags","",64,[[],["validatedtag",4]]],[11,"clone","places::storage","",65,[[],["rowid",3]]],[11,"clone","places::msg_types","",68,[[],["historyvisitinfo",3]]],[11,"clone","","",69,[[],["historyvisitinfos",3]]],[11,"clone","","",70,[[],["historyvisitinfoswithbound",3]]],[11,"clone","","",71,[[],["bookmarknode",3]]],[11,"clone","","",72,[[],["bookmarknodelist",3]]],[11,"clone","","",73,[[],["searchresultmessage",3]]],[11,"clone","","",74,[[],["searchresultlist",3]]],[11,"clone","","",75,[[],["topfrecentsiteinfo",3]]],[11,"clone","","",76,[[],["topfrecentsiteinfos",3]]],[11,"clone","","",77,[[],["searchresultreason",4]]],[11,"default","places::types","",79,[[],["visittransitionset",3]]],[11,"default","places::frecency","",28,[[]]],[11,"default","places::history_sync::record","",31,[[],["historyrecordvisit",3]]],[11,"default","places::history_sync","",34,[[],["servervisittimestamp",3]]],[11,"default","places::import::fennec::bookmarks","",36,[[],["bookmarksmigrationresult",3]]],[11,"default","places::import::fennec::history","",38,[[],["historymigrationresult",3]]],[11,"default","places::match_impl","",41,[[],["searchbehavior",3]]],[11,"default","places::storage::bookmarks::public_node","",44,[[]]],[11,"default","places::storage::bookmarks","",52,[[]]],[11,"default","","",53,[[],["updatablebookmark",3]]],[11,"default","","",55,[[],["updatablefolder",3]]],[11,"default","","",58,[[],["separatornode",3]]],[11,"default","","",59,[[],["foldernode",3]]],[11,"default","places::storage","",65,[[],["rowid",3]]],[11,"default","places::msg_types","",68,[[],["historyvisitinfo",3]]],[11,"default","","",69,[[],["historyvisitinfos",3]]],[11,"default","","",70,[[],["historyvisitinfoswithbound",3]]],[11,"default","","",71,[[],["bookmarknode",3]]],[11,"default","","",72,[[],["bookmarknodelist",3]]],[11,"default","","",73,[[],["searchresultmessage",3]]],[11,"default","","",74,[[],["searchresultlist",3]]],[11,"default","","",75,[[],["topfrecentsiteinfo",3]]],[11,"default","","",76,[[],["topfrecentsiteinfos",3]]],[11,"default","","",77,[[],["searchresultreason",4]]],[11,"cmp","places::types","",80,[[["invalidvisittype",3]],["ordering",4]]],[11,"cmp","","",14,[[["bookmarktype",4]],["ordering",4]]],[11,"cmp","","",15,[[["syncstatus",4]],["ordering",4]]],[11,"cmp","places::bookmark_sync","",24,[[["syncedbookmarkkind",4]],["ordering",4]]],[11,"cmp","","",25,[[["syncedbookmarkvalidity",4]],["ordering",4]]],[11,"cmp","places::history_sync","",34,[[["servervisittimestamp",3]],["ordering",4]]],[11,"cmp","places::import::fennec::bookmarks","",37,[[["fennecbookmarktype",4]],["ordering",4]]],[11,"cmp","places::import::ios_bookmarks","",39,[[["iosbookmarktype",4]],["ordering",4]]],[11,"cmp","places::match_impl","",41,[[["searchbehavior",3]],["ordering",4]]],[11,"cmp","places::storage","",65,[[["rowid",3]],["ordering",4]]],[11,"cmp","places::msg_types","",77,[[["searchresultreason",4]],["ordering",4]]],[11,"eq","places::api::history","",2,[[["redirectsourcetype",4]],["bool",15]]],[11,"eq","places::api::matcher","",4,[[["matchreason",4]],["bool",15]]],[11,"ne","","",4,[[["matchreason",4]],["bool",15]]],[11,"eq","","",5,[[["searchresult",3]],["bool",15]]],[11,"ne","","",5,[[["searchresult",3]],["bool",15]]],[11,"eq","places::api::places_api","",6,[[["connectiontype",4]],["bool",15]]],[11,"eq","places::types","",79,[[["visittransitionset",3]],["bool",15]]],[11,"ne","","",79,[[["visittransitionset",3]],["bool",15]]],[11,"eq","","",80,[[["invalidvisittype",3]],["bool",15]]],[11,"eq","","",13,[[["visittransition",4]],["bool",15]]],[11,"eq","","",14,[[["bookmarktype",4]],["bool",15]]],[11,"eq","","",15,[[["syncstatus",4]],["bool",15]]],[11,"eq","places::bookmark_sync::record","",17,[[["bookmarkrecordid",3]],["bool",15]]],[11,"ne","","",17,[[["bookmarkrecordid",3]],["bool",15]]],[11,"eq","","",18,[[["bookmarkrecord",3]],["bool",15]]],[11,"ne","","",18,[[["bookmarkrecord",3]],["bool",15]]],[11,"eq","","",19,[[["queryrecord",3]],["bool",15]]],[11,"ne","","",19,[[["queryrecord",3]],["bool",15]]],[11,"eq","","",20,[[["folderrecord",3]],["bool",15]]],[11,"ne","","",20,[[["folderrecord",3]],["bool",15]]],[11,"eq","","",21,[[["livemarkrecord",3]],["bool",15]]],[11,"ne","","",21,[[["livemarkrecord",3]],["bool",15]]],[11,"eq","","",22,[[["separatorrecord",3]],["bool",15]]],[11,"ne","","",22,[[["separatorrecord",3]],["bool",15]]],[11,"eq","","",23,[[["bookmarkitemrecord",4]],["bool",15]]],[11,"ne","","",23,[[["bookmarkitemrecord",4]],["bool",15]]],[11,"eq","places::bookmark_sync","",24,[[["syncedbookmarkkind",4]],["bool",15]]],[11,"eq","","",25,[[["syncedbookmarkvalidity",4]],["bool",15]]],[11,"eq","places::frecency","",28,[[["frecencysettings",3]],["bool",15]]],[11,"ne","","",28,[[["frecencysettings",3]],["bool",15]]],[11,"eq","places::hash","",29,[[["prefixmode",4]],["bool",15]]],[11,"eq","places::history_sync::record","",31,[[["historyrecordvisit",3]],["bool",15]]],[11,"ne","","",31,[[["historyrecordvisit",3]],["bool",15]]],[11,"eq","","",32,[[["historyrecord",3]],["bool",15]]],[11,"ne","","",32,[[["historyrecord",3]],["bool",15]]],[11,"eq","places::history_sync","",34,[[["servervisittimestamp",3]],["bool",15]]],[11,"ne","","",34,[[["servervisittimestamp",3]],["bool",15]]],[11,"eq","places::import::fennec::bookmarks","",36,[[["bookmarksmigrationresult",3]],["bool",15]]],[11,"ne","","",36,[[["bookmarksmigrationresult",3]],["bool",15]]],[11,"eq","","",37,[[["fennecbookmarktype",4]],["bool",15]]],[11,"eq","places::import::fennec::history","",38,[[["historymigrationresult",3]],["bool",15]]],[11,"ne","","",38,[[["historymigrationresult",3]],["bool",15]]],[11,"eq","places::import::ios_bookmarks","",39,[[["iosbookmarktype",4]],["bool",15]]],[11,"eq","places::match_impl","",40,[[["matchbehavior",4]],["bool",15]]],[11,"eq","","",41,[[["searchbehavior",3]],["bool",15]]],[11,"ne","","",41,[[["searchbehavior",3]],["bool",15]]],[11,"eq","places::storage::bookmarks::public_node","",44,[[["publicnode",3]],["bool",15]]],[11,"eq","places::storage::bookmarks","",45,[[["bookmarkrootguid",4]],["bool",15]]],[11,"eq","","",45,[[["syncguid",3]],["bool",15]]],[11,"eq","","",45,[[["syncguid",3]],["bool",15]]],[11,"eq","","",45,[[["str",15]],["bool",15]]],[11,"eq","places::storage::history::history_sync","",61,[[["fetchedvisit",3]],["bool",15]]],[11,"ne","","",61,[[["fetchedvisit",3]],["bool",15]]],[11,"eq","places::storage::tags","",64,[[["validatedtag",4]],["bool",15]]],[11,"ne","","",64,[[["validatedtag",4]],["bool",15]]],[11,"eq","places::storage","",65,[[["rowid",3]],["bool",15]]],[11,"ne","","",65,[[["rowid",3]],["bool",15]]],[11,"eq","places::msg_types","",68,[[["historyvisitinfo",3]],["bool",15]]],[11,"ne","","",68,[[["historyvisitinfo",3]],["bool",15]]],[11,"eq","","",69,[[["historyvisitinfos",3]],["bool",15]]],[11,"ne","","",69,[[["historyvisitinfos",3]],["bool",15]]],[11,"eq","","",70,[[["historyvisitinfoswithbound",3]],["bool",15]]],[11,"ne","","",70,[[["historyvisitinfoswithbound",3]],["bool",15]]],[11,"eq","","",71,[[["bookmarknode",3]],["bool",15]]],[11,"ne","","",71,[[["bookmarknode",3]],["bool",15]]],[11,"eq","","",72,[[["bookmarknodelist",3]],["bool",15]]],[11,"ne","","",72,[[["bookmarknodelist",3]],["bool",15]]],[11,"eq","","",73,[[["searchresultmessage",3]],["bool",15]]],[11,"ne","","",73,[[["searchresultmessage",3]],["bool",15]]],[11,"eq","","",74,[[["searchresultlist",3]],["bool",15]]],[11,"ne","","",74,[[["searchresultlist",3]],["bool",15]]],[11,"eq","","",75,[[["topfrecentsiteinfo",3]],["bool",15]]],[11,"ne","","",75,[[["topfrecentsiteinfo",3]],["bool",15]]],[11,"eq","","",76,[[["topfrecentsiteinfos",3]],["bool",15]]],[11,"ne","","",76,[[["topfrecentsiteinfos",3]],["bool",15]]],[11,"eq","","",77,[[["searchresultreason",4]],["bool",15]]],[11,"partial_cmp","places::api::history","",2,[[["redirectsourcetype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::types","",80,[[["invalidvisittype",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",14,[[["bookmarktype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",15,[[["syncstatus",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::bookmark_sync","",24,[[["syncedbookmarkkind",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",25,[[["syncedbookmarkvalidity",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::history_sync","",34,[[["servervisittimestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",34,[[["servervisittimestamp",3]],["bool",15]]],[11,"le","","",34,[[["servervisittimestamp",3]],["bool",15]]],[11,"gt","","",34,[[["servervisittimestamp",3]],["bool",15]]],[11,"ge","","",34,[[["servervisittimestamp",3]],["bool",15]]],[11,"partial_cmp","places::import::fennec::bookmarks","",37,[[["fennecbookmarktype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::import::ios_bookmarks","",39,[[["iosbookmarktype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::match_impl","",41,[[["searchbehavior",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["searchbehavior",3]],["bool",15]]],[11,"le","","",41,[[["searchbehavior",3]],["bool",15]]],[11,"gt","","",41,[[["searchbehavior",3]],["bool",15]]],[11,"ge","","",41,[[["searchbehavior",3]],["bool",15]]],[11,"partial_cmp","places::storage::bookmarks","",45,[[["bookmarkrootguid",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::storage","",65,[[["rowid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",65,[[["rowid",3]],["bool",15]]],[11,"le","","",65,[[["rowid",3]],["bool",15]]],[11,"gt","","",65,[[["rowid",3]],["bool",15]]],[11,"ge","","",65,[[["rowid",3]],["bool",15]]],[11,"partial_cmp","places::msg_types","",77,[[["searchresultreason",4]],[["option",4],["ordering",4]]]],[11,"deref","places::api::places_api","",78,[[],["placesdb",3]]],[11,"deref","places::db::db","",81,[[],["rwlock",3]]],[11,"deref","","",26,[[],["connection",3]]],[11,"deref","places::db","",82,[[],["connection",3]]],[11,"deref","places::history_sync::engine","",30,[[],["connection",3]]],[11,"deref","places::import::common","",83,[[],["timestamp",3]]],[11,"deref","places::storage::bookmarks::public_node","",84,[[],["string",3]]],[11,"fmt","places::api::history","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","places::api::matcher","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","places::api::places_api","",6,[[["formatter",3]],["result",6]]],[11,"fmt","places::error","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","places::types","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","places::bookmark_sync::record","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","places::bookmark_sync","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","places::db::db","",26,[[["formatter",3]],["result",6]]],[11,"fmt","places::frecency","",28,[[["formatter",3]],["result",6]]],[11,"fmt","places::hash","",29,[[["formatter",3]],["result",6]]],[11,"fmt","places::history_sync::record","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","places::history_sync","",34,[[["formatter",3]],["result",6]]],[11,"fmt","places::import::fennec::bookmarks","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","places::import::fennec::history","",38,[[["formatter",3]],["result",6]]],[11,"fmt","places::import::ios_bookmarks","",39,[[["formatter",3]],["result",6]]],[11,"fmt","places::match_impl","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","places::observation","",43,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::bookmarks::public_node","",44,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::bookmarks","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::history::history_sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::tags","",64,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","places::msg_types","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","places::error","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","places::types","",80,[[["formatter",3]],["result",6]]],[11,"fmt","places::history_sync","",34,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage","",65,[[["formatter",3]],["result",6]]],[11,"sub","places::match_impl","Returns the set difference of the two sets of flags.",41,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",41,[[["searchbehavior",3]]]],[11,"not","","Returns the complement of this set of flags.",41,[[],["searchbehavior",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",41,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"bitor","","Returns the union of the two sets of flags.",41,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",41,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",41,[[["searchbehavior",3]]]],[11,"bitor_assign","","Adds the set of flags.",41,[[["searchbehavior",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",41,[[["searchbehavior",3]]]],[11,"hash","places::types","",79,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","places::bookmark_sync::record","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","places::bookmark_sync","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","places::history_sync::record","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","places::history_sync","",34,[[]]],[11,"hash","places::import::fennec::bookmarks","",37,[[]]],[11,"hash","places::import::ios_bookmarks","",39,[[]]],[11,"hash","places::match_impl","",41,[[]]],[11,"hash","places::storage::bookmarks","",45,[[]]],[11,"hash","places::msg_types","",77,[[]]],[11,"try_from","places::types","",79,[[["u16",15]],[["result",4],["invalidvisittype",3]]]],[11,"try_from","","",13,[[["u8",15]],["result",4]]],[11,"from_iter","","",79,[[]]],[11,"from_iter","places::match_impl","",41,[[["intoiterator",8]],["searchbehavior",3]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"source","places::error","",9,[[],[["option",4],["error",8]]]],[11,"column_result","places::types","",14,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","","",15,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","places::match_impl","",40,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","","",41,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","places::storage","",65,[[["valueref",4]],["fromsqlresult",6]]],[11,"to_sql","places::types","",79,[[],[["tosqloutput",4],["result",6]]]],[11,"to_sql","","",13,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","","",14,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","","",15,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","places::bookmark_sync","",24,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","","",25,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","places::match_impl","",40,[[],[["tosqloutput",4],["result",6]]]],[11,"to_sql","","",41,[[],[["tosqloutput",4],["result",6]]]],[11,"to_sql","places::storage","",65,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"serialize","places::api::matcher","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","places::types","",13,[[["serializer",8]],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","places::bookmark_sync::record","",17,[[["serializer",8]],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","places::history_sync::record","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","places::history_sync","",34,[[],["result",4]]],[11,"serialize","places::import::fennec::bookmarks","",36,[[],["result",4]]],[11,"serialize","places::import::fennec::history","",38,[[],["result",4]]],[11,"serialize","places::observation","",43,[[],["result",4]]],[11,"serialize","places::storage::bookmarks","",60,[[],["result",4]]],[11,"serialize","places::storage","",65,[[],["result",4]]],[11,"deserialize","places::types","",13,[[["deserializer",8]],["result",4]]],[11,"deserialize","places::bookmark_sync::record","",17,[[["deserializer",8]],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","places::history_sync::record","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","places::history_sync","",34,[[],["result",4]]],[11,"deserialize","places::import::fennec::bookmarks","",36,[[],["result",4]]],[11,"deserialize","places::import::fennec::history","",38,[[],["result",4]]],[11,"deserialize","places::observation","",43,[[],["result",4]]],[11,"deserialize","places::storage::bookmarks","",60,[[],["result",4]]],[11,"deserialize","places::storage","",65,[[],["result",4]]],[11,"conn","places::db::db","",26,[[],["connection",3]]],[11,"conn","places::db","",82,[[],["connection",3]]],[11,"initialize","places::db::db","",81,[[]]],[11,"initialize","places::import::common","",83,[[]]],[11,"initialize","places::storage::bookmarks::public_node","",84,[[]]],[11,"ffi_default","places::msg_types","",74,[[]]],[11,"into_ffi_value","","",74,[[]]],[11,"ffi_default","","",76,[[]]],[11,"into_ffi_value","","",76,[[]]],[11,"ffi_default","","",69,[[]]],[11,"into_ffi_value","","",69,[[]]],[11,"ffi_default","","",70,[[]]],[11,"into_ffi_value","","",70,[[]]],[11,"ffi_default","","",71,[[]]],[11,"into_ffi_value","","",71,[[]]],[11,"ffi_default","","",72,[[]]],[11,"into_ffi_value","","",72,[[]]],[11,"ffi_default","places::storage::bookmarks::public_node","",44,[[]]],[11,"into_ffi_value","","",44,[[]]],[11,"collection_name","places::bookmark_sync::engine","",16,[[],[["str",15],["cow",4]]]],[11,"apply_incoming","","",16,[[["incomingchangeset",6],["vec",3],["engine",3]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",16,[[["syncguid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"get_collection_requests","","",16,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[11,"get_sync_assoc","","",16,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",16,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","Erases all local items. Unlike <code>reset</code>, this keeps all …",16,[[],["result",6]]],[11,"collection_name","places::history_sync::engine","",30,[[],[["str",15],["cow",4]]]],[11,"apply_incoming","","",30,[[["incomingchangeset",6],["vec",3],["engine",3]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",30,[[["guid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"get_collection_requests","","",30,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[11,"get_sync_assoc","","",30,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",30,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",30,[[],["result",6]]],[11,"encode_raw","places::msg_types","",68,[[]]],[11,"merge_field","","",68,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",68,[[],["usize",15]]],[11,"clear","","",68,[[]]],[11,"encode_raw","","",69,[[]]],[11,"merge_field","","",69,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",69,[[],["usize",15]]],[11,"clear","","",69,[[]]],[11,"encode_raw","","",70,[[]]],[11,"merge_field","","",70,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",70,[[],["usize",15]]],[11,"clear","","",70,[[]]],[11,"encode_raw","","",71,[[]]],[11,"merge_field","","",71,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",71,[[],["usize",15]]],[11,"clear","","",71,[[]]],[11,"encode_raw","","",72,[[]]],[11,"merge_field","","",72,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",72,[[],["usize",15]]],[11,"clear","","",72,[[]]],[11,"encode_raw","","",73,[[]]],[11,"merge_field","","",73,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",73,[[],["usize",15]]],[11,"clear","","",73,[[]]],[11,"encode_raw","","",74,[[]]],[11,"merge_field","","",74,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",74,[[],["usize",15]]],[11,"clear","","",74,[[]]],[11,"encode_raw","","",75,[[]]],[11,"merge_field","","",75,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",75,[[],["usize",15]]],[11,"clear","","",75,[[]]],[11,"encode_raw","","",76,[[]]],[11,"merge_field","","",76,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",76,[[],["usize",15]]],[11,"clear","","",76,[[]]],[11,"new","places::types","",79,[[]]],[11,"empty","","",79,[[]]],[11,"all","","",79,[[]]],[11,"single","","",79,[[["visittransition",4]]]],[11,"for_specific","","",79,[[]]],[11,"into_u16","","",79,[[],["u16",15]]],[11,"from_u16","","",79,[[["u16",15]],[["invalidvisittype",3],["visittransitionset",3],["result",4]]]],[11,"contains","","",79,[[["visittransition",4]],["bool",15]]],[11,"insert","","",79,[[["visittransition",4]]]],[11,"remove","","",79,[[["visittransition",4]]]],[11,"complement","","",79,[[],["visittransitionset",3]]],[11,"len","","",79,[[],["usize",15]]],[11,"is_empty","","",79,[[],["bool",15]]],[11,"should_commit","places::db","Returns <code>true</code> if the current transaction should be …",82,[[],["bool",15]]],[11,"maybe_commit","","For transactions on sync connnections: Checks to see if …",82,[[],["result",6]]],[11,"commit","","Consumes and commits a PlacesTransaction transaction.",82,[[],["result",6]]],[11,"rollback","","Consumes and attempst to roll back a PlacesTransaction. …",82,[[],["result",6]]],[11,"into_insertable","places::msg_types","Convert the protobuf bookmark into information for …",71,[[],[["result",6],["insertableitem",4]]]],[11,"as_str","places::storage::bookmarks","",45,[[],["str",15]]],[11,"guid","","",45,[[],["syncguid",3]]],[11,"as_guid","","",45,[[],["syncguid",3]]],[11,"well_known","","",45,[[["str",15]],["option",4]]],[11,"from_guid","","",45,[[["syncguid",3]],["option",4]]]],"p":[[3,"AddablePlaceInfo"],[3,"AddableVisit"],[4,"RedirectSourceType"],[3,"SearchParams"],[4,"MatchReason"],[3,"SearchResult"],[4,"ConnectionType"],[3,"SyncState"],[3,"PlacesApi"],[4,"ErrorKind"],[3,"Error"],[4,"InvalidPlaceInfo"],[4,"Corruption"],[4,"VisitTransition"],[4,"BookmarkType"],[4,"SyncStatus"],[3,"BookmarksEngine"],[3,"BookmarkRecordId"],[3,"BookmarkRecord"],[3,"QueryRecord"],[3,"FolderRecord"],[3,"LivemarkRecord"],[3,"SeparatorRecord"],[4,"BookmarkItemRecord"],[4,"SyncedBookmarkKind"],[4,"SyncedBookmarkValidity"],[3,"PlacesDb"],[3,"GlobalChangeCounterTracker"],[3,"FrecencySettings"],[4,"PrefixMode"],[3,"HistoryEngine"],[3,"HistoryRecordVisit"],[3,"HistoryRecord"],[3,"HistorySyncRecord"],[3,"ServerVisitTimestamp"],[3,"ExecuteOnDrop"],[3,"BookmarksMigrationResult"],[4,"FennecBookmarkType"],[3,"HistoryMigrationResult"],[4,"IosBookmarkType"],[4,"MatchBehavior"],[3,"SearchBehavior"],[3,"AutocompleteMatch"],[3,"VisitObservation"],[3,"PublicNode"],[4,"BookmarkRootGuid"],[4,"BookmarkPosition"],[4,"FetchDepth"],[3,"InsertableBookmark"],[3,"InsertableSeparator"],[3,"InsertableFolder"],[4,"InsertableItem"],[4,"UpdateTreeLocation"],[3,"UpdatableBookmark"],[3,"UpdatableSeparator"],[3,"UpdatableFolder"],[4,"UpdatableItem"],[3,"BookmarkNode"],[3,"SeparatorNode"],[3,"FolderNode"],[4,"BookmarkTreeNode"],[3,"FetchedVisit"],[3,"FetchedVisitPage"],[4,"OutgoingInfo"],[4,"ValidatedTag"],[3,"RowId"],[3,"PageInfo"],[3,"FetchedPageInfo"],[3,"HistoryVisitInfo"],[3,"HistoryVisitInfos"],[3,"HistoryVisitInfosWithBound"],[3,"BookmarkNode"],[3,"BookmarkNodeList"],[3,"SearchResultMessage"],[3,"SearchResultList"],[3,"TopFrecentSiteInfo"],[3,"TopFrecentSiteInfos"],[4,"SearchResultReason"],[3,"SyncConn"],[3,"VisitTransitionSet"],[3,"InvalidVisitType"],[3,"GLOBAL_BOOKMARK_CHANGE_COUNTERS"],[3,"PlacesTransaction"],[3,"NOW"],[3,"SEARCH_QUERY"]]},\
"places_ffi":{"doc":"","i":[[3,"APIS","places_ffi","",null,null],[5,"places_api_new","","Instantiate a places API. Returned api must be freed with …",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"places_new_sync_conn_interrupt_handle","","Get an interrupt handle for the PlacesApi\'s sync …",null,[[["externerror",3],["u64",15]]]],[5,"places_connection_new","","",null,[[["u8",15],["externerror",3],["u64",15]],["u64",15]]],[5,"places_bookmarks_import_from_ios","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_bookmarks_import_from_fennec","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_pinned_sites_import_from_fennec","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"places_history_import_from_fennec","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_api_return_write_conn","","",null,[[["externerror",3],["u64",15]]]],[5,"places_new_interrupt_handle","","Get the interrupt handle for a connection. Must be …",null,[[["externerror",3],["u64",15]]]],[5,"places_interrupt","","",null,[[["externerror",3],["sqlinterrupthandle",3]]]],[5,"places_note_observation","","Add an observation to the database. The observation is a …",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_query_autocomplete","","Execute a query, returning a <code>Vec<SearchResult></code> as a JSON …",null,[[["u32",15],["u64",15],["externerror",3],["ffistr",3]],["bytebuffer",3]]],[5,"places_match_url","","Execute a query, returning a URL string or null. Returned …",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_get_visited","","SafetyThis takes a bunch of pointers and dereferences all …",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"places_get_visited_urls_in_range","","",null,[[["u8",15],["i64",15],["u64",15],["externerror",3]]]],[5,"places_delete_visits_for","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_delete_visits_between","","",null,[[["i64",15],["externerror",3],["u64",15]]]],[5,"places_delete_visit","","",null,[[["u64",15],["i64",15],["externerror",3],["ffistr",3]]]],[5,"places_wipe_local","","",null,[[["externerror",3],["u64",15]]]],[5,"places_run_maintenance","","",null,[[["externerror",3],["u64",15]]]],[5,"places_prune_destructively","","",null,[[["externerror",3],["u64",15]]]],[5,"places_delete_everything","","",null,[[["externerror",3],["u64",15]]]],[5,"places_get_top_frecent_site_infos","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_get_visit_infos","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_get_visit_count","","",null,[[["i32",15],["externerror",3],["u64",15]],["i64",15]]],[5,"places_get_visit_page","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_get_visit_page_with_bound","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_accept_result","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_reset","","",null,[[["externerror",3],["u64",15]]]],[5,"bookmarks_reset","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_history_sync","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"sync15_bookmarks_sync","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"bookmarks_get_tree","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"bookmarks_delete_everything","","",null,[[["externerror",3],["u64",15]]]],[5,"bookmarks_get_by_guid","","",null,[[["u8",15],["u64",15],["externerror",3],["ffistr",3]],["bytebuffer",3]]],[5,"bookmarks_insert","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"bookmarks_update","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"bookmarks_delete","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["u8",15]]],[5,"bookmarks_get_all_with_url","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"bookmarks_get_url_for_keyword","","SafetyDeref pointer, thus unsafe",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"bookmarks_search","","",null,[[["i32",15],["u64",15],["externerror",3],["ffistr",3]],["bytebuffer",3]]],[5,"bookmarks_get_recent","","",null,[[["i32",15],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"places_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"places_destroy_bytebuffer","","",null,[[["bytebuffer",3]]]],[5,"places_api_destroy","","",null,[[["externerror",3],["u64",15]]]],[5,"places_connection_destroy","","",null,[[["externerror",3],["u64",15]]]],[5,"places_interrupt_handle_destroy","","SafetyThis is equivalent to calling Box::from_raw with …",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"deref","","",0,[[],["concurrenthandlemap",3]]],[11,"initialize","","",0,[[]]]],"p":[[3,"APIS"]]},\
"protobuf_gen":{"doc":"","i":[[3,"ProtobufOpts","protobuf_gen","",null,null],[12,"dir","","",0,null],[12,"out_dir","","",0,null],[5,"main","","",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"ProtobufOpts"]]},\
"push":{"doc":"","i":[[0,"communications","push","Server Communications.",null,null],[3,"PersistedRateLimiter","push::communications","",null,null],[3,"RegisterResponse","","",null,null],[12,"uaid","","The UAID associated with the request",0,null],[12,"channel_id","","The Channel ID associated with the request",0,null],[12,"secret","","Auth token for subsequent calls (note, only generated on …",0,null],[12,"endpoint","","Push endpoint for 3rd parties",0,null],[12,"senderid","","The Sender/Group ID echoed back (if applicable.)",0,null],[4,"BroadcastValue","","",null,null],[13,"Value","","",1,null],[13,"Nested","","",1,null],[8,"Connection","","A new communication link to the Autopush server",null,null],[10,"subscribe","","send a new subscription request to the server, get back …",2,[[["option",4],["str",15]],[["result",6],["registerresponse",3]]]],[10,"unsubscribe","","Drop an endpoint",2,[[["option",4],["str",15]],[["bool",15],["result",6]]]],[10,"update","","Update the autopush server with the new native OS …",2,[[["str",15]],[["bool",15],["result",6]]]],[10,"channel_list","","Get a list of server known channels.",2,[[],[["vec",3],["result",6]]]],[10,"verify_connection","","Verify that the known channel list matches up with the …",2,[[],[["bool",15],["result",6]]]],[10,"broadcast_subscribe","","Add one or more new broadcast subscriptions.",2,[[["broadcastvalue",4]],[["broadcastvalue",4],["result",6]]]],[10,"broadcasts","","get the list of broadcasts",2,[[],[["broadcastvalue",4],["result",6]]]],[3,"ConnectHttp","","Connect to the Autopush server via the HTTP interface",null,null],[12,"options","","",3,null],[12,"uaid","","",3,null],[12,"auth","","",3,null],[5,"connect","","",null,[[["option",4],["pushconfiguration",3],["string",3]],[["connecthttp",3],["result",6]]]],[0,"config","push","",null,null],[3,"PushConfiguration","push::config","",null,null],[12,"server_host","","host name:port",4,null],[12,"socket_protocol","","connection protocol (for direct connections \\\"wss\\\")",4,null],[12,"http_protocol","","http protocol (for mobile, bridged connections \\\"https\\\")",4,null],[12,"bridge_type","","bridge protocol (\\\"fcm\\\")",4,null],[12,"registration_id","","Native OS registration ID value",4,null],[12,"enabled","","Service enabled flag",4,null],[12,"ping_interval","","How often to ping server (1800s)",4,null],[12,"sender_id","","Sender/Application ID value",4,null],[12,"database_path","","OS Path to the database",4,null],[0,"crypto","push","",null,null],[17,"SER_AUTH_LENGTH","push::crypto","",null,null],[6,"Decrypted","","",null,null],[3,"KeyV1","","",null,null],[12,"auth","","",5,null],[6,"Key","","",null,null],[11,"key_pair","","",5,[[],["eckeycomponents",3]]],[11,"auth_secret","","",5,[[]]],[11,"private_key","","",5,[[]]],[11,"public_key","","",5,[[]]],[11,"key_pair","","",6,[[],["eckeycomponents",3]]],[11,"auth_secret","","",6,[[]]],[11,"private_key","","",6,[[]]],[11,"public_key","","",6,[[]]],[8,"Cryptography","","",null,null],[10,"generate_key","","generate a new local EC p256 key",7,[[],[["result",6],["key",6]]]],[10,"test_key","","create a test key for testing",7,[[["str",15]],["key",6]]],[10,"decrypt","","General decrypt function. Calls to decrypt_aesgcm or …",7,[[["key",6],["option",4],["str",15]],[["decrypted",6],["result",6]]]],[10,"decrypt_aesgcm","","Decrypt the obsolete \\\"aesgcm\\\" format (which is still used …",7,[[["vec",3],["key",6],["option",4]],[["decrypted",6],["result",6]]]],[10,"decrypt_aes128gcm","","Decrypt the RFC 8188 format.",7,[[["key",6]],[["decrypted",6],["result",6]]]],[3,"Crypto","","",null,null],[5,"get_random_bytes","","",null,[[["usize",15]],[["vec",3],["result",6]]]],[0,"error","push","",null,null],[6,"Result","push::error","",null,null],[3,"Error","","",null,null],[11,"kind","","",8,[[],["errorkind",4]]],[11,"backtrace","","",8,[[],[["mutex",3],["option",4]]]],[4,"ErrorKind","","",null,null],[13,"GeneralError","","An unspecified general error has occured",9,null],[13,"CryptoError","","",9,null],[13,"CommunicationError","","A Client communication error",9,null],[13,"CommunicationServerError","","An error returned from the registration Server",9,null],[13,"AlreadyRegisteredError","","Channel is already registered, generate new channelID",9,null],[13,"StorageError","","An error with Storage",9,null],[13,"RecordNotFoundError","","",9,null],[13,"StorageSqlError","","A failure to encode data to/from storage.",9,null],[13,"MissingRegistrationTokenError","","",9,null],[13,"TranscodingError","","",9,null],[13,"UrlParseError","","A failure to parse a URL.",9,null],[11,"error_code","","",9,[[],["errorcode",3]]],[0,"ffi","push","",null,null],[0,"storage","","Handle Push data storage",null,null],[3,"Store","push::storage","",null,null],[12,"db","","",10,null],[8,"Storage","","",null,null],[10,"get_record","","",11,[[["str",15]],[["option",4],["result",6]]]],[10,"get_record_by_chid","","",11,[[["str",15]],[["option",4],["result",6]]]],[10,"put_record","","",11,[[["pushrecord",3]],[["bool",15],["result",6]]]],[10,"delete_record","","",11,[[["str",15]],[["bool",15],["result",6]]]],[10,"delete_all_records","","",11,[[["str",15]],["result",6]]],[10,"get_channel_list","","",11,[[["str",15]],[["result",6],["vec",3]]]],[10,"update_endpoint","","",11,[[["str",15]],[["bool",15],["result",6]]]],[10,"update_native_id","","",11,[[["str",15]],[["bool",15],["result",6]]]],[10,"get_meta","","",11,[[["str",15]],[["option",4],["result",6]]]],[10,"set_meta","","",11,[[["str",15]],["result",6]]],[3,"PushRecord","","",null,null],[12,"uaid","","User Agent\'s unique identifier",12,null],[12,"channel_id","","Designation label provided by the subscribing service",12,null],[12,"endpoint","","Endpoint provided from the push server",12,null],[12,"scope","","The receipient (service worker)\'s scope",12,null],[12,"key","","Private EC Prime256v1 key info.",12,null],[12,"ctime","","Time this subscription was created.",12,null],[12,"app_server_key","","VAPID public key to restrict subscription updates for …",12,null],[12,"native_id","","(if this is a bridged connection (e.g. on Android), this …",12,null],[0,"subscriber","push","Handle external Push Subscription Requests.",null,null],[3,"PushManager","push::subscriber","",null,null],[12,"conn","","",13,null],[12,"store","","",13,null],[11,"new","","",13,[[["pushconfiguration",3]],["result",6]]],[11,"subscribe","","",13,[[["option",4],["str",15]],["result",6]]],[11,"unsubscribe","","",13,[[["option",4],["str",15]],[["bool",15],["result",6]]]],[11,"unsubscribe_all","","",13,[[],[["bool",15],["result",6]]]],[11,"update","","",13,[[["str",15]],[["bool",15],["result",6]]]],[11,"verify_connection","","",13,[[],[["vec",3],["result",6]]]],[11,"decrypt","","",13,[[["option",4],["str",15]],[["string",3],["result",6]]]],[11,"get_record_by_chid","","",13,[[["str",15]],[["result",6],["option",4]]]],[0,"msg_types","push","",null,null],[3,"DispatchInfo","push::msg_types","",null,null],[12,"uaid","","",14,null],[12,"scope","","",14,null],[12,"endpoint","","",14,null],[12,"app_server_key","","",14,null],[11,"app_server_key","","Returns the value of <code>app_server_key</code>, or the default value …",14,[[],["str",15]]],[3,"KeyInfo","","",null,null],[12,"auth","","",15,null],[12,"p256dh","","",15,null],[3,"SubscriptionInfo","","",null,null],[12,"endpoint","","",16,null],[12,"keys","","",16,null],[3,"SubscriptionResponse","","",null,null],[12,"channel_id","","",17,null],[12,"subscription_info","","",17,null],[3,"PushSubscriptionChanged","","",null,null],[12,"channel_id","","",18,null],[12,"scope","","",18,null],[3,"PushSubscriptionsChanged","","",null,null],[12,"subs","","",19,null],[11,"from","push::communications","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","push::config","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","push::crypto","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","push::error","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","push::storage","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","push::subscriber","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","push::msg_types","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"subscribe","push::communications","send a new subscription request to the server, get back …",3,[[["option",4],["str",15]],[["result",6],["registerresponse",3]]]],[11,"unsubscribe","","Drop a channel and stop receiving updates.",3,[[["option",4],["str",15]],[["bool",15],["result",6]]]],[11,"update","","Update the push server with the new OS push authorization …",3,[[["str",15]],[["bool",15],["result",6]]]],[11,"channel_list","","Get a list of server known channels. If it differs from …",3,[[],[["vec",3],["result",6]]]],[11,"broadcast_subscribe","","",3,[[["broadcastvalue",4]],[["broadcastvalue",4],["result",6]]]],[11,"broadcasts","","",3,[[],[["broadcastvalue",4],["result",6]]]],[11,"verify_connection","","Verify that the server and client both have matching …",3,[[],[["bool",15],["result",6]]]],[11,"generate_key","push::crypto","Generate a new cryptographic Key",21,[[],[["result",6],["key",6]]]],[11,"test_key","","",21,[[["str",15]],["key",6]]],[11,"decrypt","","Decrypt the incoming webpush message based on the …",21,[[["key",6],["option",4],["str",15]],[["decrypted",6],["result",6]]]],[11,"decrypt_aesgcm","","",21,[[["vec",3],["key",6],["option",4]],[["decrypted",6],["result",6]]]],[11,"decrypt_aes128gcm","","",21,[[["key",6]],[["vec",3],["result",6]]]],[11,"get_record","push::storage","",10,[[["str",15]],[["option",4],["result",6]]]],[11,"get_record_by_chid","","",10,[[["str",15]],[["option",4],["result",6]]]],[11,"put_record","","",10,[[["pushrecord",3]],[["bool",15],["result",6]]]],[11,"delete_record","","",10,[[["str",15]],[["bool",15],["result",6]]]],[11,"delete_all_records","","",10,[[["str",15]],["result",6]]],[11,"get_channel_list","","",10,[[["str",15]],[["result",6],["vec",3]]]],[11,"update_endpoint","","",10,[[["str",15]],[["bool",15],["result",6]]]],[11,"update_native_id","","",10,[[["str",15]],[["bool",15],["result",6]]]],[11,"get_meta","","",10,[[["str",15]],[["option",4],["result",6]]]],[11,"set_meta","","",10,[[["str",15]],["result",6]]],[11,"from","push::error","",8,[[["errorkind",4]],["error",3]]],[11,"from","","",8,[[["error",4]]]],[11,"from","","",8,[[["parseerror",4]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","","",9,[[["parseerror",4]]]],[11,"clone","push::config","",4,[[],["pushconfiguration",3]]],[11,"clone","push::crypto","",5,[[],["keyv1",3]]],[11,"clone","push::storage","",12,[[],["pushrecord",3]]],[11,"clone","push::msg_types","",14,[[],["dispatchinfo",3]]],[11,"clone","","",15,[[],["keyinfo",3]]],[11,"clone","","",16,[[],["subscriptioninfo",3]]],[11,"clone","","",17,[[],["subscriptionresponse",3]]],[11,"clone","","",18,[[],["pushsubscriptionchanged",3]]],[11,"clone","","",19,[[],["pushsubscriptionschanged",3]]],[11,"default","push::config","",4,[[],["pushconfiguration",3]]],[11,"default","push::msg_types","",14,[[],["dispatchinfo",3]]],[11,"default","","",15,[[],["keyinfo",3]]],[11,"default","","",16,[[],["subscriptioninfo",3]]],[11,"default","","",17,[[],["subscriptionresponse",3]]],[11,"default","","",18,[[],["pushsubscriptionchanged",3]]],[11,"default","","",19,[[],["pushsubscriptionschanged",3]]],[11,"eq","push::crypto","",5,[[["keyv1",3]],["bool",15]]],[11,"ne","","",5,[[["keyv1",3]],["bool",15]]],[11,"eq","push::storage","",12,[[["pushrecord",3]],["bool",15]]],[11,"ne","","",12,[[["pushrecord",3]],["bool",15]]],[11,"eq","push::msg_types","",14,[[["dispatchinfo",3]],["bool",15]]],[11,"ne","","",14,[[["dispatchinfo",3]],["bool",15]]],[11,"eq","","",15,[[["keyinfo",3]],["bool",15]]],[11,"ne","","",15,[[["keyinfo",3]],["bool",15]]],[11,"eq","","",16,[[["subscriptioninfo",3]],["bool",15]]],[11,"ne","","",16,[[["subscriptioninfo",3]],["bool",15]]],[11,"eq","","",17,[[["subscriptionresponse",3]],["bool",15]]],[11,"ne","","",17,[[["subscriptionresponse",3]],["bool",15]]],[11,"eq","","",18,[[["pushsubscriptionchanged",3]],["bool",15]]],[11,"ne","","",18,[[["pushsubscriptionchanged",3]],["bool",15]]],[11,"eq","","",19,[[["pushsubscriptionschanged",3]],["bool",15]]],[11,"ne","","",19,[[["pushsubscriptionschanged",3]],["bool",15]]],[11,"deref","push::storage","",10,[[],["connection",3]]],[11,"fmt","push::communications","",0,[[["formatter",3]],["result",6]]],[11,"fmt","push::config","",4,[[["formatter",3]],["result",6]]],[11,"fmt","push::crypto","",5,[[["formatter",3]],["result",6]]],[11,"fmt","push::error","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","push::storage","",12,[[["formatter",3]],["result",6]]],[11,"fmt","push::msg_types","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","push::error","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"source","","",9,[[],[["error",8],["option",4]]]],[11,"serialize","push::communications","",1,[[],["result",4]]],[11,"serialize","push::crypto","",5,[[],["result",4]]],[11,"deserialize","push::communications","",1,[[],["result",4]]],[11,"deserialize","push::crypto","",5,[[],["result",4]]],[11,"ffi_default","push::msg_types","",14,[[]]],[11,"into_ffi_value","","",14,[[]]],[11,"ffi_default","","",15,[[]]],[11,"into_ffi_value","","",15,[[]]],[11,"ffi_default","","",16,[[]]],[11,"into_ffi_value","","",16,[[]]],[11,"ffi_default","","",17,[[]]],[11,"into_ffi_value","","",17,[[]]],[11,"ffi_default","","",18,[[]]],[11,"into_ffi_value","","",18,[[]]],[11,"ffi_default","","",19,[[]]],[11,"into_ffi_value","","",19,[[]]],[11,"encode_raw","","",14,[[]]],[11,"merge_field","","",14,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",14,[[],["usize",15]]],[11,"clear","","",14,[[]]],[11,"encode_raw","","",15,[[]]],[11,"merge_field","","",15,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",15,[[],["usize",15]]],[11,"clear","","",15,[[]]],[11,"encode_raw","","",16,[[]]],[11,"merge_field","","",16,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",16,[[],["usize",15]]],[11,"clear","","",16,[[]]],[11,"encode_raw","","",17,[[]]],[11,"merge_field","","",17,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",17,[[],["usize",15]]],[11,"clear","","",17,[[]]],[11,"encode_raw","","",18,[[]]],[11,"merge_field","","",18,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",18,[[],["usize",15]]],[11,"clear","","",18,[[]]],[11,"encode_raw","","",19,[[]]],[11,"merge_field","","",19,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",19,[[],["usize",15]]],[11,"clear","","",19,[[]]],[11,"conn","push::storage","",10,[[],["connection",3]]],[11,"new","push::communications","",20,[[["u64",15],["u16",15],["str",15]]]],[11,"check","","",20,[[["store",3]],["bool",15]]],[11,"with_connection","push::storage","",10,[[["connection",3]],["result",6]]],[11,"open","","",10,[[],["result",6]]],[11,"open_in_memory","","",10,[[],["result",6]]],[11,"normalize_uuid","","Normalize UUID values to undashed, lowercase.",10,[[["str",15]],["string",3]]],[11,"uuid_to_dashed","","Dash UUID strings.",10,[[["str",15]],[["string",3],["result",6]]]],[11,"new","","Create a Push Record from the Subscription info: …",12,[[["key",3],["str",15]]]]],"p":[[3,"RegisterResponse"],[4,"BroadcastValue"],[8,"Connection"],[3,"ConnectHttp"],[3,"PushConfiguration"],[3,"KeyV1"],[6,"Key"],[8,"Cryptography"],[3,"Error"],[4,"ErrorKind"],[3,"Store"],[8,"Storage"],[3,"PushRecord"],[3,"PushManager"],[3,"DispatchInfo"],[3,"KeyInfo"],[3,"SubscriptionInfo"],[3,"SubscriptionResponse"],[3,"PushSubscriptionChanged"],[3,"PushSubscriptionsChanged"],[3,"PersistedRateLimiter"],[3,"Crypto"]]},\
"push_ffi":{"doc":"","i":[[5,"push_connection_new","push_ffi","Instantiate a Http connection. Returned connection must …",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"push_subscribe","","Errors are logged.",null,[[["externerror",3],["ffistr",3],["u64",15]],["bytebuffer",3]]],[5,"push_unsubscribe","","",null,[[["externerror",3],["ffistr",3],["u64",15]],["u8",15]]],[5,"push_unsubscribe_all","","",null,[[["externerror",3],["u64",15]],["u8",15]]],[5,"push_update","","",null,[[["externerror",3],["ffistr",3],["u64",15]],["u8",15]]],[5,"push_verify_connection","","",null,[[["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"push_decrypt","","",null,[[["externerror",3],["ffistr",3],["u64",15]]]],[5,"push_dispatch_info_for_chid","","",null,[[["externerror",3],["ffistr",3],["u64",15]],["bytebuffer",3]]],[5,"push_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"push_destroy_buffer","","",null,[[["bytebuffer",3]]]],[5,"push_connection_destroy","","",null,[[["externerror",3],["u64",15]]]]],"p":[]},\
"rc_crypto":{"doc":"","i":[[0,"aead","rc_crypto","This crate provides all the cryptographic primitives …",null,null],[7,"LEGACY_SYNC_AES_256_CBC_HMAC_SHA256","rc_crypto::aead","AES-256 in CBC mode with HMAC-SHA256 tags and 128 bit …",null,null],[7,"AES_128_GCM","","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[5,"open","","",null,[[["nonce",3],["aad",3],["openingkey",3]],[["result",6],["vec",3]]]],[5,"seal","","",null,[[["sealingkey",3],["aad",3],["nonce",3]],[["result",6],["vec",3]]]],[3,"Aad","","The additional authenticated data (AAD) for an opening or …",null,null],[11,"from","","Construct the <code>Aad</code> by borrowing a contiguous sequence of …",0,[[]]],[11,"empty","","Construct an empty <code>Aad</code>.",0,[[]]],[3,"Nonce","","The nonce for an opening or sealing operation. This is a …",null,null],[11,"try_assume_unique_for_key","","",1,[[["algorithm",3]],["result",6]]],[3,"OpeningKey","","",null,null],[11,"new","","Create a new opening key.",2,[[["algorithm",3]],["result",6]]],[11,"algorithm","","The key\'s AEAD algorithm.",2,[[],["algorithm",3]]],[3,"SealingKey","","",null,null],[11,"new","","Create a new sealing key.",3,[[["algorithm",3]],["result",6]]],[11,"algorithm","","The key\'s AEAD algorithm.",3,[[],["algorithm",3]]],[3,"Algorithm","","",null,null],[11,"key_len","","The length of the key.",4,[[],["usize",15]]],[11,"tag_len","","The length of a tag.",4,[[],["usize",15]]],[11,"nonce_len","","The length of the nonces.",4,[[],["usize",15]]],[0,"agreement","rc_crypto","",null,null],[4,"Curve","rc_crypto::agreement","",null,null],[13,"P256","","",5,null],[13,"P384","","",5,null],[3,"EcKey","","",null,null],[6,"EphemeralKeyPair","","",null,null],[3,"Algorithm","","A key agreement algorithm.",null,null],[7,"ECDH_P256","","",null,null],[7,"ECDH_P384","","",null,null],[8,"Lifetime","","How many times the key may be used.",null,null],[3,"Ephemeral","","The key may be used at most once.",null,null],[3,"Static","","The key may be used more than once.",null,null],[3,"KeyPair","","A key pair for key agreement.",null,null],[11,"generate","","Generate a new key pair for the given algorithm.",6,[[["algorithm",3]],["result",6]]],[11,"from_private_key","","",6,[[["privatekey",3]],["result",6]]],[11,"private_key","","The private key.",6,[[],["privatekey",3]]],[11,"public_key","","The public key.",6,[[],["publickey",3]]],[11,"split","","Split the key pair apart.",6,[[]]],[11,"from","","",6,[[["privatekey",3],["static",3]],["result",6]]],[3,"PublicKey","","A public key for key agreement.",null,null],[11,"to_bytes","","",7,[[],[["result",6],["vec",3]]]],[11,"algorithm","","",7,[[],["algorithm",3]]],[3,"UnparsedPublicKey","","An unparsed public key for key agreement.",null,null],[11,"new","","",8,[[["algorithm",3]]]],[11,"algorithm","","",8,[[],["algorithm",3]]],[11,"bytes","","",8,[[]]],[3,"PrivateKey","","A private key for key agreement.",null,null],[11,"algorithm","","",9,[[],["algorithm",3]]],[11,"compute_public_key","","",9,[[],[["result",6],["publickey",3]]]],[11,"agree","","Ephemeral agreement. This consumes <code>self</code>, ensuring that …",9,[[["unparsedpublickey",3]],[["inputkeymaterial",3],["result",6]]]],[11,"agree_static","","Static agreement. This borrows <code>self</code>, allowing the private …",9,[[["unparsedpublickey",3]],[["inputkeymaterial",3],["result",6]]]],[11,"import","","",9,[[["eckey",3]],["result",6]]],[11,"export","","",9,[[],[["result",6],["eckey",3]]]],[11,"_tests_only_dangerously_convert_to_ephemeral","","The whole point of having <code>Ephemeral</code> and <code>Static</code> lifetimes …",9,[[],[["privatekey",3],["ephemeral",3]]]],[3,"InputKeyMaterial","","The result of a key agreement operation, to be fed into a …",null,null],[11,"derive","","Calls <code>kdf</code> with the raw key material and then returns what …",10,[[]]],[0,"constant_time","rc_crypto","",null,null],[5,"verify_slices_are_equal","rc_crypto::constant_time","Returns <code>Ok(())</code> if <code>a == b</code> and <code>Error</code> otherwise. The …",null,[[],["result",6]]],[0,"digest","rc_crypto","",null,null],[4,"Algorithm","rc_crypto::digest","",null,null],[13,"SHA256","","",11,null],[13,"SHA384","","",11,null],[3,"Digest","","A calculated digest value.",null,null],[11,"algorithm","","",12,[[],["algorithm",4]]],[5,"digest","","Returns the digest of data using the given digest …",null,[[["algorithm",4]],[["digest",3],["result",6]]]],[0,"ece_crypto","rc_crypto","",null,null],[3,"RcCryptoLocalKeyPair","rc_crypto::ece_crypto","",null,null],[11,"from_raw_components","","",13,[[["eckeycomponents",3]],[["result",4],["error",4]]]],[11,"generate_random","","",13,[[],[["result",4],["error",4]]]],[3,"RcCryptoRemotePublicKey","","",null,null],[11,"from_raw","","",14,[[],[["result",4],["rccryptoremotepublickey",3],["error",4]]]],[0,"hkdf","rc_crypto","",null,null],[5,"extract_and_expand","rc_crypto::hkdf","",null,[[["signingkey",3]],["result",6]]],[5,"extract","","",null,[[["signingkey",3]],[["result",6],["signingkey",3]]]],[5,"expand","","",null,[[["signingkey",3]],["result",6]]],[0,"hmac","rc_crypto","",null,null],[3,"Signature","rc_crypto::hmac","A calculated signature value. This is a type-safe …",null,null],[3,"SigningKey","","A key to use for HMAC signing.",null,null],[11,"new","","",15,[[["algorithm",4]]]],[11,"digest_algorithm","","",15,[[],["algorithm",4]]],[3,"VerificationKey","","A key to use for HMAC authentication.",null,null],[11,"new","","",16,[[["algorithm",4]]]],[11,"digest_algorithm","","",16,[[],["algorithm",4]]],[5,"verify","","Calculate the HMAC of <code>data</code> using <code>key</code> and verify it …",null,[[["verificationkey",3]],["result",6]]],[5,"verify_with_own_key","","Equivalent to <code>verify</code> but allows the consumer to pass a …",null,[[["signingkey",3]],["result",6]]],[5,"sign","","Calculate the HMAC of <code>data</code> using <code>key</code>.",null,[[["signingkey",3]],[["signature",3],["result",6]]]],[0,"pbkdf2","rc_crypto","",null,null],[4,"HashAlgorithm","rc_crypto::pbkdf2","",null,null],[13,"SHA256","","",11,null],[13,"SHA384","","",11,null],[5,"derive","","Extend passwords using pbkdf2, based on the following rfc …",null,[[["u32",15],["hashalgorithm",4]],["result",6]]],[0,"rand","rc_crypto","",null,null],[5,"fill","rc_crypto::rand","Fill a buffer with cryptographically secure pseudo-random …",null,[[],["result",6]]],[0,"signature","rc_crypto","",null,null],[3,"VerificationAlgorithm","rc_crypto::signature","A signature verification algorithm.",null,null],[7,"ECDSA_P256_SHA256","","",null,null],[7,"ECDSA_P384_SHA384","","",null,null],[3,"UnparsedPublicKey","","An unparsed public key for signature operations.",null,null],[11,"new","","",17,[[["verificationalgorithm",3]]]],[11,"verify","","",17,[[],["result",6]]],[11,"algorithm","","",17,[[],["verificationalgorithm",3]]],[11,"bytes","","",17,[[]]],[3,"Error","rc_crypto","",null,null],[4,"ErrorKind","","",null,null],[13,"NSSError","","",18,null],[13,"InternalError","","",18,null],[13,"ConversionError","","",18,null],[6,"Result","","",null,null],[5,"ensure_initialized","","Only required to be called if you intend to use this …",null,[[]]],[11,"from","rc_crypto::aead","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","rc_crypto::agreement","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","rc_crypto::pbkdf2","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","rc_crypto::digest","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"encode_hex","","",12,[[]]],[11,"encode_hex_upper","","",12,[[]]],[11,"from","rc_crypto::ece_crypto","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","rc_crypto","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","rc_crypto::hmac","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"encode_hex","","",24,[[]]],[11,"encode_hex_upper","","",24,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","rc_crypto::signature","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"serialize","rc_crypto::agreement","",5,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rc_crypto::pbkdf2","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rc_crypto::agreement","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",5,[[],[["result",4],["curve",4]]]],[11,"deserialize","","",19,[[],[["eckey",3],["result",4]]]],[11,"clone","","",5,[[],["curve",4]]],[11,"clone","rc_crypto::pbkdf2","",11,[[],["hashalgorithm",4]]],[11,"clone","rc_crypto::agreement","",19,[[],["eckey",3]]],[11,"eq","","",5,[[["curve",4]],["bool",15]]],[11,"eq","","",19,[[["eckey",3]],["bool",15]]],[11,"ne","","",19,[[["eckey",3]],["bool",15]]],[11,"as_ref","rc_crypto::digest","",12,[[]]],[11,"as_ref","rc_crypto::hmac","",24,[[]]],[11,"from","rc_crypto","",18,[[["error",3]]]],[11,"from","","",18,[[["tryfrominterror",3]]]],[11,"from","","",23,[[["errorkind",4]],["error",3]]],[11,"from","","",23,[[["tryfrominterror",3]]]],[11,"from","","",23,[[["error",3]]]],[11,"clone","rc_crypto::digest","",12,[[],["digest",3]]],[11,"clone","rc_crypto::hmac","",24,[[],["signature",3]]],[11,"eq","rc_crypto::agreement","",20,[[["algorithm",3]],["bool",15]]],[11,"ne","","",20,[[["algorithm",3]],["bool",15]]],[11,"fmt","rc_crypto","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"source","","",18,[[],[["option",4],["error",8]]]],[11,"as_raw","rc_crypto::ece_crypto","",14,[[],[["result",4],["vec",3],["error",4]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"raw_components","","",13,[[],[["error",4],["result",4],["eckeycomponents",3]]]],[11,"pub_as_raw","","",13,[[],[["result",4],["vec",3],["error",4]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"sign","rc_crypto::hmac","",15,[[],[["cryptoerror",4],["result",4],["vec",3]]]],[11,"get_field_len","rc_crypto::agreement","",5,[[],["u32",15]]],[11,"new","","",19,[[["curve",4]],["eckey",3]]],[11,"from_coordinates","","",19,[[["curve",4]],[["result",4],["eckey",3],["error",3]]]],[11,"curve","","",19,[[],["curve",4]]],[11,"public_key","","",19,[[]]],[11,"private_key","","",19,[[]]],[11,"kind","rc_crypto","",23,[[],["errorkind",4]]],[11,"backtrace","","",23,[[],[["mutex",3],["option",4]]]]],"p":[[3,"Aad"],[3,"Nonce"],[3,"OpeningKey"],[3,"SealingKey"],[3,"Algorithm"],[4,"Curve"],[3,"KeyPair"],[3,"PublicKey"],[3,"UnparsedPublicKey"],[3,"PrivateKey"],[3,"InputKeyMaterial"],[4,"HashAlgorithm"],[3,"Digest"],[3,"RcCryptoLocalKeyPair"],[3,"RcCryptoRemotePublicKey"],[3,"SigningKey"],[3,"VerificationKey"],[3,"UnparsedPublicKey"],[4,"ErrorKind"],[3,"EcKey"],[3,"Algorithm"],[3,"Ephemeral"],[3,"Static"],[3,"Error"],[3,"Signature"],[3,"VerificationAlgorithm"]]},\
"rc_log_ffi":{"doc":"This crate allows users from the other side of the FFI to …","i":[[0,"ios","rc_log_ffi","",null,null],[6,"LogCallback","rc_log_ffi::ios","Type of the log callback provided to us by swift. Takes …",null,null],[3,"LogAdapterState","","",null,null],[11,"init","","",0,[[["logcallback",6]]]],[4,"LogLevel","rc_log_ffi","",null,null],[13,"VERBOSE","","",1,null],[13,"DEBUG","","",1,null],[13,"INFO","","",1,null],[13,"WARN","","",1,null],[13,"ERROR","","",1,null],[5,"rc_log_adapter_create","","",null,[[["logcallback",6],["externerror",3]]]],[5,"rc_log_adapter_set_max_level","","",null,[[["externerror",3],["i32",15]]]],[5,"rc_log_adapter_destroy","","SafetyUnsafe because it frees it\'s argument.",null,[[]]],[5,"rc_log_adapter_test__log_msg","","",null,[[["ffistr",3]]]],[5,"rc_log_adapter_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[11,"from","rc_log_ffi::ios","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rc_log_ffi","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","rc_log_ffi::ios","",0,[[]]],[11,"from","rc_log_ffi","",1,[[["level",4]]]],[11,"clone","","",1,[[],["loglevel",4]]],[11,"eq","","",1,[[["loglevel",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"ffi_default","rc_log_ffi::ios","",0,[[]]],[11,"into_ffi_value","","",0,[[]]]],"p":[[3,"LogAdapterState"],[4,"LogLevel"]]},\
"restmail_client":{"doc":"","i":[[5,"find_email","restmail_client","For a given restmail email, find the first email that …",null,[[["u8",15],["str",15]],[["result",4],["emailjson",4],["restmailclienterror",4]]]],[5,"clear_mailbox","","",null,[[["str",15]],[["result",4],["restmailclienterror",4]]]]],"p":[]},\
"sql_support":{"doc":"","i":[[3,"Conn","sql_support","",null,null],[8,"ConnExt","","This trait exists so that we can use these helpers on …",null,null],[10,"conn","","The method you need to implement to opt in to all of this.",0,[[],["connection",3]]],[11,"set_pragma","","Set the value of the pragma on the main database. Returns …",0,[[["str",15]],["sqlresult",6]]],[11,"prepare_maybe_cached","","Get a cached or uncached statement based on a flag.",0,[[["bool",15],["str",15]],[["sqlresult",6],["maybecached",4]]]],[11,"execute_all","","Execute all the provided statements.",0,[[],["sqlresult",6]]],[11,"execute_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",0,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"execute_named_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",0,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"query_one","","Execute a query that returns a single result column, and …",0,[[["str",15]],[["sqlresult",6],["fromsql",8]]]],[11,"try_query_one","","Execute a query that returns 0 or 1 result columns, …",0,[[["bool",15],["str",15]],[["option",4],["sqlresult",6]]]],[11,"query_row_and_then_named","","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> …",0,[[["bool",15],["str",15]],["result",4]]],[11,"query_rows_and_then_named","","Helper for when you\'d like to get a Vec of all the rows …",0,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_and_then_named_cached","","Helper for when you\'d like to get a Vec of all the rows …",0,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_into","","Like <code>query_rows_and_then_named</code>, but works if you want a …",0,[[["str",15]],["result",4]]],[11,"query_rows_into_cached","","Same as <code>query_rows_into</code>, but caches the stmt if possible.",0,[[["str",15]],["result",4]]],[11,"try_query_row","","Like <code>query_row_and_then_named</code> but returns None instead of …",0,[[["bool",15],["str",15]],[["option",4],["result",4]]]],[11,"unchecked_transaction","","",0,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[11,"unchecked_transaction_imm","","Begin <code>unchecked_transaction</code> with …",0,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[3,"UncheckedTransaction","","rusqlite, in an attempt to save us from ourselves, needs …",null,null],[12,"conn","","",1,null],[12,"started_at","","",1,null],[12,"finished","","",1,null],[5,"default_max_variable_number","","Returns SQLITE_LIMIT_VARIABLE_NUMBER as read from an …",null,[[],["usize",15]]],[5,"each_chunk","","Helper for the case where you have a <code>&[impl ToSql]</code> of …",null,[[],["result",4]]],[5,"each_chunk_mapped","","A version of <code>each_chunk</code> for the case when the conversion …",null,[[],["result",4]]],[5,"each_sized_chunk","","",null,[[["usize",15]],["result",4]]],[5,"each_sized_chunk_mapped","","Utility to help perform batched updates, inserts, …",null,[[["usize",15]],["result",4]]],[3,"SqlInterruptHandle","","A Sync+Send type which can be used allow someone to …",null,null],[3,"SqlInterruptScope","","A helper that can be used to determine if an interrupt …",null,null],[4,"MaybeCached","","MaybeCached is a type that can be used to help abstract …",null,null],[13,"Uncached","","",2,null],[13,"Cached","","",2,null],[3,"QueryPlanStep","","",null,null],[12,"node_id","","",3,null],[12,"parent_id","","",3,null],[12,"aux","","",3,null],[12,"detail","","",3,null],[3,"QueryPlan","","",null,null],[12,"query","","",4,null],[12,"plan","","",4,null],[5,"maybe_log_plan","","Log a query plan if the <code>log_query_plans</code> feature is …",null,[[["str",15],["connection",3]]]],[3,"RepeatDisplay","","Helper type for printing repeated strings more …",null,null],[5,"repeat_display","","Construct a RepeatDisplay that will repeatedly call …",null,[[["usize",15],["str",15]],["repeatdisplay",3]]],[5,"repeat_sql_vars","","Returns a value that formats as <code>count</code> instances of <code>?</code> …",null,[[["usize",15]]]],[5,"repeat_sql_values","","Returns a value that formats as <code>count</code> instances of <code>(?)</code> …",null,[[["usize",15]]]],[5,"repeat_multi_values","","Returns a value that formats as <code>num_values</code> instances of …",null,[[["usize",15]]]],[5,"escape_string_for_pragma","","In PRAGMA foo=\'bar\', <code>\'bar\'</code> must be a constant string (it …",null,[[["str",15]],["string",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"get_hash","","",3,[[],["u64",15]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"get_hash","","",4,[[],["u64",15]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"conn","","",1,[[],["connection",3]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[["statement",3]]]],[11,"from","","",2,[[["cachedstatement",3]]]],[11,"clone","","",3,[[],["queryplanstep",3]]],[11,"clone","","",4,[[],["queryplan",3]]],[11,"clone","","",8,[[],["repeatdisplay",3]]],[11,"eq","","",3,[[["queryplanstep",3]],["bool",15]]],[11,"ne","","",3,[[["queryplanstep",3]],["bool",15]]],[11,"eq","","",4,[[["queryplan",3]],["bool",15]]],[11,"ne","","",4,[[["queryplan",3]],["bool",15]]],[11,"deref","","",1,[[],["connection",3]]],[11,"deref","","",2,[[],["statement",3]]],[11,"deref_mut","","",2,[[],["statement",3]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"ffi_default","","",6,[[]]],[11,"into_ffi_value","","",6,[[]]],[11,"was_interrupted","","",7,[[],["bool",15]]],[11,"set_pragma","","Set the value of the pragma on the main database. Returns …",0,[[["str",15]],["sqlresult",6]]],[11,"prepare_maybe_cached","","Get a cached or uncached statement based on a flag.",0,[[["bool",15],["str",15]],[["sqlresult",6],["maybecached",4]]]],[11,"execute_all","","Execute all the provided statements.",0,[[],["sqlresult",6]]],[11,"execute_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",0,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"execute_named_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",0,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"query_one","","Execute a query that returns a single result column, and …",0,[[["str",15]],[["sqlresult",6],["fromsql",8]]]],[11,"try_query_one","","Execute a query that returns 0 or 1 result columns, …",0,[[["bool",15],["str",15]],[["option",4],["sqlresult",6]]]],[11,"query_row_and_then_named","","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> …",0,[[["bool",15],["str",15]],["result",4]]],[11,"query_rows_and_then_named","","Helper for when you\'d like to get a Vec of all the rows …",0,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_and_then_named_cached","","Helper for when you\'d like to get a Vec of all the rows …",0,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_into","","Like <code>query_rows_and_then_named</code>, but works if you want a …",0,[[["str",15]],["result",4]]],[11,"query_rows_into_cached","","Same as <code>query_rows_into</code>, but caches the stmt if possible.",0,[[["str",15]],["result",4]]],[11,"try_query_row","","Like <code>query_row_and_then_named</code> but returns None instead of …",0,[[["bool",15],["str",15]],[["option",4],["result",4]]]],[11,"unchecked_transaction","","",0,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[11,"unchecked_transaction_imm","","Begin <code>unchecked_transaction</code> with …",0,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[11,"new","","Begin a new unchecked transaction. Cannot be nested, but …",1,[[["connection",3],["transactionbehavior",4]],["sqlresult",6]]],[11,"commit","","Consumes and commits an unchecked transaction.",1,[[],["sqlresult",6]]],[11,"rollback","","Consumes and rolls back an unchecked transaction.",1,[[],["sqlresult",6]]],[11,"new","","",6,[[["arc",3],["atomicusize",3],["interrupthandle",3]],["sqlinterrupthandle",3]]],[11,"interrupt","","",6,[[]]],[11,"new","","",7,[[["arc",3],["atomicusize",3]]]],[11,"err_if_interrupted","","Add this as an inherent method to reduce the amount of …",7,[[],[["result",4],["interrupted",3]]]],[11,"prepare","","",2,[[["bool",15],["connection",3],["str",15]],[["result",6],["maybecached",4]]]],[11,"new","","",4,[[["str",15],["connection",3]],["sqlresult",6]]],[11,"print_pretty_tree","","",4,[[["formatter",3]],["result",6]]]],"p":[[8,"ConnExt"],[3,"UncheckedTransaction"],[4,"MaybeCached"],[3,"QueryPlanStep"],[3,"QueryPlan"],[3,"Conn"],[3,"SqlInterruptHandle"],[3,"SqlInterruptScope"],[3,"RepeatDisplay"]]},\
"sync15":{"doc":"","i":[[0,"changeset","sync15","",null,null],[6,"IncomingChangeset","sync15::changeset","",null,null],[6,"OutgoingChangeset","","",null,null],[3,"RecordChangeset","","",null,null],[12,"changes","","",0,null],[12,"timestamp","","For GETs, the last sync timestamp that should be …",0,null],[12,"collection","","",0,null],[5,"encrypt_outgoing","","",null,[[["keybundle",3],["outgoingchangeset",6]],[["vec",3],["result",6]]]],[5,"fetch_incoming","","",null,[[["sync15storageclient",3],["collstate",3],["collectionrequest",3]],[["result",6],["incomingchangeset",6]]]],[3,"CollectionUpdate","","",null,null],[11,"new","","",1,[[["collstate",3],["servertimestamp",3],["sync15storageclient",3],["bool",15],["str",15],["vec",3],["cow",4],["encryptedbso",6]],["collectionupdate",3]]],[11,"new_from_changeset","","",1,[[["collstate",3],["outgoingchangeset",6],["sync15storageclient",3],["bool",15]],[["result",6],["collectionupdate",3]]]],[11,"upload","","Returns a list of the IDs that failed if …",1,[[],[["uploadinfo",3],["result",6]]]],[0,"clients","sync15","",null,null],[3,"Engine","sync15::clients","",null,null],[12,"command_processor","","",2,null],[12,"interruptee","","",2,null],[12,"recent_clients","","",2,null],[3,"ClientData","","Argument to Store::prepare_for_sync. See comment there …",null,null],[12,"local_client_id","","",3,null],[12,"recent_clients","","",3,null],[4,"DeviceType","","The type of a client. Please keep these variants in sync …",null,null],[13,"Desktop","","",4,null],[13,"Mobile","","",4,null],[13,"Tablet","","",4,null],[13,"VR","","",4,null],[13,"TV","","",4,null],[3,"RemoteClient","","Information about a remote client in the clients …",null,null],[12,"fxa_device_id","","",5,null],[12,"device_name","","",5,null],[12,"device_type","","",5,null],[8,"CommandProcessor","","A command processor applies incoming commands like wipes …",null,null],[10,"settings","","",6,[[],["settings",3]]],[10,"fetch_outgoing_commands","","Fetches commands to send to other clients. An error …",6,[[],[["hashset",3],["result",6]]]],[10,"apply_incoming_command","","Applies a command sent to this client from another …",6,[[["command",4]],[["commandstatus",4],["result",6]]]],[4,"CommandStatus","","Indicates if a command was applied successfully, ignored, …",null,null],[13,"Applied","","",7,null],[13,"Ignored","","",7,null],[13,"Unsupported","","",7,null],[3,"Settings","","Information about this device to include in its client …",null,null],[12,"fxa_device_id","","The FxA device ID of this client, also used as this …",8,null],[12,"device_name","","The name of this client. This should match the client\'s …",8,null],[12,"device_type","","The type of this client: mobile, tablet, desktop, or …",8,null],[4,"Command","","",null,null],[13,"WipeAll","","Erases all local data.",9,null],[13,"Wipe","","Erases all local data for a specific engine.",9,null],[13,"ResetAll","","Resets local sync state for all engines.",9,null],[13,"Reset","","Resets local sync state for a specific engine.",9,null],[0,"telemetry","sync15","Note: this mostly just reexports the things from …",null,null],[3,"Event","sync15::telemetry","A generic \\\"Event\\\" - suitable for all kinds of pings …",null,null],[4,"SyncFailure","","A Sync failure.",null,null],[13,"Shutdown","","",10,null],[13,"Other","","",10,null],[12,"error","sync15::telemetry::SyncFailure","",11,null],[13,"Unexpected","sync15::telemetry","",10,null],[12,"error","sync15::telemetry::SyncFailure","",12,null],[13,"Auth","sync15::telemetry","",10,null],[12,"from","sync15::telemetry::SyncFailure","",13,null],[13,"Http","sync15::telemetry","",10,null],[12,"code","sync15::telemetry::SyncFailure","",14,null],[3,"EngineIncoming","sync15::telemetry","Incoming record for an engine\'s sync",null,null],[3,"EngineOutgoing","","Outgoing record for an engine\'s sync",null,null],[3,"Engine","","One engine\'s sync.",null,null],[3,"Validation","","",null,null],[3,"Problem","","",null,null],[3,"SyncTelemetry","","A single sync. May have many engines, may have its own …",null,null],[3,"SyncTelemetryPing","","The Sync ping payload, as documented at …",null,null],[3,"BsoRecord","sync15","",null,null],[12,"id","","",15,null],[12,"collection","","",15,null],[12,"modified","","",15,null],[12,"sortindex","","",15,null],[12,"ttl","","",15,null],[12,"payload","","",15,null],[6,"CleartextBso","","",null,null],[6,"EncryptedBso","","",null,null],[3,"EncryptedPayload","","",null,null],[12,"iv","","",16,null],[12,"hmac","","",16,null],[12,"ciphertext","","",16,null],[3,"Payload","","Represents the decrypted payload in a Bso. Provides a …",null,null],[12,"id","","",17,null],[12,"deleted","","",17,null],[12,"data","","",17,null],[6,"IncomingChangeset","","",null,null],[6,"OutgoingChangeset","","",null,null],[3,"RecordChangeset","","",null,null],[12,"changes","","",0,null],[12,"timestamp","","For GETs, the last sync timestamp that should be …",0,null],[12,"collection","","",0,null],[8,"SetupStorageClient","","A trait containing the methods required to run through …",null,null],[10,"fetch_info_configuration","","",18,[[],[["result",6],["sync15clientresponse",4]]]],[10,"fetch_info_collections","","",18,[[],[["result",6],["sync15clientresponse",4]]]],[10,"fetch_meta_global","","",18,[[],[["sync15clientresponse",4],["result",6]]]],[10,"fetch_crypto_keys","","",18,[[],[["result",6],["sync15clientresponse",4]]]],[10,"put_meta_global","","",18,[[["metaglobalrecord",3],["servertimestamp",3]],[["result",6],["servertimestamp",3]]]],[10,"put_crypto_keys","","",18,[[["encryptedbso",6],["servertimestamp",3]],["result",6]]],[10,"wipe_all_remote","","",18,[[],["result",6]]],[4,"Sync15ClientResponse","","A response from a GET request on a Sync15StorageClient, …",null,null],[13,"Success","","",19,null],[12,"status","sync15::Sync15ClientResponse","",20,null],[12,"record","","",20,null],[12,"last_modified","","",20,null],[12,"route","","",20,null],[13,"Error","sync15","",19,null],[3,"Sync15StorageClient","","",null,null],[3,"Sync15StorageClientInit","","",null,null],[12,"key_id","","",21,null],[12,"access_token","","",21,null],[12,"tokenserver_url","","",21,null],[3,"CollState","","Holds state for a collection. In general, only the …",null,null],[12,"config","","",22,null],[12,"last_modified","","",22,null],[12,"key","","",22,null],[3,"CollSyncIds","","",null,null],[12,"global","","",23,null],[12,"coll","","",23,null],[4,"EngineSyncAssociation","","Defines how an engine is associated with a particular set …",null,null],[13,"Disconnected","","This store is disconnected (although it may be connected …",24,null],[13,"Connected","","Sync is connected, and has the following sync IDs.",24,null],[3,"CollectionKeys","","",null,null],[12,"timestamp","","",25,null],[12,"default","","",25,null],[12,"collections","","",25,null],[3,"Error","","",null,null],[4,"ErrorKind","","",null,null],[13,"BadKeyLength","","",26,null],[13,"HmacMismatch","","",26,null],[13,"TokenserverHttpError","","",26,null],[13,"StorageHttpError","","",26,null],[13,"BackoffError","","",26,null],[13,"RecordTooLargeError","","",26,null],[13,"RecordUploadFailed","","",26,null],[13,"StorageResetError","","Used for things like a node reassignment or an unexpected …",26,null],[13,"UnacceptableUrl","","",26,null],[13,"MissingServerTimestamp","","",26,null],[13,"ServerBatchProblem","","",26,null],[13,"SetupRace","","",26,null],[13,"ClientUpgradeRequired","","",26,null],[13,"SetupRequired","","",26,null],[13,"StoreError","","",26,null],[13,"CryptoError","","",26,null],[13,"Base64Decode","","",26,null],[13,"JsonError","","",26,null],[13,"BadCleartextUtf8","","",26,null],[13,"RequestError","","",26,null],[13,"UnexpectedStatus","","",26,null],[13,"HawkError","","",26,null],[13,"MalformedUrl","","",26,null],[13,"Interrupted","","",26,null],[6,"Result","","",null,null],[3,"KeyBundle","","",null,null],[5,"extract_v1_state","","Given a string persisted as our old GlobalState V1 …",null,[[["string",3],["str",15],["option",4]]]],[3,"CollectionRequest","","",null,null],[12,"collection","","",27,null],[12,"full","","",27,null],[12,"ids","","",27,null],[12,"limit","","",27,null],[12,"older","","",27,null],[12,"newer","","",27,null],[12,"order","","",27,null],[12,"commit","","",27,null],[12,"batch","","",27,null],[3,"GlobalState","","Holds global Sync state, including server upload limits, …",null,null],[12,"config","","",28,null],[12,"collections","","",28,null],[12,"global","","",28,null],[12,"global_timestamp","","",28,null],[12,"keys","","",28,null],[3,"SetupStateMachine","","",null,null],[4,"ServiceStatus","","The general status of sync - should probably be moved to …",null,null],[13,"Ok","","Everything is fine.",29,null],[13,"NetworkError","","Some general network issue.",29,null],[13,"ServiceError","","Some apparent issue with the servers.",29,null],[13,"AuthenticationError","","Some external FxA action needs to be taken.",29,null],[13,"BackedOff","","We declined to do anything for backoff or rate-limiting …",29,null],[13,"Interrupted","","We were interrupted.",29,null],[13,"OtherError","","Something else - you need to check the logs for more …",29,null],[3,"SyncResult","","The result of a sync request. This too is from the \\\"sync …",null,null],[12,"service_status","","The general health.",30,null],[12,"declined","","The set of declined engines, if we know them.",30,null],[12,"result","","The result of the sync.",30,null],[12,"engine_results","","The result for each engine. Note that we expect the <code>String</code>…",30,null],[12,"telemetry","","",30,null],[12,"next_sync_after","","",30,null],[5,"synchronize","","",null,[[["sync15storageclient",3],["keybundle",3],["engine",3],["globalstate",3],["bool",15],["interruptee",8],["syncengine",8]],[["result",4],["error",3]]]],[8,"SyncEngine","","A \\\"sync engine\\\" is a thing that knows how to sync. It\'s …",null,null],[10,"collection_name","","",31,[[],[["cow",4],["str",15]]]],[11,"prepare_for_sync","","Prepares the engine for syncing. The tabs engine …",31,[[["fn",8]],[["result",4],["error",3]]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",31,[[["str",15]],[["result",4],["error",3]]]],[10,"apply_incoming","","<code>inbound</code> is a vector to support the case where …",31,[[["global",3],["vec",3],["recordchangeset",3],["engine",3]],[["error",3],["recordchangeset",3],["result",4]]]],[10,"sync_finished","","",31,[[["vec",3],["global",3],["guid",3],["servertimestamp",3]],[["result",4],["error",3]]]],[10,"get_collection_requests","","The engine is responsible for building the collection …",31,[[["servertimestamp",3]],[["result",4],["error",3],["vec",3]]]],[10,"get_sync_assoc","","Get persisted sync IDs. If they don\'t match the global …",31,[[],[["result",4],["enginesyncassociation",4],["error",3]]]],[10,"reset","","Reset the engine (and associated store) without wiping …",31,[[["enginesyncassociation",4]],[["result",4],["error",3]]]],[10,"wipe","","",31,[[],[["result",4],["error",3]]]],[5,"sync_multiple","","Sync multiple engines",null,[[["memorycachedstate",3],["sync15storageclientinit",3],["keybundle",3],["interruptee",8],["option",4],["option",4],["syncrequestinfo",3]],["syncresult",3]]],[5,"sync_multiple_with_command_processor","","Like <code>sync_multiple</code>, but specifies an optional command …",null,[[["memorycachedstate",3],["keybundle",3],["option",4],["option",4],["sync15storageclientinit",3],["interruptee",8],["option",4],["commandprocessor",8],["syncrequestinfo",3]],["syncresult",3]]],[3,"MemoryCachedState","","Info we want callers to engine <em>in memory</em> for us so that …",null,null],[3,"SyncRequestInfo","","This is essentially a bag of information that the sync …",null,null],[12,"engines_to_state_change","","",32,null],[12,"is_user_action","","",32,null],[3,"ServerTimestamp","","Typesafe way to manage server timestamps without …",null,null],[12,"0","","",33,null],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","sync15::changeset","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","sync15","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"get_hash","","",21,[[],["u64",15]]],[11,"vzip","","",21,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","sync15::clients","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"get_hash","","",4,[[],["u64",15]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"get_hash","","",5,[[],["u64",15]]],[11,"vzip","","",5,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"get_hash","","",8,[[],["u64",15]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"get_hash","","",9,[[],["u64",15]]],[11,"vzip","","",9,[[]]],[11,"from","sync15","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"get_hash","","",36,[[],["u64",15]]],[11,"vzip","","",36,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","sync15::telemetry","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","sync15","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"ffi_default","sync15::telemetry","",46,[[]]],[11,"into_ffi_value","","",46,[[]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::clients","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::clients","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","sync15::clients","",4,[[]]],[11,"hash","","",5,[[]]],[11,"partial_cmp","sync15","",33,[[["servertimestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",33,[[["servertimestamp",3]],["bool",15]]],[11,"le","","",33,[[["servertimestamp",3]],["bool",15]]],[11,"gt","","",33,[[["servertimestamp",3]],["bool",15]]],[11,"ge","","",33,[[["servertimestamp",3]],["bool",15]]],[11,"serialize","sync15::telemetry","",46,[[],["result",4]]],[11,"serialize","sync15::clients","",4,[[],["result",4]]],[11,"serialize","sync15::telemetry","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","sync15","",17,[[],["result",4]]],[11,"serialize","sync15::telemetry","",39,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","sync15","",33,[[],["result",4]]],[11,"default","sync15::telemetry","",43,[[],["validation",3]]],[11,"default","","",40,[[],["engineincoming",3]]],[11,"default","","",44,[[],["problem",3]]],[11,"default","","",41,[[],["engineoutgoing",3]]],[11,"default","sync15","",33,[[],["servertimestamp",3]]],[11,"default","sync15::telemetry","",45,[[],["synctelemetry",3]]],[11,"default","","",46,[[],["synctelemetryping",3]]],[11,"clone","sync15::clients","",4,[[],["devicetype",4]]],[11,"clone","sync15","",0,[[],["recordchangeset",3]]],[11,"clone","","",27,[[],["collectionrequest",3]]],[11,"clone","","",17,[[],["payload",3]]],[11,"clone","","",23,[[],["collsyncids",3]]],[11,"clone","sync15::clients","",5,[[],["remoteclient",3]]],[11,"clone","","",3,[[],["clientdata",3]]],[11,"clone","sync15","",33,[[],["servertimestamp",3]]],[11,"clone","","",24,[[],["enginesyncassociation",4]]],[11,"deserialize","","",17,[[],[["result",4],["payload",3]]]],[11,"deserialize","","",33,[[],[["result",4],["servertimestamp",3]]]],[11,"deserialize","sync15::clients","",4,[[],[["result",4],["devicetype",4]]]],[11,"eq","sync15","",23,[[["collsyncids",3]],["bool",15]]],[11,"ne","","",23,[[["collsyncids",3]],["bool",15]]],[11,"eq","","",17,[[["payload",3]],["bool",15]]],[11,"ne","","",17,[[["payload",3]],["bool",15]]],[11,"eq","","",27,[[["collectionrequest",3]],["bool",15]]],[11,"ne","","",27,[[["collectionrequest",3]],["bool",15]]],[11,"eq","","",24,[[["enginesyncassociation",4]],["bool",15]]],[11,"ne","","",24,[[["enginesyncassociation",4]],["bool",15]]],[11,"eq","","",33,[[["servertimestamp",3]],["bool",15]]],[11,"ne","","",33,[[["servertimestamp",3]],["bool",15]]],[11,"eq","sync15::clients","",4,[[["devicetype",4]],["bool",15]]],[11,"eq","","",5,[[["remoteclient",3]],["bool",15]]],[11,"ne","","",5,[[["remoteclient",3]],["bool",15]]],[11,"from_str","sync15","",33,[[["str",15]],[["servertimestamp",3],["result",4]]]],[11,"fetch_info_configuration","","",34,[[],[["result",6],["sync15clientresponse",4]]]],[11,"fetch_info_collections","","",34,[[],[["result",6],["sync15clientresponse",4]]]],[11,"fetch_meta_global","","",34,[[],[["sync15clientresponse",4],["result",6]]]],[11,"fetch_crypto_keys","","",34,[[],[["result",6],["sync15clientresponse",4]]]],[11,"put_meta_global","","",34,[[["metaglobalrecord",3],["servertimestamp",3]],[["result",6],["servertimestamp",3]]]],[11,"put_crypto_keys","","",34,[[["encryptedbso",6],["servertimestamp",3]],["result",6]]],[11,"wipe_all_remote","","",34,[[],["result",6]]],[11,"from","","",26,[[["error",3]]]],[11,"from","","",26,[[["error",3]]]],[11,"from","","",26,[[["decodeerror",4]]]],[11,"from","","",26,[[["error",3]]]],[11,"from","","",26,[[["fromutf8error",3]]]],[11,"from","","",26,[[["error",4]]]],[11,"from","","",26,[[["unexpectedstatus",3]]]],[11,"from","","",26,[[["error",4]]]],[11,"from","","",26,[[["parseerror",4]]]],[11,"from","","",26,[[["interrupted",3]]]],[11,"from","","",35,[[["errorkind",4]],["error",3]]],[11,"from","","",35,[[["error",3]]]],[11,"from","","",35,[[["decodeerror",4]]]],[11,"from","","",35,[[["error",3]]]],[11,"from","","",35,[[["fromutf8error",3]]]],[11,"from","","",35,[[["error",4]]]],[11,"from","","",35,[[["unexpectedstatus",3]]]],[11,"from","","",35,[[["parseerror",4]]]],[11,"from","","",35,[[["error",3]]]],[11,"from","","",35,[[["interrupted",3]]]],[11,"from","","",35,[[["error",4]]]],[11,"from","","",26,[[["unacceptablebaseurl",3]],["errorkind",4]]],[11,"from","","",35,[[["unacceptablebaseurl",3]]]],[11,"from","sync15::telemetry","",10,[[["error",3]],["syncfailure",4]]],[11,"clone","sync15","",15,[[],["bsorecord",3]]],[11,"clone","","",16,[[],["encryptedpayload",3]]],[11,"clone","sync15::changeset","",1,[[],["collectionupdate",3]]],[11,"clone","sync15","",19,[[],["sync15clientresponse",4]]],[11,"clone","","",21,[[],["sync15storageclientinit",3]]],[11,"clone","sync15::clients","",7,[[],["commandstatus",4]]],[11,"clone","","",8,[[],["settings",3]]],[11,"clone","","",9,[[],["command",4]]],[11,"clone","sync15","",22,[[],["collstate",3]]],[11,"clone","","",25,[[],["collectionkeys",3]]],[11,"clone","","",36,[[],["keybundle",3]]],[11,"clone","","",28,[[],["globalstate",3]]],[11,"clone","","",29,[[],["servicestatus",4]]],[11,"default","","",38,[[],["memorycachedstate",3]]],[11,"default","","",32,[[],["syncrequestinfo",3]]],[11,"cmp","","",21,[[["sync15storageclientinit",3]],["ordering",4]]],[11,"cmp","sync15::clients","",9,[[["command",4]],["ordering",4]]],[11,"eq","sync15","",15,[[["bsorecord",3]],["bool",15]]],[11,"ne","","",15,[[["bsorecord",3]],["bool",15]]],[11,"eq","","",21,[[["sync15storageclientinit",3]],["bool",15]]],[11,"ne","","",21,[[["sync15storageclientinit",3]],["bool",15]]],[11,"eq","sync15::clients","",7,[[["commandstatus",4]],["bool",15]]],[11,"eq","","",8,[[["settings",3]],["bool",15]]],[11,"ne","","",8,[[["settings",3]],["bool",15]]],[11,"eq","","",9,[[["command",4]],["bool",15]]],[11,"ne","","",9,[[["command",4]],["bool",15]]],[11,"eq","sync15","",25,[[["collectionkeys",3]],["bool",15]]],[11,"ne","","",25,[[["collectionkeys",3]],["bool",15]]],[11,"eq","","",36,[[["keybundle",3]],["bool",15]]],[11,"ne","","",36,[[["keybundle",3]],["bool",15]]],[11,"eq","","",29,[[["servicestatus",4]],["bool",15]]],[11,"partial_cmp","","",21,[[["sync15storageclientinit",3]],[["option",4],["ordering",4]]]],[11,"lt","","",21,[[["sync15storageclientinit",3]],["bool",15]]],[11,"le","","",21,[[["sync15storageclientinit",3]],["bool",15]]],[11,"gt","","",21,[[["sync15storageclientinit",3]],["bool",15]]],[11,"ge","","",21,[[["sync15storageclientinit",3]],["bool",15]]],[11,"partial_cmp","sync15::clients","",9,[[["command",4]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["command",4]],["bool",15]]],[11,"le","","",9,[[["command",4]],["bool",15]]],[11,"gt","","",9,[[["command",4]],["bool",15]]],[11,"ge","","",9,[[["command",4]],["bool",15]]],[11,"deref","sync15","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::changeset","",1,[[["formatter",3]],["result",6]]],[11,"fmt","sync15","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::clients","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","sync15","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"hash","","",21,[[]]],[11,"hash","sync15::clients","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","sync15","",36,[[]]],[11,"source","","",26,[[],[["option",4],["error",8]]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"new_tombstone","","",17,[[],["payload",3]]],[11,"new_tombstone_with_ttl","","",17,[[["u32",15]],["payload",3]]],[11,"with_sortindex","","",17,[[["i32",15]],["payload",3]]],[11,"with_auto_field","","\\\"Auto\\\" fields are fields like \'sortindex\' and \'ttl\', …",17,[[["option",4],["str",15]],["payload",3]]],[11,"take_auto_field","","",17,[[["str",15]],["option",4]]],[11,"id","","",17,[[],["str",15]]],[11,"is_tombstone","","",17,[[],["bool",15]]],[11,"from_json","","",17,[[["value",4]],[["result",4],["error",3],["payload",3]]]],[11,"into_record","","Deserializes the BSO payload into a specific record type <code>T</code>…",17,[[],[["error",3],["result",4]]]],[11,"from_record","","",17,[[],[["result",4],["error",3],["payload",3]]]],[11,"into_json_string","","",17,[[],["string",3]]],[11,"map_payload","","",15,[[],["bsorecord",3]]],[11,"with_payload","","",15,[[],["bsorecord",3]]],[11,"new_record","","",15,[[["string",3]],["bsorecord",3]]],[11,"try_map_payload","","",15,[[],[["result",4],["bsorecord",3]]]],[11,"map_payload_or","","",15,[[],[["option",4],["bsorecord",3]]]],[11,"into_timestamped_payload","","",15,[[]]],[11,"transpose","","Helper to improve ergonomics for handling records that …",15,[[],[["option",4],["bsorecord",3]]]],[11,"transpose","","",15,[[],[["result",4],["bsorecord",3]]]],[11,"from_payload","","",15,[[["payload",3]]]],[11,"from_payload","","",47,[[["payload",3]]]],[11,"serialized_len","","",16,[[],["usize",15]]],[11,"decrypt_and_parse_payload","","",16,[[["keybundle",3]],["result",6]]],[11,"from_cleartext_payload","","",16,[[["keybundle",3]],["result",6]]],[11,"decrypt","","",15,[[["keybundle",3]],[["cleartextbso",6],["result",6]]]],[11,"decrypt_as","","",15,[[["keybundle",3]],[["result",6],["bsorecord",3]]]],[11,"decrypt","","",48,[[["keybundle",3]],[["cleartextbso",6],["result",6]]]],[11,"decrypt_as","","",48,[[["keybundle",3]],[["result",6],["bsorecord",3]]]],[11,"encrypt","","",15,[[["keybundle",3]],[["result",6],["encryptedbso",6]]]],[11,"into_record","","",15,[[],[["result",6],["bsorecord",3]]]],[11,"encrypt","","",47,[[["keybundle",3]],[["result",6],["encryptedbso",6]]]],[11,"into_record","","",47,[[],[["result",6],["bsorecord",3]]]],[11,"new","","",0,[[["servertimestamp",3]],["recordchangeset",3]]],[11,"from_response","","",19,[[["response",3],["arc",3]],["result",6]]],[11,"create_storage_error","","",19,[[],["errorkind",4]]],[11,"new","","",34,[[["sync15storageclientinit",3]],[["sync15storageclient",3],["result",6]]]],[11,"get_encrypted_records","","",34,[[["collectionrequest",3]],[["result",6],["sync15clientresponse",4]]]],[11,"new_post_queue","","",34,[[["postresponsehandler",8],["servertimestamp",3],["infoconfiguration",3],["str",15]],[["postqueue",3],["result",6]]]],[11,"hashed_uid","","",34,[[],[["result",6],["string",3]]]],[11,"new","sync15::clients","Creates a new clients engine that delegates to the given …",2,[[["interruptee",8],["commandprocessor",8]],["engine",3]]],[11,"sync","","Syncs the clients collection. This works a little …",2,[[["sync15storageclient",3],["keybundle",3],["globalstate",3],["bool",15]],["result",6]]],[11,"local_client_id","","",2,[[],["string",3]]],[11,"get_client_data","","",2,[[],["clientdata",3]]],[11,"try_from_str","","",4,[[],[["option",4],["devicetype",4]]]],[11,"as_str","","",4,[[],["str",15]]],[11,"new_random","sync15","",25,[[],[["result",6],["collectionkeys",3]]]],[11,"from_encrypted_bso","","",25,[[["keybundle",3],["encryptedbso",6]],[["result",6],["collectionkeys",3]]]],[11,"to_encrypted_bso","","",25,[[["keybundle",3]],[["encryptedbso",6],["result",6]]]],[11,"key_for_collection","","",25,[[["str",15]],["keybundle",3]]],[11,"kind","","",35,[[],["errorkind",4]]],[11,"backtrace","","",35,[[],[["mutex",3],["option",4]]]],[11,"new","","Construct a key bundle from the already-decoded encrypt …",36,[[["vec",3],["u8",15]],[["result",6],["keybundle",3]]]],[11,"new_random","","",36,[[],[["result",6],["keybundle",3]]]],[11,"from_ksync_bytes","","",36,[[],[["result",6],["keybundle",3]]]],[11,"from_ksync_base64","","",36,[[["str",15]],[["result",6],["keybundle",3]]]],[11,"from_base64","","",36,[[["str",15]],[["result",6],["keybundle",3]]]],[11,"encryption_key","","",36,[[]]],[11,"hmac_key","","",36,[[]]],[11,"to_b64_array","","",36,[[]]],[11,"decrypt","","Decrypt the provided ciphertext with the given iv, and …",36,[[["str",15]],[["string",3],["result",6]]]],[11,"encrypt_bytes_with_iv","","Encrypt using the provided IV.",36,[[],["result",6]]],[11,"encrypt_bytes_rand_iv","","Generate a random iv and encrypt with it. Return both the …",36,[[],["result",6]]],[11,"encrypt_with_iv","","",36,[[["str",15]],["result",6]]],[11,"encrypt_rand_iv","","",36,[[["str",15]],["result",6]]],[11,"new","","",27,[[],["collectionrequest",3]]],[11,"ids","","",27,[[],["collectionrequest",3]]],[11,"full","","",27,[[],["collectionrequest",3]]],[11,"older_than","","",27,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"newer_than","","",27,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"sort_by","","",27,[[["requestorder",4]],["collectionrequest",3]]],[11,"limit","","",27,[[["usize",15]],["collectionrequest",3]]],[11,"batch","","",27,[[["string",3],["option",4]],["collectionrequest",3]]],[11,"commit","","",27,[[["bool",15]],["collectionrequest",3]]],[11,"build_url","","",27,[[["url",3]],[["result",4],["unacceptablebaseurl",3],["url",3]]]],[11,"for_full_sync","","Creates a state machine for a \\\"classic\\\" Sync 1.5 client …",37,[[["interruptee",8],["persistedglobalstate",4],["option",4],["setupstorageclient",8],["keybundle",3],["hashmap",3]],["setupstatemachine",3]]],[11,"for_fast_sync","","Creates a state machine for a fast sync, which only uses …",37,[[["interruptee",8],["persistedglobalstate",4],["option",4],["setupstorageclient",8],["keybundle",3],["hashmap",3]],["setupstatemachine",3]]],[11,"for_readonly_sync","","Creates a state machine for a read-only sync, where the …",37,[[["interruptee",8],["persistedglobalstate",4],["setupstorageclient",8],["keybundle",3]],["setupstatemachine",3]]],[11,"run_to_ready","","Runs through the state machine to the ready state.",37,[[["option",4],["globalstate",3]],[["result",6],["globalstate",3]]]],[11,"from_err","","",29,[[["error",3]],["servicestatus",4]]],[11,"prepare_for_sync","","Prepares the engine for syncing. The tabs engine …",31,[[["fn",8]],[["result",4],["error",3]]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",31,[[["str",15]],[["result",4],["error",3]]]],[11,"clear_sensitive_info","","",38,[[]]],[11,"get_next_sync_after","","",38,[[],[["option",4],["systemtime",3]]]],[11,"should_refresh_client","","",38,[[],["bool",15]]],[11,"note_client_refresh","","",38,[[]]],[11,"new","sync15::telemetry","",39,[[["str",15]],["event",3]]],[11,"value","","",39,[[["str",15]],["event",3]]],[11,"extra","","",39,[[["str",15],["string",3]],["event",3]]],[11,"new","","",40,[[],["engineincoming",3]]],[11,"applied","","Increment the value of <code>applied</code> by <code>n</code>.",40,[[["u32",15]]]],[11,"failed","","Increment the value of <code>failed</code> by <code>n</code>.",40,[[["u32",15]]]],[11,"new_failed","","Increment the value of <code>new_failed</code> by <code>n</code>.",40,[[["u32",15]]]],[11,"reconciled","","Increment the value of <code>reconciled</code> by <code>n</code>.",40,[[["u32",15]]]],[11,"get_applied","","Get the value of <code>applied</code>. Mostly useful for testing.",40,[[],["u32",15]]],[11,"get_failed","","Get the value of <code>failed</code>. Mostly useful for testing.",40,[[],["u32",15]]],[11,"get_new_failed","","Get the value of <code>new_failed</code>. Mostly useful for testing.",40,[[],["u32",15]]],[11,"get_reconciled","","Get the value of <code>reconciled</code>. Mostly useful for testing.",40,[[],["u32",15]]],[11,"new","","",41,[[],["engineoutgoing",3]]],[11,"sent","","",41,[[["usize",15]]]],[11,"failed","","",41,[[["usize",15]]]],[11,"new","","",42,[[],["engine",3]]],[11,"incoming","","",42,[[["engineincoming",3]]]],[11,"outgoing","","",42,[[["engineoutgoing",3]]]],[11,"failure","","",42,[[]]],[11,"validation","","",42,[[["validation",3]]]],[11,"with_version","","",43,[[["u32",15]],["validation",3]]],[11,"problem","","",43,[[["usize",15],["str",15]],["validation",3]]],[11,"new","","",45,[[],["synctelemetry",3]]],[11,"engine","","",45,[[["engine",3]]]],[11,"failure","","",45,[[["syncfailure",4]]]],[11,"finished","","",45,[[]]],[11,"new","","",46,[[],["synctelemetryping",3]]],[11,"uid","","",46,[[["string",3]]]],[11,"sync","","",46,[[["synctelemetry",3]]]],[11,"event","","",46,[[["event",3]]]],[11,"from_float_seconds","sync15","",33,[[["f64",15]],["servertimestamp",3]]],[11,"from_millis","","",33,[[["i64",15]],["servertimestamp",3]]],[18,"EPOCH","","",33,null],[11,"duration_since","","Returns None if <code>other</code> is later than <code>self</code> (Duration may …",33,[[["servertimestamp",3]],[["option",4],["duration",3]]]],[11,"as_millis","","Get the milliseconds for the timestamp.",33,[[],["i64",15]]]],"p":[[3,"RecordChangeset"],[3,"CollectionUpdate"],[3,"Engine"],[3,"ClientData"],[4,"DeviceType"],[3,"RemoteClient"],[8,"CommandProcessor"],[4,"CommandStatus"],[3,"Settings"],[4,"Command"],[4,"SyncFailure"],[13,"Other"],[13,"Unexpected"],[13,"Auth"],[13,"Http"],[3,"BsoRecord"],[3,"EncryptedPayload"],[3,"Payload"],[8,"SetupStorageClient"],[4,"Sync15ClientResponse"],[13,"Success"],[3,"Sync15StorageClientInit"],[3,"CollState"],[3,"CollSyncIds"],[4,"EngineSyncAssociation"],[3,"CollectionKeys"],[4,"ErrorKind"],[3,"CollectionRequest"],[3,"GlobalState"],[4,"ServiceStatus"],[3,"SyncResult"],[8,"SyncEngine"],[3,"SyncRequestInfo"],[3,"ServerTimestamp"],[3,"Sync15StorageClient"],[3,"Error"],[3,"KeyBundle"],[3,"SetupStateMachine"],[3,"MemoryCachedState"],[3,"Event"],[3,"EngineIncoming"],[3,"EngineOutgoing"],[3,"Engine"],[3,"Validation"],[3,"Problem"],[3,"SyncTelemetry"],[3,"SyncTelemetryPing"],[6,"CleartextBso"],[6,"EncryptedBso"]]},\
"sync15_traits":{"doc":"sync15-traitsThe sync15-traits support component is a …","i":[[0,"bridged_engine","sync15_traits","",null,null],[8,"BridgedEngine","sync15_traits::bridged_engine","A BridgedEngine acts as a bridge between …",null,null],[16,"Error","","The type returned for errors.",0,null],[10,"last_sync","","Returns the last sync time, in milliseconds, for this …",0,[[],[["i64",15],["result",4]]]],[10,"set_last_sync","","Sets the last sync time, in milliseconds. This is called …",0,[[["i64",15]],["result",4]]],[10,"sync_id","","Returns the sync ID for this engine\'s collection. This is …",0,[[],[["result",4],["option",4]]]],[10,"reset_sync_id","","Resets the sync ID for this engine\'s collection, …",0,[[],[["result",4],["string",3]]]],[10,"ensure_current_sync_id","","Ensures that the locally stored sync ID for this engine\'s …",0,[[["str",15]],[["result",4],["string",3]]]],[10,"sync_started","","Indicates that the engine is about to start syncing. This …",0,[[],["result",4]]],[10,"store_incoming","","Stages a batch of incoming Sync records. This is called …",0,[[],["result",4]]],[10,"apply","","Applies all staged records, reconciling changes on both …",0,[[],[["result",4],["applyresults",3]]]],[10,"set_uploaded","","Indicates that the given record IDs were uploaded …",0,[[["i64",15]],["result",4]]],[10,"sync_finished","","Indicates that all records have been uploaded. At this …",0,[[],["result",4]]],[10,"reset","","Resets all local Sync state, including any change flags, …",0,[[],["result",4]]],[10,"wipe","","Erases all local user data for this collection, and any …",0,[[],["result",4]]],[3,"ApplyResults","","",null,null],[12,"envelopes","","List of records",1,null],[12,"num_reconciled","","The number of incoming records whose contents were merged …",1,null],[11,"new","","",1,[[["vec",3],["outgoingenvelope",3]]]],[3,"IncomingEnvelope","","An envelope for an incoming item, passed to …",null,null],[12,"id","","",2,null],[12,"modified","","",2,null],[12,"sortindex","","",2,null],[12,"ttl","","",2,null],[11,"payload","","Parses and returns the record payload from this envelope. …",2,[[],[["result",4],["payload",3],["payloaderror",4]]]],[3,"OutgoingEnvelope","","An envelope for an outgoing item, returned from …",null,null],[4,"PayloadError","","An error that indicates a payload is invalid.",null,null],[13,"Invalid","","The payload contains invalid JSON.",3,null],[13,"MismatchedId","","The ID of the BSO in the envelope doesn\'t match the ID in …",3,null],[12,"envelope","sync15_traits::bridged_engine::PayloadError","",4,null],[12,"payload","","",4,null],[0,"client","sync15_traits","This module has to be here because of some hard-to-avoid …",null,null],[3,"ClientData","sync15_traits::client","Argument to Store::prepare_for_sync. See comment there …",null,null],[12,"local_client_id","","",5,null],[12,"recent_clients","","",5,null],[3,"RemoteClient","","Information about a remote client in the clients …",null,null],[12,"fxa_device_id","","",6,null],[12,"device_name","","",6,null],[12,"device_type","","",6,null],[4,"DeviceType","","The type of a client. Please keep these variants in sync …",null,null],[13,"Desktop","","",7,null],[13,"Mobile","","",7,null],[13,"Tablet","","",7,null],[13,"VR","","",7,null],[13,"TV","","",7,null],[11,"try_from_str","","",7,[[],[["devicetype",4],["option",4]]]],[11,"as_str","","",7,[[],["str",15]]],[0,"request","sync15_traits","",null,null],[3,"CollectionRequest","sync15_traits::request","",null,null],[12,"collection","","",8,null],[12,"full","","",8,null],[12,"ids","","",8,null],[12,"limit","","",8,null],[12,"older","","",8,null],[12,"newer","","",8,null],[12,"order","","",8,null],[12,"commit","","",8,null],[12,"batch","","",8,null],[11,"new","","",8,[[],["collectionrequest",3]]],[11,"ids","","",8,[[],["collectionrequest",3]]],[11,"full","","",8,[[],["collectionrequest",3]]],[11,"older_than","","",8,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"newer_than","","",8,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"sort_by","","",8,[[["requestorder",4]],["collectionrequest",3]]],[11,"limit","","",8,[[["usize",15]],["collectionrequest",3]]],[11,"batch","","",8,[[["option",4],["string",3]],["collectionrequest",3]]],[11,"commit","","",8,[[["bool",15]],["collectionrequest",3]]],[11,"build_url","","",8,[[["url",3]],[["url",3],["result",4],["unacceptablebaseurl",3]]]],[3,"UnacceptableBaseUrl","","",null,null],[4,"RequestOrder","","",null,null],[13,"Oldest","","",9,null],[13,"Newest","","",9,null],[13,"Index","","",9,null],[11,"as_str","","",9,[[],["str",15]]],[0,"telemetry","sync15_traits","Manage recording sync telemetry. Assumes some external …",null,null],[3,"Event","sync15_traits::telemetry","A generic \\\"Event\\\" - suitable for all kinds of pings …",null,null],[11,"new","","",10,[[["str",15]]]],[11,"value","","",10,[[["str",15]]]],[11,"extra","","",10,[[["str",15],["string",3]]]],[4,"SyncFailure","","A Sync failure.",null,null],[13,"Shutdown","","",11,null],[13,"Other","","",11,null],[12,"error","sync15_traits::telemetry::SyncFailure","",12,null],[13,"Unexpected","sync15_traits::telemetry","",11,null],[12,"error","sync15_traits::telemetry::SyncFailure","",13,null],[13,"Auth","sync15_traits::telemetry","",11,null],[12,"from","sync15_traits::telemetry::SyncFailure","",14,null],[13,"Http","sync15_traits::telemetry","",11,null],[12,"code","sync15_traits::telemetry::SyncFailure","",15,null],[3,"EngineIncoming","sync15_traits::telemetry","Incoming record for an engine\'s sync",null,null],[11,"new","","",16,[[]]],[11,"applied","","Increment the value of <code>applied</code> by <code>n</code>.",16,[[["u32",15]]]],[11,"failed","","Increment the value of <code>failed</code> by <code>n</code>.",16,[[["u32",15]]]],[11,"new_failed","","Increment the value of <code>new_failed</code> by <code>n</code>.",16,[[["u32",15]]]],[11,"reconciled","","Increment the value of <code>reconciled</code> by <code>n</code>.",16,[[["u32",15]]]],[11,"get_applied","","Get the value of <code>applied</code>. Mostly useful for testing.",16,[[],["u32",15]]],[11,"get_failed","","Get the value of <code>failed</code>. Mostly useful for testing.",16,[[],["u32",15]]],[11,"get_new_failed","","Get the value of <code>new_failed</code>. Mostly useful for testing.",16,[[],["u32",15]]],[11,"get_reconciled","","Get the value of <code>reconciled</code>. Mostly useful for testing.",16,[[],["u32",15]]],[3,"EngineOutgoing","","Outgoing record for an engine\'s sync",null,null],[11,"new","","",17,[[]]],[11,"sent","","",17,[[["usize",15]]]],[11,"failed","","",17,[[["usize",15]]]],[3,"Engine","","One engine\'s sync.",null,null],[11,"new","","",18,[[]]],[11,"incoming","","",18,[[["engineincoming",3]]]],[11,"outgoing","","",18,[[["engineoutgoing",3]]]],[11,"failure","","",18,[[]]],[11,"validation","","",18,[[["validation",3]]]],[3,"Validation","","",null,null],[11,"with_version","","",19,[[["u32",15]],["validation",3]]],[11,"problem","","",19,[[["usize",15],["str",15]]]],[3,"Problem","","",null,null],[3,"SyncTelemetry","","A single sync. May have many engines, may have its own …",null,null],[11,"new","","",20,[[]]],[11,"engine","","",20,[[["engine",3]]]],[11,"failure","","",20,[[["syncfailure",4]]]],[11,"finished","","",20,[[]]],[3,"SyncTelemetryPing","","The Sync ping payload, as documented at …",null,null],[11,"new","","",21,[[]]],[11,"uid","","",21,[[["string",3]]]],[11,"sync","","",21,[[["synctelemetry",3]]]],[11,"event","","",21,[[["event",3]]]],[6,"IncomingChangeset","sync15_traits","",null,null],[6,"OutgoingChangeset","","",null,null],[3,"RecordChangeset","","",null,null],[12,"changes","","",22,null],[12,"timestamp","","For GETs, the last sync timestamp that should be …",22,null],[12,"collection","","",22,null],[3,"CollSyncIds","","",null,null],[12,"global","","",23,null],[12,"coll","","",23,null],[4,"EngineSyncAssociation","","Defines how an engine is associated with a particular set …",null,null],[13,"Disconnected","","This store is disconnected (although it may be connected …",24,null],[13,"Connected","","Sync is connected, and has the following sync IDs.",24,null],[8,"SyncEngine","","A \\\"sync engine\\\" is a thing that knows how to sync. It\'s …",null,null],[10,"collection_name","","",25,[[],[["cow",4],["str",15]]]],[11,"prepare_for_sync","","Prepares the engine for syncing. The tabs engine …",25,[[["fn",8]],["result",6]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",25,[[["str",15]],["result",6]]],[10,"apply_incoming","","<code>inbound</code> is a vector to support the case where …",25,[[["engine",3],["incomingchangeset",6],["vec",3]],[["outgoingchangeset",6],["result",6]]]],[10,"sync_finished","","",25,[[["servertimestamp",3],["vec",3],["guid",3]],["result",6]]],[10,"get_collection_requests","","The engine is responsible for building the collection …",25,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[10,"get_sync_assoc","","Get persisted sync IDs. If they don\'t match the global …",25,[[],[["result",6],["enginesyncassociation",4]]]],[10,"reset","","Reset the engine (and associated store) without wiping …",25,[[["enginesyncassociation",4]],["result",6]]],[10,"wipe","","",25,[[],["result",6]]],[3,"Payload","","Represents the decrypted payload in a Bso. Provides a …",null,null],[12,"id","","",26,null],[12,"deleted","","",26,null],[12,"data","","",26,null],[3,"ServerTimestamp","","Typesafe way to manage server timestamps without …",null,null],[12,"0","","",27,null],[3,"Guid","","This is a type intended to be used to represent the guids …",null,null],[11,"from","sync15_traits::bridged_engine","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","sync15_traits","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","sync15_traits::client","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"get_hash","","",6,[[],["u64",15]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"vzip","","",7,[[]]],[11,"from","sync15_traits","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","sync15_traits::request","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"get_hash","","",9,[[],["u64",15]]],[11,"vzip","","",9,[[]]],[11,"from","sync15_traits","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","sync15_traits::telemetry","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","sync15_traits","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"get_hash","","",31,[[],["u64",15]]],[11,"vzip","","",31,[[]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref","","",31,[[],["str",15]]],[11,"column_result","","",31,[[["valueref",4]],[["result",4],["fromsqlerror",4],["guid",3]]]],[11,"hash","","",31,[[]]],[11,"partial_cmp","","",31,[[["guid",3]],[["option",4],["ordering",4]]]],[11,"serialize","","",31,[[],["result",4]]],[11,"from","","",31,[[["str",15]],["guid",3]]],[11,"from","","",31,[[],["guid",3]]],[11,"from","","",31,[[["str",15]],["guid",3]]],[11,"from","","",31,[[["string",3]],["guid",3]]],[11,"from","","",31,[[["u8",15],["vec",3],["global",3]],["guid",3]]],[11,"as_ref","","",31,[[],["str",15]]],[11,"as_ref","","",31,[[]]],[11,"default","","Create a default guid by calling <code>Guid::empty()</code>",31,[[],["guid",3]]],[11,"clone","","",31,[[],["guid",3]]],[11,"to_sql","","",31,[[],[["result",4],["error",4],["tosqloutput",4]]]],[11,"cmp","","",31,[[["guid",3]],["ordering",4]]],[11,"deserialize","","",31,[[],[["result",4],["guid",3]]]],[11,"eq","","",31,[[["str",15]],["bool",15]]],[11,"eq","","",31,[[],["bool",15]]],[11,"eq","","",31,[[],["bool",15]]],[11,"eq","","",31,[[["string",3]],["bool",15]]],[11,"eq","","",31,[[["str",15]],["bool",15]]],[11,"eq","","",31,[[["guid",3]],["bool",15]]],[11,"eq","","",31,[[["vec",3]],["bool",15]]],[11,"from","sync15_traits::bridged_engine","",1,[[["vec",3],["outgoingenvelope",3]]]],[11,"from","","",28,[[["payload",3]]]],[11,"from","","",3,[[["error",3]],["payloaderror",4]]],[11,"clone","","",1,[[],["applyresults",3]]],[11,"clone","","",2,[[],["incomingenvelope",3]]],[11,"clone","","",28,[[],["outgoingenvelope",3]]],[11,"clone","sync15_traits","",22,[[],["recordchangeset",3]]],[11,"clone","sync15_traits::client","",5,[[],["clientdata",3]]],[11,"clone","","",6,[[],["remoteclient",3]]],[11,"clone","","",7,[[],["devicetype",4]]],[11,"clone","sync15_traits","",23,[[],["collsyncids",3]]],[11,"clone","","",24,[[],["enginesyncassociation",4]]],[11,"clone","","",26,[[],["payload",3]]],[11,"clone","sync15_traits::request","",8,[[],["collectionrequest",3]]],[11,"clone","","",9,[[],["requestorder",4]]],[11,"clone","sync15_traits","",27,[[],["servertimestamp",3]]],[11,"default","sync15_traits::bridged_engine","",1,[[],["applyresults",3]]],[11,"default","sync15_traits","",27,[[],["servertimestamp",3]]],[11,"default","sync15_traits::telemetry","",16,[[],["engineincoming",3]]],[11,"default","","",17,[[],["engineoutgoing",3]]],[11,"default","","",19,[[],["validation",3]]],[11,"default","","",30,[[],["problem",3]]],[11,"default","","",20,[[],["synctelemetry",3]]],[11,"default","","",21,[[],["synctelemetryping",3]]],[11,"cmp","sync15_traits::request","",9,[[["requestorder",4]],["ordering",4]]],[11,"eq","sync15_traits::client","",6,[[["remoteclient",3]],["bool",15]]],[11,"ne","","",6,[[["remoteclient",3]],["bool",15]]],[11,"eq","","",7,[[["devicetype",4]],["bool",15]]],[11,"eq","sync15_traits","",23,[[["collsyncids",3]],["bool",15]]],[11,"ne","","",23,[[["collsyncids",3]],["bool",15]]],[11,"eq","","",24,[[["enginesyncassociation",4]],["bool",15]]],[11,"ne","","",24,[[["enginesyncassociation",4]],["bool",15]]],[11,"eq","","",26,[[["payload",3]],["bool",15]]],[11,"ne","","",26,[[["payload",3]],["bool",15]]],[11,"eq","sync15_traits::request","",8,[[["collectionrequest",3]],["bool",15]]],[11,"ne","","",8,[[["collectionrequest",3]],["bool",15]]],[11,"eq","","",9,[[["requestorder",4]],["bool",15]]],[11,"eq","sync15_traits","",27,[[["servertimestamp",3]],["bool",15]]],[11,"ne","","",27,[[["servertimestamp",3]],["bool",15]]],[11,"partial_cmp","sync15_traits::request","",9,[[["requestorder",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","sync15_traits","",27,[[["servertimestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",27,[[["servertimestamp",3]],["bool",15]]],[11,"le","","",27,[[["servertimestamp",3]],["bool",15]]],[11,"gt","","",27,[[["servertimestamp",3]],["bool",15]]],[11,"ge","","",27,[[["servertimestamp",3]],["bool",15]]],[11,"fmt","sync15_traits::bridged_engine","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits","",22,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::client","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::request","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits","",27,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::telemetry","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::bridged_engine","",3,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::request","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits","",27,[[["formatter",3]],["result",6]]],[11,"hash","sync15_traits::client","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","sync15_traits::request","",9,[[]]],[11,"from_str","sync15_traits","",27,[[["str",15]],["result",4]]],[11,"serialize","sync15_traits::bridged_engine","",28,[[],["result",4]]],[11,"serialize","sync15_traits::client","",7,[[],["result",4]]],[11,"serialize","sync15_traits","",26,[[],["result",4]]],[11,"serialize","","",27,[[["serializer",8]],["result",4]]],[11,"serialize","sync15_traits::telemetry","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"deserialize","sync15_traits::bridged_engine","",2,[[],["result",4]]],[11,"deserialize","sync15_traits::client","",7,[[],["result",4]]],[11,"deserialize","sync15_traits","",26,[[],["result",4]]],[11,"deserialize","","",27,[[["deserializer",8]],["result",4]]],[11,"ffi_default","sync15_traits::telemetry","",21,[[]]],[11,"into_ffi_value","","",21,[[]]],[11,"new","sync15_traits","",22,[[["servertimestamp",3]],["recordchangeset",3]]],[11,"prepare_for_sync","","Prepares the engine for syncing. The tabs engine …",25,[[["fn",8]],["result",6]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",25,[[["str",15]],["result",6]]],[11,"new_tombstone","","",26,[[],["payload",3]]],[11,"new_tombstone_with_ttl","","",26,[[["u32",15]],["payload",3]]],[11,"with_sortindex","","",26,[[["i32",15]],["payload",3]]],[11,"with_auto_field","","\\\"Auto\\\" fields are fields like \'sortindex\' and \'ttl\', …",26,[[["option",4],["jsonvalue",4],["into",8],["str",15]],["payload",3]]],[11,"take_auto_field","","",26,[[["str",15]],["option",4]]],[11,"id","","",26,[[],["str",15]]],[11,"is_tombstone","","",26,[[],["bool",15]]],[11,"from_json","","",26,[[["jsonvalue",4]],[["result",4],["payload",3],["error",3]]]],[11,"into_record","","Deserializes the BSO payload into a specific record type <code>T</code>…",26,[[],[["result",4],["error",3]]]],[11,"from_record","","",26,[[["serialize",8]],[["result",4],["payload",3],["error",3]]]],[11,"into_json_string","","",26,[[],["string",3]]],[11,"from_float_seconds","","",27,[[["f64",15]]]],[11,"from_millis","","",27,[[["i64",15]]]],[18,"EPOCH","","",27,null],[11,"duration_since","","Returns None if <code>other</code> is later than <code>self</code> (Duration may …",27,[[["servertimestamp",3]],[["option",4],["duration",3]]]],[11,"as_millis","","Get the milliseconds for the timestamp.",27,[[],["i64",15]]],[11,"new","","Create a guid from a <code>str</code>.",31,[[["str",15]],["guid",3]]],[11,"empty","","Create an empty guid. Usable as a constant.",31,[[],["guid",3]]],[11,"random","","Create a random guid (of 12 base64url characters). …",31,[[],["guid",3]]],[11,"from_string","","Convert <code>b</code> into a <code>Guid</code>.",31,[[["string",3]],["guid",3]]],[11,"from_slice","","Convert <code>b</code> into a <code>Guid</code>.",31,[[],["guid",3]]],[11,"from_vec","","Convert <code>v</code> to a <code>Guid</code>, consuming it.",31,[[["u8",15],["vec",3],["global",3]],["guid",3]]],[11,"as_bytes","","Get the data backing this <code>Guid</code> as a <code>&[u8]</code>.",31,[[]]],[11,"as_str","","Get the data backing this <code>Guid</code> as a <code>&str</code>.",31,[[],["str",15]]],[11,"into_string","","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …",31,[[],["string",3]]],[11,"is_valid_for_sync_server","","Returns true for Guids that are deemed valid by the sync …",31,[[],["bool",15]]],[11,"is_valid_for_places","","Returns true for Guids that are valid places guids, and …",31,[[],["bool",15]]],[11,"is_valid_places_byte","","Returns true if the byte <code>b</code> is a valid base64url byte.",31,[[["u8",15]],["bool",15]]]],"p":[[8,"BridgedEngine"],[3,"ApplyResults"],[3,"IncomingEnvelope"],[4,"PayloadError"],[13,"MismatchedId"],[3,"ClientData"],[3,"RemoteClient"],[4,"DeviceType"],[3,"CollectionRequest"],[4,"RequestOrder"],[3,"Event"],[4,"SyncFailure"],[13,"Other"],[13,"Unexpected"],[13,"Auth"],[13,"Http"],[3,"EngineIncoming"],[3,"EngineOutgoing"],[3,"Engine"],[3,"Validation"],[3,"SyncTelemetry"],[3,"SyncTelemetryPing"],[3,"RecordChangeset"],[3,"CollSyncIds"],[4,"EngineSyncAssociation"],[8,"SyncEngine"],[3,"Payload"],[3,"ServerTimestamp"],[3,"OutgoingEnvelope"],[3,"UnacceptableBaseUrl"],[3,"Problem"],[3,"Guid"]]},\
"sync_guid":{"doc":"","i":[[3,"Guid","sync_guid","This is a type intended to be used to represent the guids …",null,null],[11,"new","","Create a guid from a <code>str</code>.",0,[[["str",15]]]],[11,"empty","","Create an empty guid. Usable as a constant.",0,[[]]],[11,"random","","Create a random guid (of 12 base64url characters). …",0,[[]]],[11,"from_string","","Convert <code>b</code> into a <code>Guid</code>.",0,[[["string",3]]]],[11,"from_slice","","Convert <code>b</code> into a <code>Guid</code>.",0,[[]]],[11,"from_vec","","Convert <code>v</code> to a <code>Guid</code>, consuming it.",0,[[["vec",3],["u8",15]]]],[11,"as_bytes","","Get the data backing this <code>Guid</code> as a <code>&[u8]</code>.",0,[[]]],[11,"as_str","","Get the data backing this <code>Guid</code> as a <code>&str</code>.",0,[[],["str",15]]],[11,"into_string","","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …",0,[[],["string",3]]],[11,"is_valid_for_sync_server","","Returns true for Guids that are deemed valid by the sync …",0,[[],["bool",15]]],[11,"is_valid_for_places","","Returns true for Guids that are valid places guids, and …",0,[[],["bool",15]]],[11,"is_valid_places_byte","","Returns true if the byte <code>b</code> is a valid base64url byte.",0,[[["u8",15]],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"get_hash","","",0,[[],["u64",15]]],[11,"vzip","","",0,[[]]],[11,"as_ref","","",0,[[],["str",15]]],[11,"as_ref","","",0,[[]]],[11,"from","","",0,[[["str",15]],["guid",3]]],[11,"from","","",0,[[["str",15]],["guid",3]]],[11,"from","","",0,[[],["guid",3]]],[11,"from","","",0,[[["string",3]],["guid",3]]],[11,"from","","",0,[[["vec",3],["u8",15]],["guid",3]]],[11,"clone","","",0,[[],["guid",3]]],[11,"default","","Create a default guid by calling <code>Guid::empty()</code>",0,[[]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",0,[[["str",15]],["bool",15]]],[11,"eq","","",0,[[["str",15]],["bool",15]]],[11,"eq","","",0,[[["string",3]],["bool",15]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",0,[[["vec",3]],["bool",15]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"deref","","",0,[[],["str",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"serialize","","",0,[[["serializer",8]],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"column_result","","",0,[[["valueref",4]],["fromsqlresult",6]]],[11,"to_sql","","",0,[[],[["result",6],["tosqloutput",4]]]]],"p":[[3,"Guid"]]},\
"sync_manager":{"doc":"","i":[[0,"error","sync_manager","",null,null],[4,"ErrorKind","sync_manager::error","",null,null],[13,"UnknownEngine","","",0,null],[13,"UnsupportedFeature","","",0,null],[13,"ConnectionClosed","","",0,null],[13,"InvalidHandle","","",0,null],[13,"ProtobufDecodeError","","",0,null],[13,"Sync15Error","","",0,null],[13,"UrlParseError","","",0,null],[13,"InterruptedError","","",0,null],[13,"JsonError","","",0,null],[13,"LoginsError","","",0,null],[13,"PlacesError","","",0,null],[13,"AnyhowError","","",0,null],[6,"Result","","",null,null],[3,"Error","","",null,null],[11,"kind","","",1,[[],["errorkind",4]]],[11,"backtrace","","",1,[[],[["option",4],["mutex",3]]]],[0,"msg_types","sync_manager","",null,null],[3,"SyncParams","sync_manager::msg_types","",null,null],[12,"engines_to_sync","","",2,null],[12,"sync_all_engines","","",2,null],[12,"reason","","",2,null],[12,"engines_to_change_state","","",2,null],[12,"persisted_state","","",2,null],[12,"acct_key_id","","These conceptually are a nested type, but exposing them …",2,null],[12,"acct_access_token","","",2,null],[12,"acct_tokenserver_url","","",2,null],[12,"acct_sync_key","","",2,null],[12,"fxa_device_id","","",2,null],[12,"device_name","","",2,null],[12,"device_type","","",2,null],[12,"local_encryption_keys","","",2,null],[11,"reason","","Returns the enum value of <code>reason</code>, or the default if the …",2,[[],["syncreason",4]]],[11,"set_reason","","Sets <code>reason</code> to the provided enum value.",2,[[["syncreason",4]]]],[11,"persisted_state","","Returns the value of <code>persisted_state</code>, or the default …",2,[[],["str",15]]],[11,"device_type","","Returns the enum value of <code>device_type</code>, or the default if …",2,[[],["devicetype",4]]],[11,"set_device_type","","Sets <code>device_type</code> to the provided enum value.",2,[[["devicetype",4]]]],[3,"SyncResult","","",null,null],[12,"status","","",3,null],[12,"results","","empty string used for \'no error\'",3,null],[12,"declined","","",3,null],[12,"have_declined","","false if we didn\'t manage to check declined.",3,null],[12,"next_sync_allowed_at","","",3,null],[12,"persisted_state","","",3,null],[12,"telemetry_json","","",3,null],[11,"status","","Returns the enum value of <code>status</code>, or the default if the …",3,[[],["servicestatus",4]]],[11,"set_status","","Sets <code>status</code> to the provided enum value.",3,[[["servicestatus",4]]]],[11,"next_sync_allowed_at","","Returns the value of <code>next_sync_allowed_at</code>, or the default …",3,[[],["i64",15]]],[11,"telemetry_json","","Returns the value of <code>telemetry_json</code>, or the default value …",3,[[],["str",15]]],[4,"SyncReason","","",null,null],[13,"Scheduled","","",4,null],[13,"User","","",4,null],[13,"PreSleep","","",4,null],[13,"Startup","","",4,null],[13,"EnabledChange","","",4,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>SyncReason</code>.",4,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>SyncReason</code>, or <code>None</code> if <code>value</code> is not …",4,[[["i32",15]],[["option",4],["syncreason",4]]]],[4,"DeviceType","","",null,null],[13,"Desktop","","",5,null],[13,"Mobile","","",5,null],[13,"Tablet","","",5,null],[13,"Vr","","",5,null],[13,"Tv","","",5,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>DeviceType</code>.",5,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>DeviceType</code>, or <code>None</code> if <code>value</code> is not …",5,[[["i32",15]],[["devicetype",4],["option",4]]]],[4,"ServiceStatus","","",null,null],[13,"Ok","","",6,null],[13,"NetworkError","","",6,null],[13,"ServiceError","","",6,null],[13,"AuthError","","",6,null],[13,"BackedOff","","",6,null],[13,"OtherError","","",6,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>ServiceStatus</code>.",6,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>ServiceStatus</code>, or <code>None</code> if <code>value</code> is …",6,[[["i32",15]],[["option",4],["servicestatus",4]]]],[5,"set_places","sync_manager","",null,[[["arc",3],["placesapi",3]]]],[5,"set_logins","","",null,[[["mutex",3],["arc",3]]]],[5,"set_tabs","","",null,[[["arc",3],["mutex",3]]]],[5,"disconnect","","",null,[[]]],[5,"wipe","","",null,[[["str",15]],["result",6]]],[5,"wipe_all","","",null,[[],["result",6]]],[5,"reset","","",null,[[["str",15]],["result",6]]],[5,"reset_all","","",null,[[],["result",6]]],[5,"sync","","",null,[[["syncparams",3]],[["syncresult",3],["result",6]]]],[11,"from","sync_manager::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","sync_manager::msg_types","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"get_hash","","",4,[[],["u64",15]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"get_hash","","",5,[[],["u64",15]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"get_hash","","",6,[[],["u64",15]]],[11,"vzip","","",6,[[]]],[11,"from","sync_manager::error","",0,[[["handleerror",4]]]],[11,"from","","",0,[[["decodeerror",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["interrupted",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",1,[[["errorkind",4]],["error",3]]],[11,"from","","",1,[[["handleerror",4]]]],[11,"from","","",1,[[["decodeerror",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["parseerror",4]]]],[11,"from","","",1,[[["interrupted",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","sync_manager::msg_types","",6,[[["servicestatus",4]]]],[11,"clone","","",2,[[],["syncparams",3]]],[11,"clone","","",3,[[],["syncresult",3]]],[11,"clone","","",4,[[],["syncreason",4]]],[11,"clone","","",5,[[],["devicetype",4]]],[11,"clone","","",6,[[],["servicestatus",4]]],[11,"default","","",2,[[],["syncparams",3]]],[11,"default","","",3,[[],["syncresult",3]]],[11,"default","","",4,[[],["syncreason",4]]],[11,"default","","",5,[[],["devicetype",4]]],[11,"default","","",6,[[],["servicestatus",4]]],[11,"cmp","","",4,[[["syncreason",4]],["ordering",4]]],[11,"cmp","","",5,[[["devicetype",4]],["ordering",4]]],[11,"cmp","","",6,[[["servicestatus",4]],["ordering",4]]],[11,"eq","","",2,[[["syncparams",3]],["bool",15]]],[11,"ne","","",2,[[["syncparams",3]],["bool",15]]],[11,"eq","","",3,[[["syncresult",3]],["bool",15]]],[11,"ne","","",3,[[["syncresult",3]],["bool",15]]],[11,"eq","","",4,[[["syncreason",4]],["bool",15]]],[11,"eq","","",5,[[["devicetype",4]],["bool",15]]],[11,"eq","","",6,[[["servicestatus",4]],["bool",15]]],[11,"partial_cmp","","",4,[[["syncreason",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",5,[[["devicetype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",6,[[["servicestatus",4]],[["option",4],["ordering",4]]]],[11,"fmt","sync_manager::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","sync_manager::msg_types","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","sync_manager::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","sync_manager::msg_types","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"source","sync_manager::error","",0,[[],[["option",4],["error",8]]]],[11,"ffi_default","sync_manager::msg_types","",3,[[]]],[11,"into_ffi_value","","",3,[[]]],[11,"ffi_default","","",2,[[]]],[11,"into_ffi_value","","",2,[[]]],[11,"encode_raw","","",2,[[]]],[11,"merge_field","","",2,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",2,[[],["usize",15]]],[11,"clear","","",2,[[]]],[11,"encode_raw","","",3,[[]]],[11,"merge_field","","",3,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",3,[[],["usize",15]]],[11,"clear","","",3,[[]]]],"p":[[4,"ErrorKind"],[3,"Error"],[3,"SyncParams"],[3,"SyncResult"],[4,"SyncReason"],[4,"DeviceType"],[4,"ServiceStatus"]]},\
"sync_manager_ffi":{"doc":"","i":[[5,"sync_manager_set_places","sync_manager_ffi","",null,[[["externerror",3],["u64",15]]]],[5,"sync_manager_set_logins","","",null,[[["externerror",3],["u64",15]]]],[5,"sync_manager_set_tabs","","",null,[[["externerror",3],["u64",15]]]],[5,"sync_manager_disconnect","","",null,[[["externerror",3]]]],[5,"sync_manager_sync","","SafetyReads pointer, thus unsafe.",null,[[["externerror",3],["i32",15]],["bytebuffer",3]]],[5,"sync_manager_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"sync_manager_destroy_bytebuffer","","",null,[[["bytebuffer",3]]]]],"p":[]},\
"tabs":{"doc":"","i":[[0,"error","tabs","",null,null],[4,"ErrorKind","tabs::error","",null,null],[13,"SyncAdapterError","","",0,null],[13,"JsonError","","",0,null],[13,"UrlParseError","","",0,null],[13,"ProtobufDecodeError","","",0,null],[6,"Result","","",null,null],[3,"Error","","",null,null],[11,"kind","","",1,[[],["errorkind",4]]],[11,"backtrace","","",1,[[],[["option",4],["mutex",3]]]],[0,"msg_types","tabs","",null,null],[3,"ClientTabs","tabs::msg_types","",null,null],[12,"client_id","","",2,null],[12,"remote_tabs","","",2,null],[3,"ClientsTabs","","",null,null],[12,"clients_tabs","","",3,null],[3,"RemoteTab","","",null,null],[12,"title","","",4,null],[12,"url_history","","",4,null],[12,"icon","","",4,null],[12,"last_used","","",4,null],[11,"icon","","Returns the value of <code>icon</code>, or the default value if <code>icon</code> …",4,[[],["str",15]]],[3,"RemoteTabs","","",null,null],[12,"remote_tabs","","",5,null],[3,"ClientRemoteTabs","tabs","",null,null],[12,"client_id","","",6,null],[12,"client_name","","",6,null],[12,"device_type","","",6,null],[12,"remote_tabs","","",6,null],[3,"RemoteTab","","",null,null],[12,"title","","",7,null],[12,"url_history","","",7,null],[12,"icon","","",7,null],[12,"last_used","","",7,null],[3,"TabsEngine","","",null,null],[3,"TabsStore","","",null,null],[12,"storage","","",8,null],[4,"DeviceType","","The type of a client. Please keep these variants in sync …",null,null],[13,"Desktop","","",9,null],[13,"Mobile","","",9,null],[13,"Tablet","","",9,null],[13,"VR","","",9,null],[13,"TV","","",9,null],[11,"from","tabs::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","tabs","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","tabs::msg_types","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","tabs","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"get_hash","","",9,[[],["u64",15]]],[11,"vzip","","",9,[[]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",9,[[]]],[11,"serialize","","",9,[[],["result",4]]],[11,"clone","","",9,[[],["devicetype",4]]],[11,"deserialize","","",9,[[],[["result",4],["devicetype",4]]]],[11,"eq","","",9,[[["devicetype",4]],["bool",15]]],[11,"from","tabs::error","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["decodeerror",3]]]],[11,"from","","",1,[[["errorkind",4]],["error",3]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["parseerror",4]]]],[11,"from","","",1,[[["decodeerror",3]]]],[11,"from","tabs::msg_types","",3,[[["vec",3],["clientremotetabs",3]]]],[11,"from","","",2,[[["clientremotetabs",3]]]],[11,"from","","",4,[[["remotetab",3]]]],[11,"from","tabs","",7,[[["remotetab",3]]]],[11,"clone","","",7,[[],["remotetab",3]]],[11,"clone","","",6,[[],["clientremotetabs",3]]],[11,"clone","tabs::msg_types","",2,[[],["clienttabs",3]]],[11,"clone","","",3,[[],["clientstabs",3]]],[11,"clone","","",4,[[],["remotetab",3]]],[11,"clone","","",5,[[],["remotetabs",3]]],[11,"default","tabs","",8,[[]]],[11,"default","tabs::msg_types","",2,[[],["clienttabs",3]]],[11,"default","","",3,[[],["clientstabs",3]]],[11,"default","","",4,[[],["remotetab",3]]],[11,"default","","",5,[[],["remotetabs",3]]],[11,"eq","tabs","",7,[[["remotetab",3]],["bool",15]]],[11,"ne","","",7,[[["remotetab",3]],["bool",15]]],[11,"eq","tabs::msg_types","",2,[[["clienttabs",3]],["bool",15]]],[11,"ne","","",2,[[["clienttabs",3]],["bool",15]]],[11,"eq","","",3,[[["clientstabs",3]],["bool",15]]],[11,"ne","","",3,[[["clientstabs",3]],["bool",15]]],[11,"eq","","",4,[[["remotetab",3]],["bool",15]]],[11,"ne","","",4,[[["remotetab",3]],["bool",15]]],[11,"eq","","",5,[[["remotetabs",3]],["bool",15]]],[11,"ne","","",5,[[["remotetabs",3]],["bool",15]]],[11,"fmt","tabs::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","tabs","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","tabs::msg_types","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tabs::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"ffi_default","tabs::msg_types","",3,[[]]],[11,"into_ffi_value","","",3,[[]]],[11,"serialize","tabs","",7,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"collection_name","","",10,[[],[["str",15],["cow",4]]]],[11,"prepare_for_sync","","",10,[[["fn",8]],["result",6]]],[11,"apply_incoming","","",10,[[["engine",3],["vec",3],["incomingchangeset",6]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",10,[[["guid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"get_collection_requests","","",10,[[["servertimestamp",3]],[["result",6],["vec",3]]]],[11,"get_sync_assoc","","",10,[[],[["enginesyncassociation",4],["result",6]]]],[11,"reset","","",10,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",10,[[],["result",6]]],[11,"encode_raw","tabs::msg_types","",2,[[]]],[11,"merge_field","","",2,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",2,[[],["usize",15]]],[11,"clear","","",2,[[]]],[11,"encode_raw","","",3,[[]]],[11,"merge_field","","",3,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",3,[[],["usize",15]]],[11,"clear","","",3,[[]]],[11,"encode_raw","","",4,[[]]],[11,"merge_field","","",4,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",4,[[],["usize",15]]],[11,"clear","","",4,[[]]],[11,"encode_raw","","",5,[[]]],[11,"merge_field","","",5,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",5,[[],["usize",15]]],[11,"clear","","",5,[[]]],[11,"new","tabs","",10,[[["tabsstorage",3]]]],[11,"new","","",8,[[]]],[11,"update_local_state","","",8,[[["remotetab",3],["vec",3]]]],[11,"remote_tabs","","",8,[[],[["option",4],["vec",3]]]],[11,"sync","","A convenience wrapper around sync_multiple.",8,[[["sync15storageclientinit",3],["keybundle",3],["str",15]],[["synctelemetryping",3],["result",6]]]],[11,"try_from_str","","",9,[[],[["devicetype",4],["option",4]]]],[11,"as_str","","",9,[[],["str",15]]]],"p":[[4,"ErrorKind"],[3,"Error"],[3,"ClientTabs"],[3,"ClientsTabs"],[3,"RemoteTab"],[3,"RemoteTabs"],[3,"ClientRemoteTabs"],[3,"RemoteTab"],[3,"TabsStore"],[4,"DeviceType"],[3,"TabsEngine"]]},\
"tabs_ffi":{"doc":"","i":[[3,"STORES","tabs_ffi","",null,null],[5,"remote_tabs_new","","",null,[[["externerror",3]],["u64",15]]],[5,"remote_tabs_sync","","",null,[[["externerror",3],["ffistr",3],["u64",15]]]],[5,"remote_tabs_update_local","","SafetyDeref pointer, thus unsafe",null,[[["externerror",3],["ffistr",3],["u64",15]]]],[5,"remote_tabs_get_all","","",null,[[["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"remote_tabs_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"remote_tabs_destroy_bytebuffer","","",null,[[["bytebuffer",3]]]],[5,"remote_tabs_destroy","","",null,[[["externerror",3],["u64",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"deref","","",0,[[],["concurrenthandlemap",3]]],[11,"initialize","","",0,[[]]]],"p":[[3,"STORES"]]},\
"types":{"doc":"","i":[[3,"Timestamp","types","",null,null],[12,"0","","",0,null],[11,"now","","",0,[[]]],[11,"duration_since","","Returns None if <code>other</code> is later than <code>self</code> (Duration may …",0,[[["timestamp",3]],[["option",4],["duration",3]]]],[11,"checked_sub","","",0,[[["duration",3]],[["option",4],["timestamp",3]]]],[11,"as_millis","","",0,[[],["u64",15]]],[18,"EARLIEST","","In desktop sync, bookmarks are clamped to Jan 23, 1993 …",0,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"get_hash","","",0,[[],["u64",15]]],[11,"from","","",0,[[["systemtime",3]]]],[11,"from","","",0,[[["u64",15]]]],[11,"clone","","",0,[[],["timestamp",3]]],[11,"default","","",0,[[],["timestamp",3]]],[11,"cmp","","",0,[[["timestamp",3]],["ordering",4]]],[11,"eq","","",0,[[["timestamp",3]],["bool",15]]],[11,"ne","","",0,[[["timestamp",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["timestamp",3]],["bool",15]]],[11,"le","","",0,[[["timestamp",3]],["bool",15]]],[11,"gt","","",0,[[["timestamp",3]],["bool",15]]],[11,"ge","","",0,[[["timestamp",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"column_result","","",0,[[["valueref",4]],["fromsqlresult",6]]],[11,"to_sql","","",0,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Timestamp"]]},\
"viaduct":{"doc":"","i":[[0,"error","viaduct","",null,null],[4,"Error","viaduct::error","",null,null],[13,"RequestHeaderError","","",0,null],[13,"BackendError","","",0,null],[13,"NetworkError","","",0,null],[13,"BackendNotInitialized","","",0,null],[13,"SetBackendError","","",0,null],[13,"UrlError","","Note: we return this if the server returns a bad URL with …",0,null],[13,"NonTlsUrl","","",0,null],[3,"UnexpectedStatus","","This error is returned as the <code>Err</code> result from […",null,null],[12,"status","","",1,null],[12,"method","","",1,null],[12,"url","","",1,null],[0,"settings","viaduct","",null,null],[3,"Settings","viaduct::settings","Note: reqwest allows these only to be specified …",null,null],[12,"read_timeout","","",2,null],[12,"connect_timeout","","",2,null],[12,"follow_redirects","","",2,null],[12,"use_caches","","",2,null],[7,"GLOBAL_SETTINGS","","",null,null],[0,"header_names","viaduct","",null,null],[17,"ACCEPT_ENCODING","viaduct::header_names","",null,null],[17,"ACCEPT","","",null,null],[17,"AUTHORIZATION","","",null,null],[17,"CONTENT_TYPE","","",null,null],[17,"ETAG","","",null,null],[17,"IF_NONE_MATCH","","",null,null],[17,"USER_AGENT","","",null,null],[17,"RETRY_AFTER","","",null,null],[17,"X_IF_UNMODIFIED_SINCE","","",null,null],[17,"X_KEYID","","",null,null],[17,"X_LAST_MODIFIED","","",null,null],[17,"X_TIMESTAMP","","",null,null],[17,"X_WEAVE_NEXT_OFFSET","","",null,null],[17,"X_WEAVE_RECORDS","","",null,null],[17,"X_WEAVE_TIMESTAMP","","",null,null],[17,"X_WEAVE_BACKOFF","","",null,null],[0,"status_codes","viaduct","A module containing constants for all HTTP status codes.",null,null],[5,"is_success_code","viaduct::status_codes","Is it a 2xx status?",null,[[["u16",15]],["bool",15]]],[5,"is_client_error_code","","Is it a 4xx error?",null,[[["u16",15]],["bool",15]]],[5,"is_server_error_code","","Is it a 5xx error?",null,[[["u16",15]],["bool",15]]],[17,"CONTINUE","","",null,null],[17,"SWITCHING_PROTOCOLS","","",null,null],[17,"OK","","",null,null],[17,"CREATED","","",null,null],[17,"ACCEPTED","","",null,null],[17,"NONAUTHORITATIVE_INFORMATION","","",null,null],[17,"NO_CONTENT","","",null,null],[17,"RESET_CONTENT","","",null,null],[17,"PARTIAL_CONTENT","","",null,null],[17,"MULTIPLE_CHOICES","","",null,null],[17,"MOVED_PERMANENTLY","","",null,null],[17,"FOUND","","",null,null],[17,"SEE_OTHER","","",null,null],[17,"NOT_MODIFIED","","",null,null],[17,"USE_PROXY","","",null,null],[17,"TEMPORARY_REDIRECT","","",null,null],[17,"BAD_REQUEST","","",null,null],[17,"UNAUTHORIZED","","",null,null],[17,"PAYMENT_REQUIRED","","",null,null],[17,"FORBIDDEN","","",null,null],[17,"NOT_FOUND","","",null,null],[17,"METHOD_NOT_ALLOWED","","",null,null],[17,"NOT_ACCEPTABLE","","",null,null],[17,"PROXY_AUTHENTICATION_REQUIRED","","",null,null],[17,"REQUEST_TIMEOUT","","",null,null],[17,"CONFLICT","","",null,null],[17,"GONE","","",null,null],[17,"LENGTH_REQUIRED","","",null,null],[17,"PRECONDITION_FAILED","","",null,null],[17,"REQUEST_ENTITY_TOO_LARGE","","",null,null],[17,"REQUEST_URI_TOO_LONG","","",null,null],[17,"UNSUPPORTED_MEDIA_TYPE","","",null,null],[17,"REQUESTED_RANGE_NOT_SATISFIABLE","","",null,null],[17,"EXPECTATION_FAILED","","",null,null],[17,"TOO_MANY_REQUESTS","","",null,null],[17,"INTERNAL_SERVER_ERROR","","",null,null],[17,"NOT_IMPLEMENTED","","",null,null],[17,"BAD_GATEWAY","","",null,null],[17,"SERVICE_UNAVAILABLE","","",null,null],[17,"GATEWAY_TIMEOUT","","",null,null],[17,"HTTP_VERSION_NOT_SUPPORTED","","",null,null],[5,"note_backend","viaduct","",null,[[["str",15]]]],[5,"set_backend","","",null,[[["backend",8]],[["result",4],["error",4]]]],[8,"Backend","","",null,null],[10,"send","","",3,[[["request",3]],[["error",4],["result",4],["response",3]]]],[3,"Header","","A single header. Headers have a name (case insensitive) …",null,null],[3,"HeaderName","","Represents a header name that we know to be both valid …",null,null],[3,"Headers","","A list of headers.",null,null],[3,"InvalidHeaderName","","Indicates an invalid header name. Note that we only emit …",null,null],[4,"Method","","HTTP Methods.",null,null],[13,"Get","","",4,null],[13,"Head","","",4,null],[13,"Post","","",4,null],[13,"Put","","",4,null],[13,"Delete","","",4,null],[13,"Connect","","",4,null],[13,"Options","","",4,null],[13,"Trace","","",4,null],[11,"as_str","","",4,[[],["str",15]]],[3,"Request","","",null,null],[12,"method","","",5,null],[12,"url","","",5,null],[12,"headers","","",5,null],[12,"body","","",5,null],[11,"new","","Construct a new request to the given <code>url</code> using the given …",5,[[["method",4],["url",3]]]],[11,"send","","",5,[[],[["response",3],["error",4],["result",4]]]],[11,"get","","Alias for <code>Request::new(Method::Get, url)</code>, for convenience.",5,[[["url",3]]]],[11,"post","","Alias for <code>Request::new(Method::Post, url)</code>, for …",5,[[["url",3]]]],[11,"put","","Alias for <code>Request::new(Method::Put, url)</code>, for convenience.",5,[[["url",3]]]],[11,"delete","","Alias for <code>Request::new(Method::Delete, url)</code>, for …",5,[[["url",3]]]],[11,"query","","Append the provided query parameters to the URL",5,[[]]],[11,"set_query","","Set the query string of the URL. Note that …",5,[[["option",4],["into",8]]]],[11,"headers","","Add all the provided headers to the list of headers to …",5,[[]]],[11,"header","","Add the provided header to the list of headers to send …",5,[[],[["error",4],["result",4]]]],[11,"body","","Set this request\'s body.",5,[[]]],[11,"json","","Set body to the result of serializing <code>val</code>, and, unless it …",5,[[]]],[3,"Response","","A response from the server.",null,null],[12,"request_method","","The method used to request this response.",6,null],[12,"url","","The URL of this response.",6,null],[12,"status","","The HTTP Status code of this response.",6,null],[12,"headers","","The headers returned with this response.",6,null],[12,"body","","The body of the response. Note that responses with binary …",6,null],[11,"json","","Parse the body as JSON.",6,[[],[["error",3],["result",4]]]],[11,"text","","Get the body as a string. Assumes UTF-8 encoding. Any …",6,[[],[["cow",4],["str",15]]]],[11,"is_success","","Returns true if the status code is in the interval …",6,[[],["bool",15]]],[11,"is_server_error","","Returns true if the status code is in the interval …",6,[[],["bool",15]]],[11,"is_client_error","","Returns true if the status code is in the interval …",6,[[],["bool",15]]],[11,"require_success","","Returns an [<code>UnexpectedStatus</code>] error if <code>self.is_success()</code> …",6,[[],[["unexpectedstatus",3],["result",4]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","viaduct::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","viaduct::settings","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","viaduct","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"as_ref","","",7,[[],["str",15]]],[11,"as_ref","","",7,[[]]],[11,"from","","",7,[[["str",15]],["headername",3]]],[11,"from","","",7,[[["string",3]],["headername",3]]],[11,"from","","",7,[[["str",15],["cow",4]],["headername",3]]],[11,"from","viaduct::error","",0,[[["parseerror",4]]]],[11,"into_iter","viaduct","",10,[[]]],[11,"clone","","",7,[[],["headername",3]]],[11,"clone","","",8,[[],["invalidheadername",3]]],[11,"clone","","",9,[[],["header",3]]],[11,"clone","","",10,[[],["headers",3]]],[11,"clone","viaduct::error","",1,[[],["unexpectedstatus",3]]],[11,"clone","viaduct","",4,[[],["method",4]]],[11,"clone","","",5,[[],["request",3]]],[11,"clone","","",6,[[],["response",3]]],[11,"default","","",10,[[],["headers",3]]],[11,"cmp","","",7,[[["headername",3]],["ordering",4]]],[11,"cmp","","",9,[[["header",3]],["ordering",4]]],[11,"cmp","","",4,[[["method",4]],["ordering",4]]],[11,"eq","","",7,[[["headername",3]],["bool",15]]],[11,"ne","","",7,[[["headername",3]],["bool",15]]],[11,"eq","","",8,[[["invalidheadername",3]],["bool",15]]],[11,"ne","","",8,[[["invalidheadername",3]],["bool",15]]],[11,"eq","","",7,[[["str",15]],["bool",15]]],[11,"eq","","",7,[[["str",15]],["bool",15]]],[11,"eq","","",7,[[["string",3]],["bool",15]]],[11,"eq","","",7,[[["string",3]],["bool",15]]],[11,"eq","","",7,[[["cow",4]],["bool",15]]],[11,"eq","","",9,[[["header",3]],["bool",15]]],[11,"ne","","",9,[[["header",3]],["bool",15]]],[11,"eq","","",10,[[["headers",3]],["bool",15]]],[11,"ne","","",10,[[["headers",3]],["bool",15]]],[11,"eq","viaduct::error","",1,[[["unexpectedstatus",3]],["bool",15]]],[11,"ne","","",1,[[["unexpectedstatus",3]],["bool",15]]],[11,"eq","viaduct::settings","",2,[[["settings",3]],["bool",15]]],[11,"ne","","",2,[[["settings",3]],["bool",15]]],[11,"eq","viaduct","",4,[[["method",4]],["bool",15]]],[11,"eq","","",5,[[["request",3]],["bool",15]]],[11,"ne","","",5,[[["request",3]],["bool",15]]],[11,"eq","","",6,[[["response",3]],["bool",15]]],[11,"ne","","",6,[[["response",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["headername",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["headername",3]],["bool",15]]],[11,"le","","",7,[[["headername",3]],["bool",15]]],[11,"gt","","",7,[[["headername",3]],["bool",15]]],[11,"ge","","",7,[[["headername",3]],["bool",15]]],[11,"partial_cmp","","",9,[[["header",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["header",3]],["bool",15]]],[11,"le","","",9,[[["header",3]],["bool",15]]],[11,"gt","","",9,[[["header",3]],["bool",15]]],[11,"ge","","",9,[[["header",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["method",4]],[["option",4],["ordering",4]]]],[11,"deref","","",7,[[],["str",15]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::settings","",2,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",4,[[]]],[11,"from_iter","","",10,[[]]],[11,"source","viaduct::error","",0,[[],[["option",4],["error",8]]]],[11,"name","viaduct","",8,[[],["str",15]]],[11,"new","","Create a new header. In general you likely want to use …",7,[[["into",8],["cow",4]],[["result",4],["invalidheadername",3]]]],[11,"as_str","","",7,[[],["str",15]]],[11,"new","","",9,[[],[["error",4],["result",4]]]],[11,"new_unchecked","","",9,[[["headername",3]]]],[11,"name","","",9,[[],["headername",3]]],[11,"value","","",9,[[],["str",15]]],[11,"new","","Initialize an empty list of headers.",10,[[]]],[11,"with_capacity","","Initialize an empty list of headers backed by a vector …",10,[[["usize",15]]]],[11,"into_vec","","Convert this list of headers to a Vec",10,[[],[["vec",3],["header",3]]]],[11,"len","","Returns the number of headers.",10,[[],["usize",15]]],[11,"is_empty","","Returns true if <code>len()</code> is zero.",10,[[],["bool",15]]],[11,"clear","","Clear this set of headers.",10,[[]]],[11,"insert","","Insert or update a new header.",10,[[],[["result",4],["error",4]]]],[11,"insert_if_missing","","Insert the provided header unless a header is already …",10,[[],[["result",4],["error",4]]]],[11,"insert_header","","Insert or update a header directly. Typically you will …",10,[[["header",3]]]],[11,"extend","","Add all the headers in the provided iterator to this list …",10,[[]]],[11,"try_extend","","Add all the headers in the provided iterator, unless any …",10,[[],["result",4]]],[11,"get_header","","Get the header object with the requested name. Usually, …",10,[[],[["header",3],["option",4]]]],[11,"get","","Get the value of the header with the provided name.",10,[[],[["option",4],["str",15]]]],[11,"get_as","","Get the value of the header with the provided name, and …",10,[[],[["option",4],["result",4]]]],[11,"try_get","","Get the value of the header with the provided name, and …",10,[[],["option",4]]],[11,"iter","","Get an iterator over the headers in no particular order.",10,[[]]]],"p":[[4,"Error"],[3,"UnexpectedStatus"],[3,"Settings"],[8,"Backend"],[4,"Method"],[3,"Request"],[3,"Response"],[3,"HeaderName"],[3,"InvalidHeaderName"],[3,"Header"],[3,"Headers"]]},\
"viaduct_reqwest":{"doc":"","i":[[3,"ReqwestBackend","viaduct_reqwest","",null,null],[5,"use_reqwest_backend","","",null,[[]]],[5,"viaduct_detect_reqwest_backend","","A dummy symbol we include so that we can detect whether …",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"send","","",0,[[["request",3]],[["response",3],["error",4],["result",4]]]]],"p":[[3,"ReqwestBackend"]]},\
"webext_storage":{"doc":"","i":[[0,"error","webext_storage","",null,null],[4,"QuotaReason","webext_storage::error","",null,null],[13,"TotalBytes","","",0,null],[13,"ItemBytes","","",0,null],[13,"MaxItems","","",0,null],[4,"ErrorKind","","",null,null],[13,"QuotaError","","",1,null],[13,"JsonError","","",1,null],[13,"SqlError","","",1,null],[13,"ConnectionAlreadyOpen","","",1,null],[13,"InvalidConnectionType","","",1,null],[13,"IoError","","",1,null],[13,"InterruptedError","","",1,null],[13,"WrongApiForClose","","",1,null],[13,"IllegalDatabasePath","","",1,null],[13,"Utf8Error","","",1,null],[13,"DatabaseUpgradeError","","",1,null],[13,"UnsupportedDatabaseVersion","","",1,null],[13,"IncomingPayloadError","","",1,null],[6,"Result","","",null,null],[3,"Error","","",null,null],[11,"kind","","",2,[[],["errorkind",4]]],[11,"backtrace","","",2,[[],[["mutex",3],["option",4]]]],[0,"store","webext_storage","",null,null],[3,"Store","webext_storage::store","A store is used to access <code>storage.sync</code> data. It manages …",null,null],[11,"new","","Creates a store backed by a database at <code>db_path</code>. The path …",3,[[],["result",6]]],[11,"interrupt_handle","","Returns an interrupt handle for this store.",3,[[],["sqlinterrupthandle",3]]],[11,"set","","Sets one or more JSON key-value pairs for an extension …",3,[[["jsonvalue",4],["str",15]],[["storagechanges",3],["result",6]]]],[11,"usage","","Returns information about per-extension usage",3,[[],[["vec",3],["result",6]]]],[11,"get","","Returns the values for one or more keys <code>keys</code> can be:",3,[[["jsonvalue",4],["str",15]],[["result",6],["jsonvalue",4]]]],[11,"remove","","Deletes the values for one or more keys. As with <code>get</code>, <code>keys</code>…",3,[[["jsonvalue",4],["str",15]],[["storagechanges",3],["result",6]]]],[11,"clear","","Deletes all key-value pairs for the extension. As with …",3,[[["str",15]],[["storagechanges",3],["result",6]]]],[11,"get_bytes_in_use","","Returns the bytes in use for the specified items (which …",3,[[["jsonvalue",4],["str",15]],[["usize",15],["result",6]]]],[11,"bridged_engine","","Returns a bridged sync engine for Desktop for this store.",3,[[],["bridgedengine",3]]],[11,"close","","Closes the store and its database connection. See the …",3,[[],["result",4]]],[11,"get_synced_changes","","Gets the changes which the current sync applied. Should …",3,[[],[["result",6],["vec",3]]]],[11,"migrate","","Migrates data from a database in the format of the \\\"old\\\" …",3,[[],["result",6]]],[11,"take_migration_info","","Read-and-delete (e.g. <code>take</code> in rust parlance, see …",3,[[],[["option",4],["result",6]]]],[3,"MigrationInfo","webext_storage","",null,null],[12,"entries","","The number of entries (rows in the original table) we …",4,null],[12,"entries_successful","","The number of records we successfully migrated (equal to …",4,null],[12,"extensions","","The number of extensions (distinct extension ids) in the …",4,null],[12,"extensions_successful","","The number of extensions we successfully migrated",4,null],[12,"open_failure","","True iff we failed to open the source DB at all.",4,null],[17,"STORAGE_VERSION","","",null,null],[17,"SYNC_MAX_ITEMS","","",null,null],[17,"SYNC_QUOTA_BYTES","","",null,null],[17,"SYNC_QUOTA_BYTES_PER_ITEM","","",null,null],[3,"UsageInfo","","Information about the usage of a single extension.",null,null],[12,"ext_id","","The extension id.",5,null],[12,"num_keys","","The number of keys the extension uses.",5,null],[12,"num_bytes","","The number of bytes used by the extension. This result is …",5,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","webext_storage::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","webext_storage","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","webext_storage::store","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","webext_storage::error","",1,[[["error",3]]]],[11,"from","","",1,[[["error",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["interrupted",3]]]],[11,"from","","",1,[[["utf8error",3]]]],[11,"from","","",1,[[["payloaderror",4]]]],[11,"from","","",2,[[["errorkind",4]],["error",3]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",4]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["interrupted",3]]]],[11,"from","","",2,[[["utf8error",3]]]],[11,"from","","",2,[[["payloaderror",4]]]],[11,"clone","webext_storage","",5,[[],["usageinfo",3]]],[11,"clone","","",4,[[],["migrationinfo",3]]],[11,"default","","",4,[[],["migrationinfo",3]]],[11,"eq","","",5,[[["usageinfo",3]],["bool",15]]],[11,"ne","","",5,[[["usageinfo",3]],["bool",15]]],[11,"eq","","",4,[[["migrationinfo",3]],["bool",15]]],[11,"ne","","",4,[[["migrationinfo",3]],["bool",15]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage","",4,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage::error","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"serialize","webext_storage","",4,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]]],"p":[[4,"QuotaReason"],[4,"ErrorKind"],[3,"Error"],[3,"Store"],[3,"MigrationInfo"],[3,"UsageInfo"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);