var searchIndex = JSON.parse('{\
"autofill":{"doc":"","i":[[0,"db","autofill","",null,null],[0,"addresses","autofill::db","",null,null],[5,"add_address","autofill::db::addresses","",null,[[["connection",3],["updatableaddressfields",3]],[["result",6],["internaladdress",3]]]],[5,"add_internal_address","","",null,[[["transaction",3],["internaladdress",3]],["result",6]]],[5,"get_address","","",null,[[["connection",3],["guid",3]],[["result",6],["internaladdress",3]]]],[5,"get_all_addresses","","",null,[[["connection",3]],[["vec",3],["result",6]]]],[5,"update_address","","Updates just the \\\"updatable\\\" columns - suitable for …",null,[[["connection",3],["guid",3],["updatableaddressfields",3]],["result",6]]],[5,"update_internal_address","","Updates all fields including metadata - although the …",null,[[["transaction",3],["internaladdress",3],["bool",15]],["result",6]]],[5,"delete_address","","",null,[[["connection",3],["guid",3]],[["bool",15],["result",6]]]],[5,"touch","","",null,[[["connection",3],["guid",3]],["result",6]]],[0,"credit_cards","autofill::db","",null,null],[5,"add_credit_card","autofill::db::credit_cards","",null,[[["connection",3],["updatablecreditcardfields",3]],[["internalcreditcard",3],["result",6]]]],[5,"add_internal_credit_card","","",null,[[["transaction",3],["internalcreditcard",3]],["result",6]]],[5,"get_credit_card","","",null,[[["connection",3],["guid",3]],[["internalcreditcard",3],["result",6]]]],[5,"get_all_credit_cards","","",null,[[["connection",3]],[["result",6],["vec",3]]]],[5,"update_credit_card","","",null,[[["connection",3],["guid",3],["updatablecreditcardfields",3]],["result",6]]],[5,"update_internal_credit_card","","Updates all fields including metadata - although the …",null,[[["transaction",3],["bool",15],["internalcreditcard",3]],["result",6]]],[5,"delete_credit_card","","",null,[[["connection",3],["guid",3]],[["bool",15],["result",6]]]],[5,"touch","","",null,[[["connection",3],["guid",3]],["result",6]]],[0,"models","autofill::db","",null,null],[0,"address","autofill::db::models","",null,null],[3,"UpdatableAddressFields","autofill::db::models::address","",null,null],[12,"given_name","","",0,null],[12,"additional_name","","",0,null],[12,"family_name","","",0,null],[12,"organization","","",0,null],[12,"street_address","","",0,null],[12,"address_level3","","",0,null],[12,"address_level2","","",0,null],[12,"address_level1","","",0,null],[12,"postal_code","","",0,null],[12,"country","","",0,null],[12,"tel","","",0,null],[12,"email","","",0,null],[3,"Address","","",null,null],[12,"guid","","",1,null],[12,"given_name","","",1,null],[12,"additional_name","","",1,null],[12,"family_name","","",1,null],[12,"organization","","",1,null],[12,"street_address","","",1,null],[12,"address_level3","","",1,null],[12,"address_level2","","",1,null],[12,"address_level1","","",1,null],[12,"postal_code","","",1,null],[12,"country","","",1,null],[12,"tel","","",1,null],[12,"email","","",1,null],[12,"time_created","","",1,null],[12,"time_last_used","","",1,null],[12,"time_last_modified","","",1,null],[12,"times_used","","",1,null],[3,"InternalAddress","","",null,null],[12,"guid","","",2,null],[12,"given_name","","",2,null],[12,"additional_name","","",2,null],[12,"family_name","","",2,null],[12,"organization","","",2,null],[12,"street_address","","",2,null],[12,"address_level3","","",2,null],[12,"address_level2","","",2,null],[12,"address_level1","","",2,null],[12,"postal_code","","",2,null],[12,"country","","",2,null],[12,"tel","","",2,null],[12,"email","","",2,null],[12,"metadata","","",2,null],[11,"from_row","","",2,[[["row",3]],[["error",4],["result",4],["internaladdress",3]]]],[0,"credit_card","autofill::db::models","",null,null],[3,"UpdatableCreditCardFields","autofill::db::models::credit_card","",null,null],[12,"cc_name","","",3,null],[12,"cc_number_enc","","",3,null],[12,"cc_number_last_4","","",3,null],[12,"cc_exp_month","","",3,null],[12,"cc_exp_year","","",3,null],[12,"cc_type","","",3,null],[3,"CreditCard","","",null,null],[12,"guid","","",4,null],[12,"cc_name","","",4,null],[12,"cc_number_enc","","",4,null],[12,"cc_number_last_4","","",4,null],[12,"cc_exp_month","","",4,null],[12,"cc_exp_year","","",4,null],[12,"cc_type","","",4,null],[12,"time_created","","",4,null],[12,"time_last_used","","",4,null],[12,"time_last_modified","","",4,null],[12,"times_used","","",4,null],[3,"InternalCreditCard","","",null,null],[12,"guid","","",5,null],[12,"cc_name","","",5,null],[12,"cc_number_enc","","",5,null],[12,"cc_number_last_4","","",5,null],[12,"cc_exp_month","","",5,null],[12,"cc_exp_year","","",5,null],[12,"cc_type","","",5,null],[12,"metadata","","",5,null],[11,"from_row","","",5,[[["row",3]],[["internalcreditcard",3],["result",4],["error",4]]]],[3,"Metadata","autofill::db::models","Metadata that\'s common between the records.",null,null],[12,"time_created","","",6,null],[12,"time_last_used","","",6,null],[12,"time_last_modified","","",6,null],[12,"times_used","","",6,null],[12,"sync_change_counter","","",6,null],[0,"schema","autofill::db","",null,null],[17,"ADDRESS_COMMON_COLS","autofill::db::schema","",null,null],[17,"ADDRESS_COMMON_VALS","","",null,null],[17,"CREDIT_CARD_COMMON_COLS","","",null,null],[17,"CREDIT_CARD_COMMON_VALS","","",null,null],[17,"CREATE_SHARED_SCHEMA_SQL","","",null,null],[17,"CREATE_SHARED_TRIGGERS_SQL","","",null,null],[17,"CREATE_SYNC_TEMP_TABLES_SQL","","",null,null],[5,"init","","",null,[[["connection",3]],["result",6]]],[5,"create","","",null,[[["connection",3]],["result",6]]],[5,"create_empty_sync_temp_tables","","",null,[[["connection",3]],["result",6]]],[0,"store","autofill::db","",null,null],[3,"STORE_FOR_MANAGER","autofill::db::store","",null,null],[12,"__private_field","","",7,null],[3,"Store","","",null,null],[12,"store_impl","","",8,null],[11,"new","","",8,[[],["result",6]]],[11,"add_credit_card","","",8,[[["updatablecreditcardfields",3]],[["creditcard",3],["result",6]]]],[11,"get_credit_card","","",8,[[["string",3]],[["creditcard",3],["result",6]]]],[11,"get_all_credit_cards","","",8,[[],[["result",6],["vec",3]]]],[11,"update_credit_card","","",8,[[["updatablecreditcardfields",3],["string",3]],["result",6]]],[11,"delete_credit_card","","",8,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_credit_card","","",8,[[["string",3]],["result",6]]],[11,"add_address","","",8,[[["updatableaddressfields",3]],[["result",6],["address",3]]]],[11,"get_address","","",8,[[["string",3]],[["result",6],["address",3]]]],[11,"get_all_addresses","","",8,[[],[["vec",3],["result",6]]]],[11,"update_address","","",8,[[["updatableaddressfields",3],["string",3]],["result",6]]],[11,"delete_address","","",8,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_address","","",8,[[["string",3]],["result",6]]],[11,"register_with_sync_manager","","",8,[[]]],[11,"create_credit_cards_sync_engine","","",8,[[],[["box",3],["syncengine",8]]]],[11,"create_addresses_sync_engine","","",8,[[],[["box",3],["syncengine",8]]]],[3,"StoreImpl","","",null,null],[12,"db","","",9,null],[11,"new","","",9,[[],["result",6]]],[11,"add_credit_card","","",9,[[["updatablecreditcardfields",3]],[["creditcard",3],["result",6]]]],[11,"get_credit_card","","",9,[[["string",3]],[["creditcard",3],["result",6]]]],[11,"get_all_credit_cards","","",9,[[],[["result",6],["vec",3]]]],[11,"update_credit_card","","",9,[[["updatablecreditcardfields",3],["string",3]],["result",6]]],[11,"delete_credit_card","","",9,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_credit_card","","",9,[[["string",3]],["result",6]]],[11,"add_address","","",9,[[["updatableaddressfields",3]],[["result",6],["address",3]]]],[11,"get_address","","",9,[[["string",3]],[["result",6],["address",3]]]],[11,"get_all_addresses","","",9,[[],[["vec",3],["result",6]]]],[11,"update_address","","",9,[[["updatableaddressfields",3],["string",3]],["result",6]]],[11,"delete_address","","",9,[[["string",3]],[["bool",15],["result",6]]]],[11,"touch_address","","",9,[[["string",3]],["result",6]]],[5,"put_meta","","",null,[[["connection",3],["tosql",8],["str",15]],["result",6]]],[5,"get_meta","","",null,[[["connection",3],["str",15]],[["result",6],["option",4]]]],[5,"delete_meta","","",null,[[["connection",3],["str",15]],["result",6]]],[0,"sql_fns","autofill::db","",null,null],[5,"generate_guid","autofill::db::sql_fns","",null,[[["context",3]],[["syncguid",3],["result",6]]]],[5,"now","","",null,[[["context",3]],[["result",6],["timestamp",3]]]],[3,"AutofillDb","autofill::db","",null,null],[12,"writer","","",10,null],[12,"interrupt_counter","","",10,null],[11,"new","","",10,[[],["result",6]]],[11,"new_named","","",10,[[["pathbuf",3]],["result",6]]],[11,"begin_interrupt_scope","","",10,[[],["sqlinterruptscope",3]]],[5,"init_sql_connection","","",null,[[["connection",3],["bool",15]],["result",6]]],[5,"unurl_path","","",null,[[],["pathbuf",3]]],[5,"normalize_path","","",null,[[],[["pathbuf",3],["result",6]]]],[5,"define_functions","","",null,[[["connection",3]],["result",6]]],[0,"encryption","autofill","",null,null],[3,"EncryptorDecryptor","autofill::encryption","",null,null],[12,"jwk","","",11,null],[11,"new","","",11,[[["str",15]],["result",6]]],[11,"encrypt","","",11,[[["str",15]],[["result",6],["string",3]]]],[11,"decrypt","","",11,[[["str",15]],[["result",6],["string",3]]]],[5,"encrypt_string","","",null,[[["string",3]],[["result",6],["string",3]]]],[5,"decrypt_string","","",null,[[["string",3]],[["result",6],["string",3]]]],[5,"create_key","","",null,[[],[["result",6],["string",3]]]],[0,"error","autofill","",null,null],[4,"Error","autofill::error","",null,null],[13,"SqlError","","",12,null],[13,"IoError","","",12,null],[13,"InterruptedError","","",12,null],[13,"IllegalDatabasePath","","",12,null],[13,"Utf8Error","","",12,null],[13,"JsonError","","",12,null],[13,"InvalidSyncPayload","","",12,null],[13,"CryptoError","","",12,null],[13,"MissingEncryptionKey","","",12,null],[6,"Result","","",null,null],[0,"sync","autofill","",null,null],[0,"address","autofill::sync","",null,null],[0,"incoming","autofill::sync::address","",null,null],[3,"IncomingAddressesImpl","autofill::sync::address::incoming","",null,null],[0,"outgoing","autofill::sync::address","",null,null],[17,"DATA_TABLE_NAME","autofill::sync::address::outgoing","",null,null],[17,"MIRROR_TABLE_NAME","","",null,null],[17,"STAGING_TABLE_NAME","","",null,null],[3,"OutgoingAddressesImpl","","",null,null],[5,"create_engine","autofill::sync::address","",null,[[["arc",3],["storeimpl",3]],[["internaladdress",3],["configsyncengine",3]]]],[3,"AddressesEngineStorageImpl","","",null,null],[3,"AddressPayload","","",null,null],[12,"id","","",13,null],[12,"entry","","",13,null],[3,"PayloadEntry","","",null,null],[12,"given_name","","",14,null],[12,"additional_name","","",14,null],[12,"family_name","","",14,null],[12,"organization","","",14,null],[12,"street_address","","",14,null],[12,"address_level3","","",14,null],[12,"address_level2","","",14,null],[12,"address_level1","","",14,null],[12,"postal_code","","",14,null],[12,"country","","",14,null],[12,"tel","","",14,null],[12,"email","","",14,null],[12,"time_created","","",14,null],[12,"time_last_used","","",14,null],[12,"time_last_modified","","",14,null],[12,"times_used","","",14,null],[12,"version","","",14,null],[11,"from_payload","autofill::db::models::address","",2,[[["payload",3]],["result",6]]],[11,"into_payload","","",2,[[],[["payload",3],["result",6]]]],[5,"get_forked_record","autofill::sync::address","Returns a with the given local record\'s data but with a …",null,[[["internaladdress",3]],["internaladdress",3]]],[0,"common","autofill::sync","",null,null],[5,"common_stage_incoming_records","autofill::sync::common","Stages incoming records (excluding incoming tombstones) …",null,[[["connection",3],["vec",3],["interruptee",8],["str",15]],["result",6]]],[5,"common_remove_record","","",null,[[["connection",3],["guid",3],["str",15]],["result",6]]],[5,"common_change_guid","","",null,[[["connection",3],["guid",3],["str",15]],["result",6]]],[5,"common_mirror_staged_records","","Records in the incoming staging table need to end up in …",null,[[["connection",3],["str",15]],["result",6]]],[5,"common_get_outgoing_staging_records","","",null,[[["connection",3],["fn",8],["str",15]],[["vec",3],["result",6]]]],[5,"get_outgoing_records","","",null,[[["connection",3],["fn",8],["str",15]],[["vec",3],["result",6]]]],[5,"common_get_outgoing_records","","",null,[[["connection",3],["fn",8],["str",15]],[["vec",3],["result",6]]]],[5,"common_save_outgoing_records","","",null,[[["connection",3],["vec",3],["str",15]],["result",6]]],[5,"common_finish_synced_items","","",null,[[["connection",3],["vec",3],["guid",3],["str",15]],["result",6]]],[5,"reset_sync_change_counter","","",null,[[["connection",3],["vec",3],["guid",3],["str",15]],["result",6]]],[0,"credit_card","autofill::sync","",null,null],[0,"incoming","autofill::sync::credit_card","",null,null],[3,"IncomingCreditCardsImpl","autofill::sync::credit_card::incoming","",null,null],[12,"encdec","","",15,null],[0,"outgoing","autofill::sync::credit_card","",null,null],[17,"DATA_TABLE_NAME","autofill::sync::credit_card::outgoing","",null,null],[17,"MIRROR_TABLE_NAME","","",null,null],[17,"STAGING_TABLE_NAME","","",null,null],[3,"OutgoingCreditCardsImpl","","",null,null],[12,"encdec","","",16,null],[5,"create_engine","autofill::sync::credit_card","",null,[[["arc",3],["storeimpl",3]],[["internalcreditcard",3],["configsyncengine",3]]]],[3,"CreditCardsEngineStorageImpl","","",null,null],[3,"CreditCardPayload","","",null,null],[12,"id","","",17,null],[12,"entry","","",17,null],[3,"PayloadEntry","","",null,null],[12,"cc_name","","",18,null],[12,"cc_number","","",18,null],[12,"cc_exp_month","","",18,null],[12,"cc_exp_year","","",18,null],[12,"cc_type","","",18,null],[12,"time_created","","",18,null],[12,"time_last_used","","",18,null],[12,"time_last_modified","","",18,null],[12,"times_used","","",18,null],[12,"version","","",18,null],[11,"from_payload","autofill::db::models::credit_card","",5,[[["encryptordecryptor",3],["payload",3]],["result",6]]],[11,"into_payload","","",5,[[["encryptordecryptor",3]],[["payload",3],["result",6]]]],[5,"get_forked_record","autofill::sync::credit_card","Returns a with the given local record\'s data but with a …",null,[[["internalcreditcard",3]],["internalcreditcard",3]]],[5,"get_last_4","","",null,[[["str",15]],["string",3]]],[0,"engine","autofill::sync","",null,null],[3,"EngineConfig","autofill::sync::engine","",null,null],[12,"namespace","","",19,null],[12,"collection","","",19,null],[17,"LAST_SYNC_META_KEY","","",null,null],[17,"GLOBAL_SYNCID_META_KEY","","",null,null],[17,"COLLECTION_SYNCID_META_KEY","","",null,null],[8,"SyncEngineStorageImpl","","",null,null],[10,"get_incoming_impl","","",20,[[["option",4]],[["result",6],["box",3]]]],[10,"reset_storage","","",20,[[["transaction",3]],["result",6]]],[10,"get_outgoing_impl","","",20,[[["option",4]],[["box",3],["result",6]]]],[3,"ConfigSyncEngine","","",null,null],[12,"config","","",21,null],[12,"store","","",21,null],[12,"storage_impl","","",21,null],[12,"local_enc_key","","",21,null],[11,"new","","",21,[[["engineconfig",3],["arc",3],["box",3],["syncenginestorageimpl",8],["store",3]]]],[11,"put_meta","","",21,[[["connection",3],["tosql",8],["str",15]],["result",6]]],[11,"get_meta","","",21,[[["connection",3],["str",15]],[["result",6],["option",4]]]],[11,"delete_meta","","",21,[[["connection",3],["str",15]],["result",6]]],[3,"PersistablePayload","autofill::sync","",null,null],[12,"guid","","",22,null],[12,"payload","","",22,null],[8,"ProcessIncomingRecordImpl","","",null,null],[16,"Record","","",23,null],[10,"stage_incoming","","",23,[[["transaction",3],["vec",3],["interruptee",8]],["result",6]]],[10,"finish_incoming","","Finish the incoming phase. This will typically caused …",23,[[["transaction",3]],["result",6]]],[10,"fetch_incoming_states","","",23,[[["transaction",3]],[["result",6],["vec",3]]]],[10,"get_local_dupe","","Returns a local record that has the same values as the …",23,[[["transaction",3]],[["result",6],["option",4]]]],[10,"update_local_record","","",23,[[["transaction",3],["bool",15]],["result",6]]],[10,"insert_local_record","","",23,[[["transaction",3]],["result",6]]],[10,"change_local_guid","","",23,[[["transaction",3],["guid",3]],["result",6]]],[10,"remove_record","","",23,[[["transaction",3],["guid",3]],["result",6]]],[10,"remove_tombstone","","",23,[[["transaction",3],["guid",3]],["result",6]]],[8,"ProcessOutgoingRecordImpl","","",null,null],[16,"Record","","",24,null],[10,"fetch_outgoing_records","","",24,[[["transaction",3],["servertimestamp",3],["string",3]],[["result",6],["outgoingchangeset",6]]]],[10,"finish_synced_items","","",24,[[["transaction",3],["vec",3],["guid",3]],["result",6]]],[8,"SyncRecord","","",null,null],[10,"record_name","","",25,[[],["str",15]]],[10,"id","","",25,[[],["guid",3]]],[10,"metadata","","",25,[[],["metadata",3]]],[10,"metadata_mut","","",25,[[],["metadata",3]]],[10,"merge","","",25,[[["option",4]],["mergeresult",4]]],[11,"merge","autofill::db::models","Merge the metadata from <code>other</code>, and possibly <code>mirror</code>, into …",6,[[["metadata",3],["option",4]]]],[4,"IncomingRecord","autofill::sync","",null,null],[13,"Record","","",26,null],[12,"record","autofill::sync::IncomingRecord","",27,null],[13,"Tombstone","autofill::sync","",26,null],[12,"guid","autofill::sync::IncomingRecord","",28,null],[4,"LocalRecordInfo","autofill::sync","",null,null],[13,"Unmodified","","",29,null],[12,"record","autofill::sync::LocalRecordInfo","",30,null],[13,"Modified","autofill::sync","",29,null],[12,"record","autofill::sync::LocalRecordInfo","",31,null],[13,"Tombstone","autofill::sync","",29,null],[12,"guid","autofill::sync::LocalRecordInfo","",32,null],[13,"Missing","autofill::sync","",29,null],[4,"MergeResult","","",null,null],[13,"Merged","","",33,null],[12,"merged","autofill::sync::MergeResult","",34,null],[13,"Forked","autofill::sync","",33,null],[12,"forked","autofill::sync::MergeResult","",35,null],[3,"IncomingState","autofill::sync","",null,null],[12,"incoming","","",36,null],[12,"local","","",36,null],[12,"mirror","","",36,null],[4,"IncomingAction","","The distinct incoming sync actions to be performed for …",null,null],[13,"DeleteLocalRecord","","",37,null],[12,"guid","autofill::sync::IncomingAction","",38,null],[13,"Insert","autofill::sync","",37,null],[12,"record","autofill::sync::IncomingAction","",39,null],[13,"Update","autofill::sync","",37,null],[12,"record","autofill::sync::IncomingAction","",40,null],[12,"was_merged","","",40,null],[13,"Fork","autofill::sync","",37,null],[12,"forked","autofill::sync::IncomingAction","",41,null],[12,"incoming","","",41,null],[13,"UpdateLocalGuid","autofill::sync","",37,null],[12,"old_guid","autofill::sync::IncomingAction","",42,null],[12,"record","","",42,null],[13,"ResurrectRemoteTombstone","autofill::sync","",37,null],[12,"record","autofill::sync::IncomingAction","",43,null],[13,"ResurrectLocalTombstone","autofill::sync","",37,null],[12,"record","autofill::sync::IncomingAction","",44,null],[13,"DoNothing","autofill::sync","",37,null],[5,"plan_incoming","","Convert a IncomingState to an IncomingAction - this is …",null,[[["transaction",3],["incomingstate",3],["processincomingrecordimpl",8],["debug",8],["syncrecord",8]],[["result",6],["incomingaction",4]]]],[5,"apply_incoming_action","","Apply the incoming action",null,[[["transaction",3],["processincomingrecordimpl",8],["debug",8],["syncrecord",8],["incomingaction",4]],["result",6]]],[14,"sync_merge_field_check","autofill","",null,null],[11,"from","autofill::db::models::address","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"get_hash","","",1,[[],["u64",15]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","autofill::db::models::credit_card","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","autofill::db::models","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","autofill::db::store","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","autofill::db","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","autofill::encryption","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","autofill::error","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","autofill::sync::address::incoming","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","autofill::sync::address::outgoing","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","autofill::sync::address","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","autofill::sync::credit_card::incoming","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","autofill::sync::credit_card::outgoing","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","autofill::sync::credit_card","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","autofill::sync::engine","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","autofill::sync","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"get_incoming_impl","autofill::sync::address","",47,[[["option",4]],[["box",3],["result",6]]]],[11,"reset_storage","","",47,[[["transaction",3]],["result",6]]],[11,"get_outgoing_impl","","",47,[[["option",4]],[["box",3],["result",6]]]],[11,"get_incoming_impl","autofill::sync::credit_card","",48,[[["option",4]],[["box",3],["result",6]]]],[11,"reset_storage","","",48,[[["transaction",3]],["result",6]]],[11,"get_outgoing_impl","","",48,[[["option",4]],[["result",6],["box",3]]]],[11,"stage_incoming","autofill::sync::address::incoming","The first step in the \\\"apply incoming\\\" process - stage …",45,[[["transaction",3],["vec",3],["interruptee",8]],["result",6]]],[11,"finish_incoming","","",45,[[["transaction",3]],["result",6]]],[11,"fetch_incoming_states","","The second step in the \\\"apply incoming\\\" process for …",45,[[["transaction",3]],[["result",6],["vec",3]]]],[11,"get_local_dupe","","Returns a local record that has the same values as the …",45,[[["transaction",3]],[["result",6],["option",4]]]],[11,"update_local_record","","",45,[[["transaction",3],["bool",15]],["result",6]]],[11,"insert_local_record","","",45,[[["transaction",3]],["result",6]]],[11,"change_local_guid","","Changes the guid of the local record for the given …",45,[[["transaction",3],["syncguid",3]],["result",6]]],[11,"remove_record","","",45,[[["transaction",3],["syncguid",3]],["result",6]]],[11,"remove_tombstone","","",45,[[["transaction",3],["syncguid",3]],["result",6]]],[11,"stage_incoming","autofill::sync::credit_card::incoming","The first step in the \\\"apply incoming\\\" process - stage …",15,[[["transaction",3],["vec",3],["interruptee",8]],["result",6]]],[11,"finish_incoming","","",15,[[["transaction",3]],["result",6]]],[11,"fetch_incoming_states","","The second step in the \\\"apply incoming\\\" process for …",15,[[["transaction",3]],[["result",6],["vec",3]]]],[11,"get_local_dupe","","Returns a local record that has the same values as the …",15,[[["transaction",3]],[["result",6],["option",4]]]],[11,"update_local_record","","",15,[[["transaction",3],["bool",15]],["result",6]]],[11,"insert_local_record","","",15,[[["transaction",3]],["result",6]]],[11,"change_local_guid","","Changes the guid of the local record for the given …",15,[[["transaction",3],["syncguid",3]],["result",6]]],[11,"remove_record","","",15,[[["transaction",3],["syncguid",3]],["result",6]]],[11,"remove_tombstone","","",15,[[["transaction",3],["syncguid",3]],["result",6]]],[11,"fetch_outgoing_records","autofill::sync::address::outgoing","Gets the local records that have unsynced changes or …",46,[[["transaction",3],["servertimestamp",3],["string",3]],[["result",6],["outgoingchangeset",6]]]],[11,"finish_synced_items","","",46,[[["transaction",3],["vec",3],["syncguid",3]],["result",6]]],[11,"fetch_outgoing_records","autofill::sync::credit_card::outgoing","Gets the local records that have unsynced changes or …",16,[[["transaction",3],["servertimestamp",3],["string",3]],[["result",6],["outgoingchangeset",6]]]],[11,"finish_synced_items","","",16,[[["transaction",3],["vec",3],["syncguid",3]],["result",6]]],[11,"record_name","autofill::db::models::address","",2,[[],["str",15]]],[11,"id","","",2,[[],["guid",3]]],[11,"metadata","","",2,[[],["metadata",3]]],[11,"metadata_mut","","",2,[[],["metadata",3]]],[11,"merge","","Performs a three-way merge between an incoming, local, …",2,[[["option",4]],["mergeresult",4]]],[11,"record_name","autofill::db::models::credit_card","",5,[[],["str",15]]],[11,"id","","",5,[[],["guid",3]]],[11,"metadata","","",5,[[],["metadata",3]]],[11,"metadata_mut","","",5,[[],["metadata",3]]],[11,"merge","","Performs a three-way merge between an incoming, local, …",5,[[["option",4]],["mergeresult",4]]],[11,"from","autofill::db::models::address","",1,[[["internaladdress",3]]]],[11,"from","autofill::db::models::credit_card","",4,[[["internalcreditcard",3]]]],[11,"from","autofill::error","",12,[[["error",4]]]],[11,"from","","",12,[[["error",3]]]],[11,"from","","",12,[[["interrupted",3]]]],[11,"from","","",12,[[["utf8error",3]]]],[11,"from","","",12,[[["error",3]]]],[11,"from","","",12,[[["jwcryptoerror",4]]]],[11,"clone","autofill::db::models::address","",0,[[],["updatableaddressfields",3]]],[11,"clone","","",1,[[],["address",3]]],[11,"clone","","",2,[[],["internaladdress",3]]],[11,"clone","autofill::db::models::credit_card","",3,[[],["updatablecreditcardfields",3]]],[11,"clone","","",4,[[],["creditcard",3]]],[11,"clone","","",5,[[],["internalcreditcard",3]]],[11,"clone","autofill::db::models","",6,[[],["metadata",3]]],[11,"default","autofill::db::models::address","",0,[[],["updatableaddressfields",3]]],[11,"default","","",1,[[],["address",3]]],[11,"default","","",2,[[],["internaladdress",3]]],[11,"default","autofill::db::models::credit_card","",3,[[],["updatablecreditcardfields",3]]],[11,"default","","",4,[[],["creditcard",3]]],[11,"default","","",5,[[],["internalcreditcard",3]]],[11,"default","autofill::db::models","",6,[[],["metadata",3]]],[11,"default","autofill::sync::address","",13,[[],["addresspayload",3]]],[11,"default","","",14,[[],["payloadentry",3]]],[11,"default","autofill::sync::credit_card","",17,[[],["creditcardpayload",3]]],[11,"default","","",18,[[],["payloadentry",3]]],[11,"eq","autofill::db::models::address","",1,[[["address",3]],["bool",15]]],[11,"ne","","",1,[[["address",3]],["bool",15]]],[11,"eq","autofill::db::models","",6,[[["metadata",3]],["bool",15]]],[11,"ne","","",6,[[["metadata",3]],["bool",15]]],[11,"eq","autofill::sync","",37,[[["incomingaction",4]],["bool",15]]],[11,"ne","","",37,[[["incomingaction",4]],["bool",15]]],[11,"deref","autofill::db::store","",7,[[],["mutex",3]]],[11,"deref","autofill::db","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"fmt","autofill::db::models::address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::db::models::credit_card","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::db::models","",6,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::sync::credit_card","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::sync","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","autofill::error","",12,[[["formatter",3]],["result",6]]],[11,"hash","autofill::db::models::address","",1,[[]]],[11,"source","autofill::error","",12,[[],[["option",4],["error",8]]]],[11,"serialize","autofill::sync::address","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","autofill::sync::credit_card","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"deserialize","autofill::sync::address","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","autofill::sync::credit_card","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"initialize","autofill::db::store","",7,[[]]],[11,"collection_name","autofill::sync::engine","",21,[[],[["cow",4],["str",15]]]],[11,"set_local_encryption_key","","",21,[[["str",15]],["result",6]]],[11,"apply_incoming","","",21,[[["incomingchangeset",6],["vec",3],["engine",3]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",21,[[["servertimestamp",3],["vec",3],["guid",3]],["result",6]]],[11,"get_collection_requests","","",21,[[["servertimestamp",3]],[["result",6],["vec",3]]]],[11,"get_sync_assoc","","",21,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",21,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",21,[[],["result",6]]],[11,"from_cc_payload","autofill::sync","",22,[[["encryptordecryptor",3],["payload",3]],["result",6]]],[11,"make_cc_payload","","",22,[[["encryptordecryptor",3],["str",15]],[["payload",3],["result",6]]]]],"p":[[3,"UpdatableAddressFields"],[3,"Address"],[3,"InternalAddress"],[3,"UpdatableCreditCardFields"],[3,"CreditCard"],[3,"InternalCreditCard"],[3,"Metadata"],[3,"STORE_FOR_MANAGER"],[3,"Store"],[3,"StoreImpl"],[3,"AutofillDb"],[3,"EncryptorDecryptor"],[4,"Error"],[3,"AddressPayload"],[3,"PayloadEntry"],[3,"IncomingCreditCardsImpl"],[3,"OutgoingCreditCardsImpl"],[3,"CreditCardPayload"],[3,"PayloadEntry"],[3,"EngineConfig"],[8,"SyncEngineStorageImpl"],[3,"ConfigSyncEngine"],[3,"PersistablePayload"],[8,"ProcessIncomingRecordImpl"],[8,"ProcessOutgoingRecordImpl"],[8,"SyncRecord"],[4,"IncomingRecord"],[13,"Record"],[13,"Tombstone"],[4,"LocalRecordInfo"],[13,"Unmodified"],[13,"Modified"],[13,"Tombstone"],[4,"MergeResult"],[13,"Merged"],[13,"Forked"],[3,"IncomingState"],[4,"IncomingAction"],[13,"DeleteLocalRecord"],[13,"Insert"],[13,"Update"],[13,"Fork"],[13,"UpdateLocalGuid"],[13,"ResurrectRemoteTombstone"],[13,"ResurrectLocalTombstone"],[3,"IncomingAddressesImpl"],[3,"OutgoingAddressesImpl"],[3,"AddressesEngineStorageImpl"],[3,"CreditCardsEngineStorageImpl"]]},\
"cli_support":{"doc":"","i":[[0,"fxa_creds","cli_support","",null,null],[17,"CLIENT_ID","cli_support::fxa_creds","",null,null],[17,"REDIRECT_URI","","",null,null],[17,"SYNC_SCOPE","","",null,null],[5,"load_fxa_creds","","",null,[[["str",15]],[["result",6],["firefoxaccount",3]]]],[5,"load_or_create_fxa_creds","","",null,[[["config",3],["str",15]],[["result",6],["firefoxaccount",3]]]],[5,"create_fxa_creds","","",null,[[["config",3],["str",15]],[["result",6],["firefoxaccount",3]]]],[5,"get_default_fxa_config","","",null,[[],["config",3]]],[5,"get_account_and_token","","",null,[[["config",3],["str",15]],["result",6]]],[5,"get_cli_fxa","","",null,[[["config",3],["str",15]],[["result",6],["clifxa",3]]]],[3,"CliFxa","","",null,null],[12,"account","","",0,null],[12,"client_init","","",0,null],[12,"tokenserver_url","","",0,null],[12,"root_sync_key","","",0,null],[0,"prompt","cli_support","",null,null],[5,"prompt_string","cli_support::prompt","",null,[[["asref",8],["str",15]],[["option",4],["string",3]]]],[5,"prompt_char","","",null,[[["str",15]],[["char",15],["option",4]]]],[5,"prompt_usize","","",null,[[["asref",8],["str",15]],[["usize",15],["option",4]]]],[5,"init_logging_with","cli_support","",null,[[["str",15]]]],[5,"init_trace_logging","","",null,[[]]],[5,"init_logging","","",null,[[]]],[11,"from","cli_support::fxa_creds","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]]],"p":[[3,"CliFxa"]]},\
"crashtest":{"doc":"Crash Test Helper APIsThe <code>crashtest</code> component offers a …","i":[[5,"trigger_rust_abort","crashtest","Trigger a hard abort inside the Rust code.",null,[[]]],[5,"trigger_rust_panic","","Trigger a panic inside the Rust code.",null,[[]]],[5,"trigger_rust_error","","Trigger an error inside the Rust code.",null,[[],[["crashtesterror",4],["result",4]]]],[4,"CrashTestError","","An error that can be returned from Rust code.",null,null],[13,"ErrorFromTheRustCode","","",0,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"CrashTestError"]]},\
"embedded_uniffi_bindgen":{"doc":"","i":[[5,"main","embedded_uniffi_bindgen","",null,[[],["result",6]]]],"p":[]},\
"error_support":{"doc":"","i":[[0,"backtrace","error_support","A compatibility shim for <code>backtrace</code>.",null,null],[3,"Backtrace","error_support::backtrace","",null,null],[14,"define_error_wrapper","error_support","Define a wrapper around the the provided ErrorKind type. …",null,null],[14,"define_error_conversions","","Define a set of conversions from external error types …",null,null],[14,"define_error","","All the error boilerplate (okay, with a couple exceptions …",null,null],[11,"from","error_support::backtrace","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Backtrace"]]},\
"ffi_support":{"doc":"FFI SupportThis crate implements a support library to …","i":[[0,"error","ffi_support","",null,null],[3,"ExternError","ffi_support::error","Represents an error that occured within rust, storing …",null,null],[12,"code","","",0,null],[12,"message","","",0,null],[11,"new_error","","Construct an ExternError representing failure from a code …",0,[[["errorcode",3]]]],[11,"success","","Returns a ExternError representing a success. Also …",0,[[]]],[11,"consume_and_log_if_error","","Helper for the case where we aren\'t exposing this back …",0,[[]]],[11,"get_code","","Get the <code>code</code> property.",0,[[],["errorcode",3]]],[11,"get_raw_message","","Get the <code>message</code> property as a pointer to c_char.",0,[[]]],[11,"get_message","","Get the <code>message</code> property as an [<code>FfiStr</code>]",0,[[],["ffistr",3]]],[11,"get_and_consume_message","","Get the <code>message</code> property as a String, or None if this is …",0,[[],[["string",3],["option",4]]]],[11,"manually_release","","Manually release the memory behind this string. You …",0,[[]]],[3,"ErrorCode","","A wrapper around error codes, which is represented …",null,null],[12,"0","","",1,null],[18,"SUCCESS","","The ErrorCode used for success.",1,null],[18,"PANIC","","The ErrorCode used for panics. It\'s unlikely you need to …",1,null],[18,"INVALID_HANDLE","","The ErrorCode used for handle map errors.",1,null],[11,"new","","Construct an error code from an integer code.",1,[[["i32",15]]]],[11,"code","","Get the raw numeric value of this ErrorCode.",1,[[],["i32",15]]],[11,"is_success","","Returns whether or not this is a success code.",1,[[],["bool",15]]],[0,"ffistr","ffi_support","",null,null],[3,"FfiStr","ffi_support::ffistr","<code>FfiStr<\'a></code> is a safe (<code>#[repr(transparent)]</code>) wrapper …",null,null],[12,"cstr","","",2,null],[12,"_boo","","",2,null],[11,"from_raw","","Construct an <code>FfiStr</code> from a raw pointer.",2,[[]]],[11,"from_cstr","","Construct a FfiStr from a <code>std::ffi::CStr</code>. This is …",2,[[["cstr",3]]]],[11,"as_str","","Get an <code>&str</code> out of the <code>FfiStr</code>. This will panic in any …",2,[[],["str",15]]],[11,"as_opt_str","","Get an <code>Option<&str></code> out of the <code>FfiStr</code>. If this stores a …",2,[[],[["option",4],["str",15]]]],[11,"into_opt_string","","Get an <code>Option<String></code> out of the <code>FfiStr</code>. Returns <code>None</code> if …",2,[[],[["string",3],["option",4]]]],[11,"into_string","","Get a <code>String</code> out of a <code>FfiStr</code>. This function is essential a…",2,[[],["string",3]]],[0,"handle_map","ffi_support","This module provides a [<code>Handle</code>] type, which you can think …",null,null],[3,"HandleMap","ffi_support::handle_map","<code>HandleMap</code> is a collection type which can hold any type of …",null,null],[12,"id","","",3,null],[12,"first_free","","",3,null],[12,"num_entries","","",3,null],[12,"entries","","",3,null],[3,"Entry","","",null,null],[12,"version","","",4,null],[12,"state","","",4,null],[4,"EntryState","","",null,null],[13,"Active","","",5,null],[13,"InFreeList","","",5,null],[13,"EndOfFreeList","","",5,null],[11,"is_end_of_list","","",5,[[],["bool",15]]],[11,"is_occupied","","",5,[[],["bool",15]]],[11,"get_item","","",5,[[],["option",4]]],[11,"get_item_mut","","",5,[[],["option",4]]],[5,"to_u16","","",null,[[["usize",15]],["u16",15]]],[17,"MAX_CAPACITY","","The maximum capacity of a [<code>HandleMap</code>]. Attempting to …",null,null],[17,"MIN_CAPACITY","","",null,null],[4,"HandleError","","An error representing the ways a <code>Handle</code> may be invalid.",null,null],[13,"NullHandle","","Identical to invalid handle, but has a slightly more …",6,null],[13,"InvalidHandle","","Returned from [<code>Handle::from_u64</code>] if [<code>Handle::is_valid</code>] …",6,null],[13,"StaleVersion","","Returned from get/get_mut/delete if the handle is stale …",6,null],[13,"IndexPastEnd","","Returned if the handle index references an index past the …",6,null],[13,"WrongMap","","The handle has a map_id for a different map than the one …",6,null],[11,"new","","Create a new <code>HandleMap</code> with the default capacity.",3,[[]]],[11,"new_with_capacity","","Allocate a new <code>HandleMap</code>. Note that the actual capacity …",3,[[["usize",15]]]],[11,"len","","Get the number of entries in the <code>HandleMap</code>.",3,[[],["usize",15]]],[11,"is_empty","","Returns true if the HandleMap is empty.",3,[[],["bool",15]]],[11,"capacity","","Returns the number of slots allocated in the handle map.",3,[[],["usize",15]]],[11,"ensure_capacity","","",3,[[["usize",15]]]],[11,"debug_check_valid","","",3,[[]]],[11,"assert_valid","","",3,[[]]],[11,"insert","","Insert an item into the map, and return a handle to it.",3,[[],["handle",3]]],[11,"check_handle","","",3,[[["handle",3]],[["usize",15],["handleerror",4],["result",4]]]],[11,"delete","","Delete an item from the HandleMap.",3,[[["handle",3]],[["handleerror",4],["result",4]]]],[11,"remove","","Remove an item from the HandleMap, returning the old …",3,[[["handle",3]],[["handleerror",4],["result",4]]]],[11,"get","","Get a reference to the item referenced by the handle, or …",3,[[["handle",3]],[["result",4],["handleerror",4]]]],[11,"get_mut","","Get a mut reference to the item referenced by the handle, …",3,[[["handle",3]],[["handleerror",4],["result",4]]]],[3,"Handle","","A Handle we allow to be returned over the FFI by …",null,null],[12,"map_id","","",7,null],[12,"version","","",7,null],[12,"index","","",7,null],[17,"HANDLE_MAGIC","","",null,null],[11,"into_u64","","Convert a <code>Handle</code> to a <code>u64</code>. You can also use <code>Into::into</code> …",7,[[],["u64",15]]],[11,"from_u64","","Convert a <code>u64</code> to a <code>Handle</code>. Inverse of <code>into_u64</code>. We also …",7,[[["u64",15]],[["result",4],["handleerror",4]]]],[11,"is_valid","","Returns whether or not <code>v</code> makes a bit pattern that could …",7,[[["u64",15]],["bool",15]]],[3,"ConcurrentHandleMap","","<code>ConcurrentHandleMap</code> is a relatively thin wrapper around …",null,null],[12,"map","","The underlying map. Public so that more advanced use-cases…",8,null],[11,"new","","Construct a new <code>ConcurrentHandleMap</code>.",8,[[]]],[11,"len","","Get the number of entries in the <code>ConcurrentHandleMap</code>.",8,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>ConcurrentHandleMap</code> is empty.",8,[[],["bool",15]]],[11,"insert","","Insert an item into the map, returning the newly …",8,[[],["handle",3]]],[11,"delete","","Remove an item from the map.",8,[[["handle",3]],[["handleerror",4],["result",4]]]],[11,"delete_u64","","Convenient wrapper for <code>delete</code> which takes a <code>u64</code> that it …",8,[[["u64",15]],[["handleerror",4],["result",4]]]],[11,"remove","","Remove an item from the map, returning either the item, …",8,[[["handle",3]],[["option",4],["result",4],["handleerror",4]]]],[11,"remove_u64","","Convenient wrapper for <code>remove</code> which takes a <code>u64</code> that it …",8,[[["u64",15]],[["option",4],["result",4],["handleerror",4]]]],[11,"get","","Call <code>callback</code> with a non-mutable reference to the item …",8,[[["handle",3]],["result",4]]],[11,"get_mut","","Call <code>callback</code> with a mutable reference to the item from …",8,[[["handle",3]],["result",4]]],[11,"get_u64","","Convenient wrapper for <code>get</code> which takes a <code>u64</code> that it will …",8,[[["u64",15]],["result",4]]],[11,"get_mut_u64","","Convenient wrapper for <code>get_mut</code> which takes a <code>u64</code> that it …",8,[[["u64",15]],["result",4]]],[11,"call_with_result_mut","","Helper that performs both a [<code>call_with_result</code>] and <code>get</code>.",8,[[["externerror",3],["u64",15]]]],[11,"call_with_result","","Helper that performs both a [<code>call_with_result</code>] and <code>get</code>.",8,[[["externerror",3],["u64",15]]]],[11,"call_with_output","","Helper that performs both a [<code>call_with_output</code>] and <code>get</code>.",8,[[["externerror",3],["u64",15]]]],[11,"call_with_output_mut","","Helper that performs both a [<code>call_with_output</code>] and <code>get_mut</code>…",8,[[["externerror",3],["u64",15]]]],[11,"insert_with_result","","Use <code>constructor</code> to create and insert a <code>T</code>, while inside a […",8,[[["externerror",3]],["u64",15]]],[11,"insert_with_output","","Equivalent to <code>insert_with_result</code> for the case where the …",8,[[["externerror",3]],["u64",15]]],[5,"next_handle_map_id","","",null,[[],["u16",15]]],[3,"HANDLE_MAP_ID_COUNTER","","",null,null],[12,"__private_field","","",9,null],[0,"into_ffi","ffi_support","",null,null],[8,"IntoFfi","ffi_support::into_ffi","This trait is used to return types over the FFI. It …",null,null],[16,"Value","","This type must be:",10,null],[10,"ffi_default","","Return an \'empty\' value. This is what\'s passed back to C …",10,[[]]],[10,"into_ffi_value","","Convert ourselves into a value we can pass back to C with …",10,[[]]],[0,"macros","ffi_support","",null,null],[0,"string","","",null,null],[5,"rust_string_to_c","ffi_support::string","Convert a rust string into a NUL-terminated utf-8 string …",null,[[]]],[5,"opt_rust_string_to_c","","Variant of [<code>rust_string_to_c</code>] which takes an Option, and …",null,[[["option",4]]]],[5,"destroy_c_string","","Free the memory of a string created by [<code>rust_string_to_c</code>] …",null,[[]]],[5,"rust_str_from_c","","Convert a null-terminated C string to a rust <code>str</code>. This …",null,[[],["str",15]]],[5,"opt_rust_str_from_c","","Same as <code>rust_string_from_c</code>, but returns None if <code>c_string</code> …",null,[[],[["option",4],["str",15]]]],[5,"rust_string_from_c","","Convert a null-terminated C into an owned rust string, …",null,[[],["string",3]]],[5,"opt_rust_string_from_c","","Same as <code>rust_string_from_c</code>, but returns None if <code>c_string</code> …",null,[[],[["string",3],["option",4]]]],[0,"abort_on_panic","ffi_support","This module exists just to expose a variant of […",null,null],[3,"AbortOnDrop","ffi_support::abort_on_panic","",null,null],[5,"with_abort_on_panic","","A helper function useful for cases where you\'d like to …",null,[[]]],[5,"call_with_result","","Same as the root <code>call_with_result</code>, but aborts on panic …",null,[[["externerror",3]]]],[5,"call_with_output","","Same as the root <code>call_with_output</code>, but aborts on panic …",null,[[]]],[3,"ExternError","ffi_support","Represents an error that occured within rust, storing …",null,null],[12,"code","","",0,null],[12,"message","","",0,null],[3,"ErrorCode","","A wrapper around error codes, which is represented …",null,null],[12,"0","","",1,null],[3,"FfiStr","","<code>FfiStr<\'a></code> is a safe (<code>#[repr(transparent)]</code>) wrapper …",null,null],[12,"cstr","","",2,null],[12,"_boo","","",2,null],[8,"IntoFfi","","This trait is used to return types over the FFI. It …",null,null],[16,"Value","","This type must be:",10,null],[10,"ffi_default","","Return an \'empty\' value. This is what\'s passed back to C …",10,[[]]],[10,"into_ffi_value","","Convert ourselves into a value we can pass back to C with …",10,[[]]],[5,"rust_string_to_c","","Convert a rust string into a NUL-terminated utf-8 string …",null,[[]]],[5,"opt_rust_string_to_c","","Variant of [<code>rust_string_to_c</code>] which takes an Option, and …",null,[[["option",4]]]],[5,"destroy_c_string","","Free the memory of a string created by [<code>rust_string_to_c</code>] …",null,[[]]],[5,"rust_str_from_c","","Convert a null-terminated C string to a rust <code>str</code>. This …",null,[[],["str",15]]],[5,"opt_rust_str_from_c","","Same as <code>rust_string_from_c</code>, but returns None if <code>c_string</code> …",null,[[],[["option",4],["str",15]]]],[5,"rust_string_from_c","","Convert a null-terminated C into an owned rust string, …",null,[[],["string",3]]],[5,"opt_rust_string_from_c","","Same as <code>rust_string_from_c</code>, but returns None if <code>c_string</code> …",null,[[],[["string",3],["option",4]]]],[5,"call_with_result","","Call a callback that returns a <code>Result<T, E></code> while:",null,[[["externerror",3]]]],[5,"call_with_output","","Call a callback that returns a <code>T</code> while:",null,[[["externerror",3]]]],[5,"call_with_result_impl","","",null,[[["externerror",3]]]],[5,"init_panic_handling_once","","",null,[[]]],[3,"ByteBuffer","","ByteBuffer is a struct that represents an array of bytes …",null,null],[12,"len","","",11,null],[12,"data","","",11,null],[11,"new_with_size","","Creates a <code>ByteBuffer</code> of the requested size, zero-filled.",11,[[["usize",15]]]],[11,"from_vec","","Creates a <code>ByteBuffer</code> instance from a <code>Vec</code> instance.",11,[[["vec",3],["u8",15]]]],[11,"as_slice","","View the data inside this <code>ByteBuffer</code> as a <code>&[u8]</code>.",11,[[]]],[11,"len","","",11,[[],["usize",15]]],[11,"as_mut_slice","","View the data inside this <code>ByteBuffer</code> as a <code>&mut [u8]</code>.",11,[[]]],[11,"into_vec","","Deprecated alias for [<code>ByteBuffer::destroy_into_vec</code>].",11,[[],[["vec",3],["u8",15]]]],[11,"destroy_into_vec","","Convert this <code>ByteBuffer</code> into a Vec, taking ownership of …",11,[[],[["vec",3],["u8",15]]]],[11,"destroy","","Reclaim memory stored in this ByteBuffer.",11,[[]]],[14,"implement_into_ffi_by_pointer","","Implements [<code>IntoFfi</code>] for the provided types (more than …",null,null],[14,"implement_into_ffi_by_json","","Implements [<code>IntoFfi</code>] for the provided types (more than …",null,null],[14,"implement_into_ffi_by_protobuf","","Implements [<code>IntoFfi</code>] for the provided types (more than …",null,null],[14,"implement_into_ffi_by_delegation","","Implement IntoFfi for a type by converting through …",null,null],[14,"define_string_destructor","","For a number of reasons (name collisions are a big one, …",null,null],[14,"define_box_destructor","","Define a (public) destructor for a type that was …",null,null],[14,"define_bytebuffer_destructor","","Define a (public) destructor for the ByteBuffer type.",null,null],[14,"define_handle_map_deleter","","Define a (public) destructor for a type that lives inside …",null,null],[14,"static_assert","","Force a compile error if the condition is not met. …",null,null],[11,"from","ffi_support::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","ffi_support::ffistr","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","ffi_support::handle_map","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","ffi_support::abort_on_panic","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","ffi_support","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"ffi_default","ffi_support::handle_map","",7,[[],["u64",15]]],[11,"into_ffi_value","","",7,[[],["u64",15]]],[11,"ffi_default","ffi_support","",11,[[]]],[11,"into_ffi_value","","",11,[[]]],[11,"drop","ffi_support::abort_on_panic","",12,[[]]],[11,"from","ffi_support::error","",0,[[["box",3],["any",8]]]],[11,"from","","",0,[[["handleerror",4]]]],[11,"from","ffi_support::handle_map","",7,[[["u64",15]]]],[11,"from","ffi_support","",11,[[["vec",3],["u8",15]]]],[11,"clone","ffi_support::error","",1,[[],["errorcode",3]]],[11,"clone","ffi_support::handle_map","",3,[[],["handlemap",3]]],[11,"clone","","",4,[[],["entry",3]]],[11,"clone","","",5,[[],["entrystate",4]]],[11,"clone","","",6,[[],["handleerror",4]]],[11,"clone","","",7,[[],["handle",3]]],[11,"default","ffi_support::error","",0,[[]]],[11,"default","","",1,[[],["errorcode",3]]],[11,"default","ffi_support::handle_map","",3,[[]]],[11,"default","","",8,[[]]],[11,"default","ffi_support","",11,[[]]],[11,"cmp","ffi_support::error","",1,[[["errorcode",3]],["ordering",4]]],[11,"cmp","ffi_support::handle_map","",6,[[["handleerror",4]],["ordering",4]]],[11,"eq","ffi_support::error","",0,[[["externerror",3]],["bool",15]]],[11,"ne","","",0,[[["externerror",3]],["bool",15]]],[11,"eq","","",1,[[["errorcode",3]],["bool",15]]],[11,"ne","","",1,[[["errorcode",3]],["bool",15]]],[11,"eq","ffi_support::ffistr","",2,[[["ffistr",3]],["bool",15]]],[11,"eq","","",2,[[["str",15]],["bool",15]]],[11,"eq","","",2,[[["str",15]],["bool",15]]],[11,"eq","ffi_support::handle_map","",6,[[["handleerror",4]],["bool",15]]],[11,"eq","","",7,[[["handle",3]],["bool",15]]],[11,"ne","","",7,[[["handle",3]],["bool",15]]],[11,"partial_cmp","ffi_support::error","",1,[[["errorcode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["errorcode",3]],["bool",15]]],[11,"le","","",1,[[["errorcode",3]],["bool",15]]],[11,"gt","","",1,[[["errorcode",3]],["bool",15]]],[11,"ge","","",1,[[["errorcode",3]],["bool",15]]],[11,"partial_cmp","ffi_support::handle_map","",6,[[["handleerror",4]],[["option",4],["ordering",4]]]],[11,"deref","","",9,[[],["atomicusize",3]]],[11,"fmt","ffi_support::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","ffi_support::ffistr","",2,[[["formatter",3]],["result",6]]],[11,"fmt","ffi_support::handle_map","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"index","","",3,[[["handle",3]]]],[11,"initialize","","",9,[[]]]],"p":[[3,"ExternError"],[3,"ErrorCode"],[3,"FfiStr"],[3,"HandleMap"],[3,"Entry"],[4,"EntryState"],[4,"HandleError"],[3,"Handle"],[3,"ConcurrentHandleMap"],[3,"HANDLE_MAP_ID_COUNTER"],[8,"IntoFfi"],[3,"ByteBuffer"],[3,"AbortOnDrop"]]},\
"fxa_client":{"doc":"Firefox Accounts ClientThe fxa-client component lets …","i":[[0,"internal","fxa_client","Internal implementation details for the fxa_client crate.",null,null],[0,"commands","fxa_client::internal","",null,null],[0,"send_tab","fxa_client::internal::commands","",null,null],[17,"COMMAND_NAME","fxa_client::internal::commands::send_tab","",null,null],[3,"EncryptedSendTabPayload","","",null,null],[12,"encrypted","","URL Safe Base 64 encrypted send-tab payload.",0,null],[11,"decrypt","","",0,[[["privatesendtabkeysv1",3]],[["result",6],["sendtabpayload",3]]]],[3,"SendTabPayload","","",null,null],[12,"entries","","",1,null],[12,"flow_id","","",1,null],[12,"stream_id","","",1,null],[11,"single_tab","","",1,[[["str",15]]]],[11,"encrypt","","",1,[[["publicsendtabkeys",3]],[["encryptedsendtabpayload",3],["result",6]]]],[3,"TabHistoryEntry","","",null,null],[12,"title","","",2,null],[12,"url","","",2,null],[4,"VersionnedPrivateSendTabKeys","","",null,null],[13,"V1","","",3,null],[3,"PrivateSendTabKeysV1","","",null,null],[12,"p256key","","",4,null],[12,"auth_secret","","",4,null],[6,"PrivateSendTabKeys","","",null,null],[11,"serialize","","",4,[[],[["string",3],["result",6]]]],[11,"deserialize","","",4,[[["str",15]],["result",6]]],[11,"from_random","","",4,[[],["result",6]]],[3,"SendTabKeysPayload","","",null,null],[12,"kid","","Hex encoded kid.",5,null],[12,"iv","","Base 64 encoded IV.",5,null],[12,"hmac","","Hex encoded hmac.",5,null],[12,"ciphertext","","Base 64 encoded ciphertext.",5,null],[11,"decrypt","","",5,[[["scopedkey",3]],[["publicsendtabkeys",3],["result",6]]]],[3,"PublicSendTabKeys","","",null,null],[12,"public_key","","URL Safe Base 64 encoded push public key.",6,null],[12,"auth_secret","","URL Safe Base 64 encoded auth secret.",6,null],[11,"encrypt","","",6,[[["scopedkey",3]],[["result",6],["sendtabkeyspayload",3]]]],[11,"as_command_data","","",6,[[["scopedkey",3]],[["string",3],["result",6]]]],[11,"public_key","","",6,[[],["str",15]]],[11,"auth_secret","","",6,[[],["str",15]]],[5,"build_send_command","","",null,[[["device",3],["sendtabpayload",3],["scopedkey",3]],[["result",6],["value",4]]]],[5,"extract_oldsync_key_components","","",null,[[["scopedkey",3]],["result",6]]],[4,"IncomingDeviceCommand","fxa_client::internal::commands","",null,null],[13,"TabReceived","","",7,null],[12,"sender","fxa_client::internal::commands::IncomingDeviceCommand","",8,null],[12,"payload","","",8,null],[0,"config","fxa_client::internal","",null,null],[3,"Config","fxa_client::internal::config","",null,null],[12,"content_url","","",9,null],[12,"token_server_url_override","","",9,null],[12,"client_id","","",9,null],[12,"redirect_uri","","",9,null],[12,"remote_config","","",9,null],[3,"RemoteConfig","","<code>RemoteConfig</code> struct stores configuration values from the …",null,null],[12,"auth_url","","",10,null],[12,"oauth_url","","",10,null],[12,"profile_url","","",10,null],[12,"token_server_endpoint_url","","",10,null],[12,"authorization_endpoint","","",10,null],[12,"issuer","","",10,null],[12,"jwks_uri","","",10,null],[12,"token_endpoint","","",10,null],[12,"userinfo_endpoint","","",10,null],[12,"introspection_endpoint","","",10,null],[17,"CONTENT_URL_RELEASE","","",null,null],[17,"CONTENT_URL_CHINA","","",null,null],[11,"release","","",9,[[["str",15]]]],[11,"stable_dev","","",9,[[["str",15]]]],[11,"stage_dev","","",9,[[["str",15]]]],[11,"china","","",9,[[["str",15]]]],[11,"localdev","","",9,[[["str",15]]]],[11,"new","","",9,[[["str",15]]]],[11,"override_token_server_url","","Override the token server URL that would otherwise be …",9,[[["str",15]]]],[11,"init","","",9,[[["option",4],["string",3]]]],[11,"remote_config","","",9,[[],[["arc",3],["result",6]]]],[11,"set_remote_config","","",9,[[["remoteconfig",3]],[["arc",3],["remoteconfig",3]]]],[11,"content_url","","",9,[[],[["url",3],["result",6]]]],[11,"content_url_path","","",9,[[["str",15]],[["url",3],["result",6]]]],[11,"client_config_url","","",9,[[],[["url",3],["result",6]]]],[11,"openid_config_url","","",9,[[],[["url",3],["result",6]]]],[11,"connect_another_device_url","","",9,[[],[["url",3],["result",6]]]],[11,"pair_url","","",9,[[],[["url",3],["result",6]]]],[11,"pair_supp_url","","",9,[[],[["url",3],["result",6]]]],[11,"oauth_force_auth_url","","",9,[[],[["url",3],["result",6]]]],[11,"settings_url","","",9,[[],[["url",3],["result",6]]]],[11,"settings_clients_url","","",9,[[],[["url",3],["result",6]]]],[11,"auth_url","","",9,[[],[["url",3],["result",6]]]],[11,"auth_url_path","","",9,[[["str",15]],[["url",3],["result",6]]]],[11,"profile_url","","",9,[[],[["url",3],["result",6]]]],[11,"profile_url_path","","",9,[[["str",15]],[["url",3],["result",6]]]],[11,"oauth_url","","",9,[[],[["url",3],["result",6]]]],[11,"oauth_url_path","","",9,[[["str",15]],[["url",3],["result",6]]]],[11,"token_server_endpoint_url","","",9,[[],[["url",3],["result",6]]]],[11,"authorization_endpoint","","",9,[[],[["url",3],["result",6]]]],[11,"issuer","","",9,[[],[["url",3],["result",6]]]],[11,"jwks_uri","","",9,[[],[["url",3],["result",6]]]],[11,"token_endpoint","","",9,[[],[["url",3],["result",6]]]],[11,"introspection_endpoint","","",9,[[],[["url",3],["result",6]]]],[11,"userinfo_endpoint","","",9,[[],[["url",3],["result",6]]]],[0,"device","fxa_client::internal","",null,null],[3,"Location","fxa_client::internal::device","",null,null],[12,"city","","",11,null],[12,"country","","",11,null],[12,"state","","",11,null],[12,"state_code","","",11,null],[4,"Type","","",null,null],[13,"Desktop","","",12,null],[13,"Mobile","","",12,null],[13,"Tablet","","",12,null],[13,"VR","","",12,null],[13,"TV","","",12,null],[13,"Unknown","","",12,null],[3,"Device","","",null,null],[12,"common","","",13,null],[12,"is_current_device","","",13,null],[12,"location","","",13,null],[12,"last_access_time","","",13,null],[3,"PushSubscription","","",null,null],[12,"endpoint","","",14,null],[12,"public_key","","",14,null],[12,"auth_key","","",14,null],[17,"DEVICES_FRESHNESS_THRESHOLD","","",null,null],[4,"CommandFetchReason","","The reason we are fetching commands.",null,null],[13,"Poll","","We are polling in-case we\'ve missed some.",15,null],[13,"Push","","We got a push notification with the index of the message.",15,null],[4,"Capability","","",null,null],[13,"SendTab","","",16,null],[0,"error","fxa_client::internal","",null,null],[4,"ErrorKind","fxa_client::internal::error","",null,null],[13,"BackoffError","","",17,null],[13,"UnknownOAuthState","","",17,null],[13,"MultipleScopesRequested","","",17,null],[13,"NoCachedToken","","",17,null],[13,"NoScopedKey","","",17,null],[13,"NoRefreshToken","","",17,null],[13,"NoSessionToken","","",17,null],[13,"NoMigrationData","","",17,null],[13,"NoCurrentDeviceId","","",17,null],[13,"UnknownTargetDevice","","",17,null],[13,"UnrecoverableServerError","","",17,null],[13,"IllegalState","","",17,null],[13,"UnknownCommand","","",17,null],[13,"SendTabDiagnosisError","","",17,null],[13,"XorLengthMismatch","","",17,null],[13,"OriginMismatch","","",17,null],[13,"MismatchedKeys","","",17,null],[13,"ScopeNotAllowed","","",17,null],[13,"UnsupportedCommand","","",17,null],[13,"MissingUrlParameter","","",17,null],[13,"NullPointer","","",17,null],[13,"InvalidBufferLength","","",17,null],[13,"AuthCircuitBreakerError","","",17,null],[13,"RemoteError","","",17,null],[12,"code","fxa_client::internal::error::ErrorKind","",18,null],[12,"errno","","",18,null],[12,"error","","",18,null],[12,"message","","",18,null],[12,"info","","",18,null],[13,"CryptoError","fxa_client::internal::error","",17,null],[13,"EceError","","",17,null],[13,"HexDecodeError","","",17,null],[13,"Base64Decode","","",17,null],[13,"JsonError","","",17,null],[13,"JwCryptoError","","",17,null],[13,"UTF8DecodeError","","",17,null],[13,"RequestError","","",17,null],[13,"MalformedUrl","","",17,null],[13,"UnexpectedStatus","","",17,null],[13,"SyncError","","",17,null],[13,"HawkError","","",17,null],[13,"IntegerConversionError","","",17,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",19,null],[12,"backtrace","","",19,null],[11,"new","","",19,[[["errorkind",4]]]],[11,"get_backtrace","","",19,[[],[["mutex",3],["option",4]]]],[3,"Error","","",null,null],[12,"0","","",20,null],[11,"kind","","",20,[[],["errorkind",4]]],[11,"backtrace","","",20,[[],[["mutex",3],["option",4]]]],[0,"http_client","fxa_client::internal","Low-level API for talking to the FxA server.",null,null],[17,"HAWK_HKDF_SALT","fxa_client::internal::http_client","",null,null],[17,"HAWK_KEY_LENGTH","","",null,null],[17,"RETRY_AFTER_DEFAULT_SECONDS","","",null,null],[8,"FxAClient","","Trait defining the low-level API for talking to the FxA …",null,null],[10,"create_refresh_token_using_authorization_code","","",21,[[["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[10,"create_refresh_token_using_session_token","","",21,[[["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[10,"check_refresh_token_status","","",21,[[["config",3],["str",15]],[["introspectresponse",3],["result",6]]]],[10,"create_access_token_using_refresh_token","","",21,[[["option",4],["u64",15],["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[10,"create_access_token_using_session_token","","",21,[[["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[10,"create_authorization_code_using_session_token","","",21,[[["authorizationrequestparameters",3],["config",3],["str",15]],[["result",6],["oauthauthresponse",3]]]],[10,"duplicate_session_token","","",21,[[["config",3],["str",15]],[["result",6],["duplicatetokenresponse",3]]]],[10,"destroy_access_token","","",21,[[["config",3],["str",15]],["result",6]]],[10,"destroy_refresh_token","","",21,[[["config",3],["str",15]],["result",6]]],[10,"get_profile","","",21,[[["option",4],["string",3],["config",3],["str",15]],[["result",6],["option",4]]]],[10,"get_pending_commands","","",21,[[["option",4],["u64",15],["config",3],["str",15]],[["result",6],["pendingcommandsresponse",3]]]],[10,"invoke_command","","",21,[[["value",4],["config",3],["str",15]],["result",6]]],[10,"update_device_record","","",21,[[["deviceupdaterequest",3],["config",3],["str",15]],[["result",6],["deviceresponsecommon",3]]]],[10,"destroy_device_record","","",21,[[["config",3],["str",15]],["result",6]]],[10,"get_devices","","",21,[[["config",3],["str",15]],[["result",6],["vec",3]]]],[10,"get_attached_clients","","",21,[[["config",3],["str",15]],[["result",6],["vec",3]]]],[10,"get_scoped_key_data","","",21,[[["config",3],["str",15]],[["result",6],["hashmap",3]]]],[10,"get_fxa_client_configuration","","",21,[[["config",3]],[["result",6],["clientconfigurationresponse",3]]]],[10,"get_openid_configuration","","",21,[[["config",3]],[["result",6],["openidconfigurationresponse",3]]]],[4,"HttpClientState","","",null,null],[13,"Ok","","",22,null],[13,"Backoff","","",22,null],[12,"backoff_end_duration","fxa_client::internal::http_client::HttpClientState","",23,null],[12,"time_since_backoff","","",23,null],[3,"Client","fxa_client::internal::http_client","",null,null],[12,"state","","",24,null],[5,"fxa_client_configuration","","",null,[[["url",3]],[["result",6],["clientconfigurationresponse",3]]]],[5,"openid_configuration","","",null,[[["url",3]],[["result",6],["openidconfigurationresponse",3]]]],[11,"new","","",24,[[]]],[11,"destroy_token_helper","","",24,[[["value",4],["config",3]],["result",6]]],[11,"make_oauth_token_request","","",24,[[["value",4],["config",3]],[["oauthtokenresponse",3],["result",6]]]],[11,"handle_too_many_requests","","",24,[[["response",3]],[["result",6],["response",3]]]],[11,"default_handle_response_error","","",24,[[["response",3]],[["result",6],["response",3]]]],[11,"make_request","","",24,[[["request",3]],[["result",6],["response",3]]]],[5,"bearer_token","","",null,[[["str",15]],["string",3]]],[5,"kw","","",null,[[["str",15]],[["vec",3],["u8",15]]]],[5,"derive_auth_key_from_session_token","","",null,[[["str",15]],[["result",6],["vec",3]]]],[3,"AuthorizationRequestParameters","","",null,null],[12,"client_id","","",25,null],[12,"scope","","",25,null],[12,"state","","",25,null],[12,"access_type","","",25,null],[12,"code_challenge","","",25,null],[12,"code_challenge_method","","",25,null],[12,"keys_jwe","","",25,null],[3,"HawkRequestBuilder","","",null,null],[12,"url","","",26,null],[12,"method","","",26,null],[12,"body","","",26,null],[12,"hkdf_sha256_key","","",26,null],[11,"new","","",26,[[["url",3],["method",4]]]],[11,"body","","",26,[[["value",4]]]],[11,"make_hawk_header","","",26,[[],[["string",3],["result",6]]]],[11,"build","","",26,[[],[["request",3],["result",6]]]],[3,"ClientConfigurationResponse","","",null,null],[12,"auth_server_base_url","","",27,null],[12,"oauth_server_base_url","","",27,null],[12,"profile_server_base_url","","",27,null],[12,"sync_tokenserver_base_url","","",27,null],[3,"OpenIdConfigurationResponse","","",null,null],[12,"authorization_endpoint","","",28,null],[12,"introspection_endpoint","","",28,null],[12,"issuer","","",28,null],[12,"jwks_uri","","",28,null],[12,"token_endpoint","","",28,null],[12,"userinfo_endpoint","","",28,null],[3,"ResponseAndETag","","",null,null],[12,"response","","",29,null],[12,"etag","","",29,null],[3,"PendingCommandsResponse","","",null,null],[12,"index","","",30,null],[12,"last","","",30,null],[12,"messages","","",30,null],[3,"PendingCommand","","",null,null],[12,"index","","",31,null],[12,"data","","",31,null],[3,"CommandData","","",null,null],[12,"command","","",32,null],[12,"payload","","",32,null],[12,"sender","","",32,null],[3,"PushSubscription","","",null,null],[12,"endpoint","","",14,null],[12,"public_key","","",14,null],[12,"auth_key","","",14,null],[3,"DeviceUpdateRequest","","We use the double Option pattern in this struct. The …",null,null],[12,"display_name","","",33,null],[12,"device_type","","",33,null],[12,"push_subscription","","",33,null],[12,"available_commands","","",33,null],[4,"DeviceType","","",null,null],[13,"Desktop","","",12,null],[13,"Mobile","","",12,null],[13,"Tablet","","",12,null],[13,"VR","","",12,null],[13,"TV","","",12,null],[13,"Unknown","","",12,null],[3,"DeviceUpdateRequestBuilder","","",null,null],[12,"device_type","","",34,null],[12,"display_name","","",34,null],[12,"push_subscription","","",34,null],[12,"available_commands","","",34,null],[11,"new","","",34,[[]]],[11,"push_subscription","","",34,[[["pushsubscription",3]]]],[11,"available_commands","","",34,[[["hashmap",3]]]],[11,"clear_available_commands","","",34,[[]]],[11,"display_name","","",34,[[["str",15]]]],[11,"clear_display_name","","",34,[[]]],[11,"device_type","","",34,[[["devicetype",4]]]],[11,"build","","",34,[[],["deviceupdaterequest",3]]],[3,"DeviceLocation","","",null,null],[12,"city","","",11,null],[12,"country","","",11,null],[12,"state","","",11,null],[12,"state_code","","",11,null],[3,"GetDeviceResponse","","",null,null],[12,"common","","",13,null],[12,"is_current_device","","",13,null],[12,"location","","",13,null],[12,"last_access_time","","",13,null],[6,"UpdateDeviceResponse","","",null,null],[3,"DeviceResponseCommon","","",null,null],[12,"id","","",35,null],[12,"display_name","","",35,null],[12,"device_type","","",35,null],[12,"push_subscription","","",35,null],[12,"available_commands","","",35,null],[12,"push_endpoint_expired","","",35,null],[3,"GetAttachedClientResponse","","",null,null],[12,"client_id","","",36,null],[12,"session_token_id","","",36,null],[12,"refresh_token_id","","",36,null],[12,"device_id","","",36,null],[12,"device_type","","",36,null],[12,"is_current_session","","",36,null],[12,"name","","",36,null],[12,"created_time","","",36,null],[12,"last_access_time","","",36,null],[12,"scope","","",36,null],[12,"user_agent","","",36,null],[12,"os","","",36,null],[4,"OAauthTokenRequest","","",null,null],[13,"UsingRefreshToken","","",37,null],[12,"client_id","fxa_client::internal::http_client::OAauthTokenRequest","",38,null],[12,"refresh_token","","",38,null],[12,"scope","","",38,null],[12,"ttl","","",38,null],[13,"UsingCode","fxa_client::internal::http_client","",37,null],[12,"client_id","fxa_client::internal::http_client::OAauthTokenRequest","",39,null],[12,"code","","",39,null],[12,"code_verifier","","",39,null],[12,"ttl","","",39,null],[3,"OAuthTokenResponse","fxa_client::internal::http_client","",null,null],[12,"keys_jwe","","",40,null],[12,"refresh_token","","",40,null],[12,"session_token","","",40,null],[12,"expires_in","","",40,null],[12,"scope","","",40,null],[12,"access_token","","",40,null],[3,"OAuthAuthResponse","","",null,null],[12,"redirect","","",41,null],[12,"code","","",41,null],[12,"state","","",41,null],[3,"IntrospectResponse","","",null,null],[12,"active","","",42,null],[3,"ProfileResponse","","",null,null],[12,"uid","","",43,null],[12,"email","","",43,null],[12,"display_name","","",43,null],[12,"avatar","","",43,null],[12,"avatar_default","","",43,null],[3,"ScopedKeyDataResponse","","",null,null],[12,"identifier","","",44,null],[12,"key_rotation_secret","","",44,null],[12,"key_rotation_timestamp","","",44,null],[3,"DuplicateTokenResponse","","",null,null],[12,"uid","","",45,null],[12,"session_token","","",45,null],[12,"verified","","",45,null],[12,"auth_at","","",45,null],[0,"migrator","fxa_client::internal","",null,null],[3,"MigrationData","fxa_client::internal::migrator","",null,null],[12,"k_xcs","","",46,null],[12,"k_sync","","",46,null],[12,"copy_session_token","","",46,null],[12,"session_token","","",46,null],[0,"oauth","fxa_client::internal","",null,null],[0,"attached_clients","fxa_client::internal::oauth","",null,null],[17,"ATTACHED_CLIENTS_FRESHNESS_THRESHOLD","fxa_client::internal::oauth::attached_clients","",null,null],[17,"OAUTH_MIN_TIME_LEFT","fxa_client::internal::oauth","",null,null],[17,"OAUTH_WEBCHANNEL_REDIRECT","","",null,null],[17,"AUTH_CIRCUIT_BREAKER_CAPACITY","","",null,null],[17,"AUTH_CIRCUIT_BREAKER_RENEWAL_RATE","","",null,null],[3,"AuthCircuitBreaker","","",null,null],[12,"rate_limiter","","",47,null],[11,"check","","",47,[[],["result",6]]],[3,"RefreshToken","","",null,null],[12,"token","","",48,null],[12,"scopes","","",48,null],[3,"OAuthFlow","","",null,null],[12,"scoped_keys_flow","","",49,null],[12,"code_verifier","","",49,null],[3,"AccessTokenInfo","","",null,null],[12,"scope","","",50,null],[12,"token","","",50,null],[12,"key","","",50,null],[12,"expires_at","","",50,null],[0,"profile","fxa_client::internal","",null,null],[17,"PROFILE_FRESHNESS_THRESHOLD","fxa_client::internal::profile","",null,null],[0,"push","fxa_client::internal","",null,null],[4,"PushPayload","fxa_client::internal::push","",null,null],[13,"CommandReceived","","",51,null],[13,"ProfileUpdated","","",51,null],[13,"DeviceConnected","","",51,null],[13,"DeviceDisconnected","","",51,null],[13,"PasswordChanged","","",51,null],[13,"PasswordReset","","",51,null],[13,"AccountDestroyed","","",51,null],[13,"Unknown","","",51,null],[3,"CommandReceivedPushPayload","","",null,null],[12,"command","","",52,null],[12,"index","","",52,null],[12,"sender","","",52,null],[12,"url","","",52,null],[3,"DeviceConnectedPushPayload","","",null,null],[12,"device_name","","",53,null],[3,"DeviceDisconnectedPushPayload","","",null,null],[12,"device_id","","",54,null],[3,"AccountDestroyedPushPayload","","",null,null],[12,"account_uid","","",55,null],[0,"scoped_keys","fxa_client::internal","",null,null],[3,"ScopedKeysFlow","fxa_client::internal::scoped_keys","",null,null],[12,"key_pair","","",56,null],[11,"with_random_key","","",56,[[],["result",6]]],[11,"get_public_key_jwk","","",56,[[],[["result",6],["jwk",3]]]],[11,"decrypt_keys_jwe","","",56,[[["str",15]],[["string",3],["result",6]]]],[0,"scopes","fxa_client::internal","",null,null],[17,"PROFILE","fxa_client::internal::scopes","",null,null],[17,"OLD_SYNC","","",null,null],[0,"send_tab","fxa_client::internal","",null,null],[0,"state_persistence","","Serialization of <code>FirefoxAccount</code> state to/from a JSON …",null,null],[6,"State","fxa_client::internal::state_persistence","",null,null],[5,"state_from_json","","Parse a <code>State</code> from a JSON string, performing migrations …",null,[[["str",15]],[["statev2",3],["result",6]]]],[5,"state_to_json","","Serialize a <code>State</code> to a JSON string.",null,[[["statev2",3]],[["string",3],["result",6]]]],[5,"upgrade_state","","",null,[[["persistedstate",4]],[["statev2",3],["result",6]]]],[4,"PersistedState","","<code>PersistedState</code> is a tagged container for one of the state …",null,null],[13,"V1","","",57,null],[13,"V2","","",57,null],[3,"StateV2","","<code>StateV2</code> is the current state schema. It and its fields …",null,null],[12,"config","","",58,null],[12,"current_device_id","","",58,null],[12,"refresh_token","","",58,null],[12,"scoped_keys","","",58,null],[12,"last_handled_command","","",58,null],[12,"commands_data","","",58,null],[12,"device_capabilities","","",58,null],[12,"access_token_cache","","",58,null],[12,"session_token","","",58,null],[12,"last_seen_profile","","",58,null],[12,"in_flight_migration","","",58,null],[11,"start_over","","Clear (almost all of) the persisted state of the account.",58,[[],["statev2",3]]],[3,"StateV1","","<code>StateV1</code> was a previous state schema.",null,null],[12,"client_id","","",59,null],[12,"redirect_uri","","",59,null],[12,"config","","",59,null],[12,"oauth_cache","","",59,null],[3,"V1Config","","",null,null],[12,"content_url","","",60,null],[12,"auth_url","","",60,null],[12,"oauth_url","","",60,null],[12,"profile_url","","",60,null],[12,"token_server_endpoint_url","","",60,null],[12,"authorization_endpoint","","",60,null],[12,"issuer","","",60,null],[12,"jwks_uri","","",60,null],[12,"token_endpoint","","",60,null],[12,"userinfo_endpoint","","",60,null],[3,"V1AuthInfo","","",null,null],[12,"access_token","","",61,null],[12,"keys","","",61,null],[12,"refresh_token","","",61,null],[12,"expires_at","","",61,null],[12,"scopes","","",61,null],[0,"telemetry","fxa_client::internal","",null,null],[4,"ReceivedReason","fxa_client::internal::telemetry","The reason a tab/command was received.",null,null],[13,"Push","","A push notification for the command was received.",62,null],[13,"PushMissed","","Discovered while handling a push notification for a later …",62,null],[13,"Poll","","Explicit polling for missed commands.",62,null],[3,"SentCommand","","",null,null],[12,"flow_id","","",63,null],[12,"stream_id","","",63,null],[3,"ReceivedCommand","","",null,null],[12,"flow_id","","",64,null],[12,"stream_id","","",64,null],[12,"reason","","",64,null],[17,"MAX_TAB_EVENTS","","",null,null],[3,"FxaTelemetry","","",null,null],[12,"commands_sent","","",65,null],[12,"commands_received","","",65,null],[11,"new","","",65,[[]]],[11,"record_tab_sent","","",65,[[["sentcommand",3]]]],[11,"record_tab_received","","",65,[[["receivedcommand",3]]]],[0,"util","fxa_client::internal","",null,null],[5,"now","fxa_client::internal::util","",null,[[],["u64",15]]],[5,"now_secs","","",null,[[],["u64",15]]],[5,"random_base64_url_string","","",null,[[["usize",15]],[["string",3],["result",6]]]],[8,"Xorable","","",null,null],[10,"xored_with","","",66,[[],[["result",6],["vec",3]]]],[4,"IncomingDeviceCommand","fxa_client::internal","",null,null],[13,"TabReceived","","",7,null],[12,"sender","fxa_client::internal::IncomingDeviceCommand","",8,null],[12,"payload","","",8,null],[6,"FxAClient","fxa_client::internal","",null,null],[3,"FirefoxAccount","","",null,null],[12,"client","","",67,null],[12,"state","","",67,null],[12,"flow_store","","",67,null],[12,"attached_clients_cache","","",67,null],[12,"devices_cache","","",67,null],[12,"auth_circuit_breaker","","",67,null],[12,"telemetry","","",67,null],[11,"from_state","","",67,[[["statev2",3]]]],[11,"with_config","","Create a new <code>FirefoxAccount</code> instance using a <code>Config</code>.",67,[[["config",3]]]],[11,"new","","Create a new <code>FirefoxAccount</code> instance.",67,[[["option",4],["str",15]]]],[11,"from_json","","Restore a <code>FirefoxAccount</code> instance from a serialized state …",67,[[["str",15]],["result",6]]],[11,"to_json","","Serialize a <code>FirefoxAccount</code> instance internal state to be …",67,[[],[["string",3],["result",6]]]],[11,"clear_devices_and_attached_clients_cache","","Clear the attached clients and devices cache",67,[[]]],[11,"start_over","","Clear the whole persisted/cached state of the account, …",67,[[]]],[11,"get_token_server_endpoint_url","","Get the Sync Token Server endpoint URL.",67,[[],[["string",3],["result",6]]]],[11,"get_pairing_authority_url","","Get the pairing URL to navigate to on the Auth side …",67,[[],[["string",3],["result",6]]]],[11,"get_connection_success_url","","Get the \\\"connection succeeded\\\" page URL. It is typically …",67,[[],[["string",3],["result",6]]]],[11,"get_manage_account_url","","Get the \\\"manage account\\\" page URL. It is typically used …",67,[[["str",15]],[["string",3],["result",6]]]],[11,"get_manage_devices_url","","Get the \\\"manage devices\\\" page URL. It is typically used …",67,[[["str",15]],[["string",3],["result",6]]]],[11,"add_account_identifiers_to_url","","",67,[[["url",3]],[["string",3],["result",6]]]],[11,"get_refresh_token","","",67,[[],[["result",6],["str",15]]]],[11,"disconnect","","Disconnect from the account and optionally destroy our …",67,[[]]],[3,"CachedResponse","","",null,null],[12,"response","","",68,null],[12,"cached_at","","",68,null],[12,"etag","","",68,null],[4,"FxaError","fxa_client","Generic error type thrown by many [<code>FirefoxAccount</code>] …",null,null],[13,"Authentication","","Thrown when there was a problem with the authentication …",69,null],[13,"Network","","Thrown if an operation fails due to network access …",69,null],[13,"NoExistingAuthFlow","","Thrown if the application attempts to complete an OAuth …",69,null],[13,"WrongAuthFlow","","Thrown if the application attempts to complete an OAuth …",69,null],[13,"Panic","","Thrown if there is a panic in the underlying Rust code.",69,null],[13,"Other","","A catch-all for other unspecified errors.",69,null],[3,"FirefoxAccount","","Object representing the signed-in state of an application.",null,null],[12,"internal","","",70,null],[11,"new","","Create a new [<code>FirefoxAccount</code>] instance, not connected to …",70,[[["option",4],["str",15]],["firefoxaccount",3]]],[11,"from_json","","Restore a [<code>FirefoxAccount</code>] instance from serialized state.",70,[[["str",15]],[["result",4],["fxaerror",4],["firefoxaccount",3]]]],[11,"to_json","","Save current state to a JSON string.",70,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"begin_oauth_flow","","Initiate a web-based OAuth sign-in flow.",70,[[["metricsparams",3],["option",4],["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_pairing_authority_url","","Get the URL at which to begin a device-pairing signin …",70,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"begin_pairing_flow","","Initiate a device-pairing sign-in flow.",70,[[["metricsparams",3],["option",4],["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"complete_oauth_flow","","Complete an OAuth flow.",70,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"check_authorization_status","","Check authorization status for this application.",70,[[],[["fxaerror",4],["authorizationinfo",3],["result",4]]]],[11,"disconnect","","Disconnect from the user\'s account.",70,[[]]],[11,"get_profile","","Get profile information for the signed-in user, if any.",70,[[["bool",15]],[["profile",3],["result",4],["fxaerror",4]]]],[11,"initialize_device","","Create a new device record for this application.",70,[[["devicetype",4],["vec",3],["devicecapability",4],["str",15]],[["fxaerror",4],["result",4]]]],[11,"get_current_device_id","","Get the device id registered for this application.",70,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_devices","","Get the list of devices registered on the user\'s account.",70,[[["bool",15]],[["vec",3],["fxaerror",4],["result",4]]]],[11,"get_attached_clients","","Get the list of all client applications attached to the …",70,[[],[["vec",3],["fxaerror",4],["result",4]]]],[11,"set_device_name","","Update the display name used for this application …",70,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"clear_device_name","","Clear any custom display name used for this application …",70,[[],[["fxaerror",4],["result",4]]]],[11,"ensure_capabilities","","Ensure that the device record has a specific set of …",70,[[["vec",3],["devicecapability",4]],[["fxaerror",4],["result",4]]]],[11,"set_push_subscription","","Set or update a push subscription endpoint for this …",70,[[["devicepushsubscription",3]],[["fxaerror",4],["result",4]]]],[11,"handle_push_message","","Process and respond to server-delivered account update …",70,[[["str",15]],[["fxaerror",4],["result",4],["vec",3]]]],[11,"poll_device_commands","","Poll the server for any pending device commands.",70,[[],[["result",4],["fxaerror",4],["vec",3]]]],[11,"send_single_tab","","Use device commands to send a single tab to another …",70,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"get_token_server_endpoint_url","","Get the URL at which to access the user\'s sync data.",70,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_connection_success_url","","Get a URL which shows a \\\"successfully connceted!\\\" message.",70,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_manage_account_url","","Get a URL at which the user can manage their account and …",70,[[["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_manage_devices_url","","Get a URL at which the user can manage the devices …",70,[[["str",15]],[["fxaerror",4],["string",3],["result",4]]]],[11,"get_access_token","","Get a short-lived OAuth access token for the user\'s …",70,[[["i64",15],["option",4],["str",15]],[["result",4],["fxaerror",4],["accesstokeninfo",3]]]],[11,"get_session_token","","Get the session token for the user\'s account, if one is …",70,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"handle_session_token_change","","Update the stored session token for the user\'s account.",70,[[["str",15]],[["fxaerror",4],["result",4]]]],[11,"authorize_code_using_session_token","","Create a new OAuth authorization code using the stored …",70,[[["authorizationparameters",3]],[["fxaerror",4],["string",3],["result",4]]]],[11,"clear_access_token_cache","","Clear the access token cache in response to an auth …",70,[[]]],[11,"gather_telemetry","","Collect and return telemetry about send-tab attempts.",70,[[],[["fxaerror",4],["string",3],["result",4]]]],[11,"migrate_from_session_token","","Sign in by using legacy session-token state.",70,[[["bool",15],["str",15]],[["fxamigrationresult",3],["fxaerror",4],["result",4]]]],[11,"retry_migrate_from_session_token","","Retry a previously failed migration from legacy …",70,[[],[["fxamigrationresult",3],["fxaerror",4],["result",4]]]],[11,"is_in_migration_state","","Check for a previously failed migration from legacy …",70,[[],["migrationstate",4]]],[3,"AuthorizationInfo","","Information about the authorization state of the …",null,null],[12,"active","","",71,null],[3,"MetricsParams","","Additional metrics tracking parameters to include in an …",null,null],[12,"parameters","","",72,null],[3,"AccessTokenInfo","","An OAuth access token, with its associated keys and …",null,null],[12,"scope","","The scope of access granted by token.",73,null],[12,"token","","The access token itself.",73,null],[12,"key","","The client-side encryption key associated with this scope.",73,null],[12,"expires_at","","The expiry time of the token, in seconds.",73,null],[3,"ScopedKey","","A cryptograpic key associated with an OAuth scope.",null,null],[12,"kty","","The type of key.",74,null],[12,"scope","","The OAuth scope with which this key is associated.",74,null],[12,"k","","The key material, as base64-url-encoded bytes.",74,null],[12,"kid","","An opaque unique identifier for this key.",74,null],[3,"AuthorizationParameters","","Parameters provided in an incoming OAuth request.",null,null],[12,"client_id","","",75,null],[12,"scope","","",75,null],[12,"state","","",75,null],[12,"access_type","","",75,null],[12,"code_challenge","","",75,null],[12,"code_challenge_method","","",75,null],[12,"keys_jwk","","",75,null],[3,"Device","","A device connected to the user\'s account.",null,null],[12,"id","","",76,null],[12,"display_name","","",76,null],[12,"device_type","","",76,null],[12,"capabilities","","",76,null],[12,"push_subscription","","",76,null],[12,"push_endpoint_expired","","",76,null],[12,"is_current_device","","",76,null],[12,"last_access_time","","",76,null],[4,"DeviceType","","Enumeration for the different types of device.",null,null],[13,"Desktop","","",77,null],[13,"Mobile","","",77,null],[13,"Tablet","","",77,null],[13,"VR","","",77,null],[13,"TV","","",77,null],[13,"Unknown","","",77,null],[3,"DevicePushSubscription","","Details of a web-push subscription endpoint.",null,null],[12,"endpoint","","",78,null],[12,"public_key","","",78,null],[12,"auth_key","","",78,null],[4,"DeviceCapability","","A \\\"capability\\\" offered by a device.",null,null],[13,"SendTab","","",79,null],[4,"AccountEvent","","An event that happened on the user\'s account.",null,null],[13,"CommandReceived","","Sent when another device has invoked a command for this …",80,null],[12,"command","fxa_client::AccountEvent","",81,null],[13,"ProfileUpdated","fxa_client","Sent when the user has modified their account profile …",80,null],[13,"AccountAuthStateChanged","","Sent when when there has been a change in authorization …",80,null],[13,"AccountDestroyed","","Sent when the user deletes their Firefox Account.",80,null],[13,"DeviceConnected","","Sent when a new device connects to the user\'s account.",80,null],[12,"device_name","fxa_client::AccountEvent","",82,null],[13,"DeviceDisconnected","fxa_client","Sent when a device disconnects from the user\'s account.",80,null],[12,"device_id","fxa_client::AccountEvent","",83,null],[12,"is_local_device","","",83,null],[4,"IncomingDeviceCommand","fxa_client","A command invoked by another device.",null,null],[13,"TabReceived","","Indicates that a tab has been sent to this device.",84,null],[12,"sender","fxa_client::IncomingDeviceCommand","",85,null],[12,"payload","","",85,null],[3,"SendTabPayload","fxa_client","The payload sent when invoking a \\\"send tab\\\" command.",null,null],[12,"entries","","The navigation history of the sent tab.",86,null],[12,"flow_id","","A unique identifier to be included in send-tab metrics.",86,null],[12,"stream_id","","A unique identifier to be included in send-tab metrics.",86,null],[3,"TabHistoryEntry","","An individual entry in the navigation history of a sent …",null,null],[12,"title","","",87,null],[12,"url","","",87,null],[3,"AttachedClient","","A client connected to the user\'s account.",null,null],[12,"client_id","","",88,null],[12,"device_id","","",88,null],[12,"device_type","","",88,null],[12,"is_current_session","","",88,null],[12,"name","","",88,null],[12,"created_time","","",88,null],[12,"last_access_time","","",88,null],[12,"scope","","",88,null],[3,"Profile","","Information about the user that controls a Firefox …",null,null],[12,"uid","","The user\'s account uid",89,null],[12,"email","","The user\'s current primary email address.",89,null],[12,"display_name","","The user\'s preferred textual display name.",89,null],[12,"avatar","","The URL of a profile picture representing the user.",89,null],[12,"is_default_avatar","","Whether the <code>avatar</code> URL represents the default avatar …",89,null],[4,"MigrationState","","The current state migration from legacy sign-in data.",null,null],[13,"None","","No in-flight migration.",90,null],[13,"CopySessionToken","","An in-flight migration that will copy the sessionToken.",90,null],[13,"ReuseSessionToken","","An in-flight migration that will re-use the sessionToken.",90,null],[3,"FxAMigrationResult","","Statistics about the completion of a migration from …",null,null],[12,"total_duration","","The time taken to migrate, in milliseconds.",91,null],[11,"from","fxa_client::internal::commands::send_tab","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","fxa_client::internal::commands","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","fxa_client::internal::config","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","fxa_client::internal::device","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"get_hash","","",16,[[],["u64",15]]],[11,"vzip","","",16,[[]]],[11,"from","fxa_client::internal::error","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","fxa_client::internal::http_client","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","fxa_client::internal::migrator","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","fxa_client::internal::oauth","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","fxa_client::internal::push","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","fxa_client::internal::scoped_keys","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","fxa_client::internal::state_persistence","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","fxa_client::internal::telemetry","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","fxa_client::internal","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","fxa_client","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"get_fxa_client_configuration","fxa_client::internal::http_client","",24,[[["config",3]],[["result",6],["clientconfigurationresponse",3]]]],[11,"get_openid_configuration","","",24,[[["config",3]],[["result",6],["openidconfigurationresponse",3]]]],[11,"get_profile","","",24,[[["option",4],["string",3],["config",3],["str",15]],[["result",6],["option",4]]]],[11,"create_refresh_token_using_authorization_code","","",24,[[["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[11,"create_refresh_token_using_session_token","","",24,[[["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[11,"create_access_token_using_refresh_token","","",24,[[["option",4],["u64",15],["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[11,"create_access_token_using_session_token","","",24,[[["config",3],["str",15]],[["oauthtokenresponse",3],["result",6]]]],[11,"create_authorization_code_using_session_token","","",24,[[["authorizationrequestparameters",3],["config",3],["str",15]],[["result",6],["oauthauthresponse",3]]]],[11,"check_refresh_token_status","","",24,[[["config",3],["str",15]],[["introspectresponse",3],["result",6]]]],[11,"duplicate_session_token","","",24,[[["config",3],["str",15]],[["result",6],["duplicatetokenresponse",3]]]],[11,"destroy_access_token","","",24,[[["config",3],["str",15]],["result",6]]],[11,"destroy_refresh_token","","",24,[[["config",3],["str",15]],["result",6]]],[11,"get_pending_commands","","",24,[[["option",4],["u64",15],["config",3],["str",15]],[["result",6],["pendingcommandsresponse",3]]]],[11,"invoke_command","","",24,[[["value",4],["config",3],["str",15]],["result",6]]],[11,"get_devices","","",24,[[["config",3],["str",15]],[["result",6],["vec",3]]]],[11,"update_device_record","","",24,[[["deviceupdaterequest",3],["config",3],["str",15]],[["result",6],["deviceresponsecommon",3]]]],[11,"destroy_device_record","","",24,[[["config",3],["str",15]],["result",6]]],[11,"get_attached_clients","","",24,[[["config",3],["str",15]],[["result",6],["vec",3]]]],[11,"get_scoped_key_data","","",24,[[["config",3],["str",15]],[["result",6],["hashmap",3]]]],[11,"from","fxa_client","",86,[[["sendtabpayload",3]]]],[11,"from","","",87,[[["tabhistoryentry",3]]]],[11,"from","fxa_client::internal::commands::send_tab","",6,[[["privatesendtabkeysv1",3]]]],[11,"from","fxa_client::internal::device","",16,[[["devicecapability",4]]]],[11,"from","fxa_client","",79,[[["capability",4]]]],[11,"from","","",77,[[["type",4]]]],[11,"from","fxa_client::internal::device","",12,[[["devicetype",4]]]],[11,"from","fxa_client::internal::error","",17,[[["error",3]]]],[11,"from","","",17,[[["error",4]]]],[11,"from","","",17,[[["fromhexerror",4]]]],[11,"from","","",17,[[["decodeerror",4]]]],[11,"from","","",17,[[["error",3]]]],[11,"from","","",17,[[["jwcryptoerror",4]]]],[11,"from","","",17,[[["fromutf8error",3]]]],[11,"from","","",17,[[["error",4]]]],[11,"from","","",17,[[["parseerror",4]]]],[11,"from","","",17,[[["unexpectedstatus",3]]]],[11,"from","","",17,[[["error",3]]]],[11,"from","","",17,[[["error",4]]]],[11,"from","","",17,[[["tryfrominterror",3]]]],[11,"from","","",20,[[["errorkind",4]],["error",3]]],[11,"from","","",20,[[["error",3]]]],[11,"from","","",20,[[["error",4]]]],[11,"from","","",20,[[["fromhexerror",4]]]],[11,"from","","",20,[[["decodeerror",4]]]],[11,"from","","",20,[[["error",3]]]],[11,"from","","",20,[[["jwcryptoerror",4]]]],[11,"from","","",20,[[["fromutf8error",3]]]],[11,"from","","",20,[[["error",4]]]],[11,"from","","",20,[[["unexpectedstatus",3]]]],[11,"from","","",20,[[["parseerror",4]]]],[11,"from","","",20,[[["error",3]]]],[11,"from","","",20,[[["error",4]]]],[11,"from","","",20,[[["tryfrominterror",3]]]],[11,"from","fxa_client","",69,[[["error",3]],["fxaerror",4]]],[11,"from","fxa_client::internal::device","",14,[[["devicepushsubscription",3]]]],[11,"from","fxa_client","",78,[[["pushsubscription",3]]]],[11,"from","","",89,[[["profileresponse",3]]]],[11,"from","","",71,[[["introspectinfo",3]]]],[11,"from","","",92,[[["statev1",3]]]],[11,"clone","fxa_client::internal::commands::send_tab","",1,[[],["sendtabpayload",3]]],[11,"clone","","",2,[[],["tabhistoryentry",3]]],[11,"clone","","",3,[[],["versionnedprivatesendtabkeys",4]]],[11,"clone","","",4,[[],["privatesendtabkeysv1",3]]],[11,"clone","fxa_client::internal::commands","",7,[[],["incomingdevicecommand",4]]],[11,"clone","fxa_client::internal::config","",9,[[],["config",3]]],[11,"clone","fxa_client::internal::device","",15,[[],["commandfetchreason",4]]],[11,"clone","","",16,[[],["capability",4]]],[11,"clone","fxa_client::internal::http_client","",29,[[],["responseandetag",3]]],[11,"clone","fxa_client::internal::device","",14,[[],["pushsubscription",3]]],[11,"clone","","",12,[[],["devicetype",4]]],[11,"clone","","",11,[[],["devicelocation",3]]],[11,"clone","","",13,[[],["getdeviceresponse",3]]],[11,"clone","fxa_client::internal::http_client","",35,[[],["deviceresponsecommon",3]]],[11,"clone","","",36,[[],["getattachedclientresponse",3]]],[11,"clone","","",43,[[],["profileresponse",3]]],[11,"clone","","",45,[[],["duplicatetokenresponse",3]]],[11,"clone","fxa_client::internal::migrator","",46,[[],["migrationdata",3]]],[11,"clone","fxa_client::internal::oauth","",47,[[],["authcircuitbreaker",3]]],[11,"clone","","",48,[[],["refreshtoken",3]]],[11,"clone","","",50,[[],["accesstokeninfo",3]]],[11,"clone","fxa_client::internal::state_persistence","",58,[[],["statev2",3]]],[11,"clone","","",61,[[],["v1authinfo",3]]],[11,"clone","fxa_client::internal","",68,[[],["cachedresponse",3]]],[11,"clone","fxa_client","",74,[[],["scopedkey",3]]],[11,"default","fxa_client::internal::oauth","",47,[[]]],[11,"default","fxa_client::internal::telemetry","",63,[[]]],[11,"default","","",65,[[],["fxatelemetry",3]]],[11,"eq","fxa_client::internal::device","",16,[[["capability",4]],["bool",15]]],[11,"eq","fxa_client::internal::http_client","",45,[[["duplicatetokenresponse",3]],["bool",15]]],[11,"ne","","",45,[[["duplicatetokenresponse",3]],["bool",15]]],[11,"deref","fxa_client::internal::device","",13,[[],["deviceresponsecommon",3]]],[11,"fmt","fxa_client::internal::commands::send_tab","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::commands","",7,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::config","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::error","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::http_client","",32,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::device","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::http_client","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::oauth","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::push","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client","",74,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::telemetry","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal","",68,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client::internal::error","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","fxa_client","",69,[[["formatter",3]],["result",6]]],[11,"hash","fxa_client::internal::device","",16,[[]]],[11,"try_from","fxa_client","",84,[[["incomingdevicecommand",4]],["result",6]]],[11,"try_from","","",76,[[["device",3]],["result",6]]],[11,"try_from","","",88,[[["attachedclient",3]],["result",6]]],[11,"try_from","","",75,[[["url",3]],["result",6]]],[11,"try_from","","",73,[[["accesstokeninfo",3]],["result",6]]],[11,"source","fxa_client::internal::error","",17,[[],[["error",8],["option",4]]]],[11,"deserialize","fxa_client::internal::commands::send_tab","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","fxa_client::internal::config","",9,[[],["result",4]]],[11,"deserialize","fxa_client::internal::device","",16,[[],["result",4]]],[11,"deserialize","fxa_client::internal::http_client","",25,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","fxa_client::internal::device","",14,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","fxa_client::internal::http_client","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","fxa_client::internal::migrator","",46,[[],["result",4]]],[11,"deserialize","fxa_client::internal::oauth","",48,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"deserialize","fxa_client::internal::push","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","fxa_client::internal::state_persistence","",57,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","","",61,[[],["result",4]]],[11,"deserialize","fxa_client::internal","",68,[[],["result",4]]],[11,"deserialize","fxa_client","",74,[[],["result",4]]],[11,"serialize","fxa_client::internal::commands::send_tab","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","fxa_client::internal::config","",9,[[],["result",4]]],[11,"serialize","fxa_client::internal::device","",16,[[],["result",4]]],[11,"serialize","fxa_client::internal::http_client","",25,[[],["result",4]]],[11,"serialize","fxa_client::internal::device","",14,[[],["result",4]]],[11,"serialize","fxa_client::internal::http_client","",33,[[],["result",4]]],[11,"serialize","fxa_client::internal::device","",12,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","fxa_client::internal::http_client","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","fxa_client::internal::migrator","",46,[[],["result",4]]],[11,"serialize","fxa_client::internal::oauth","",48,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","fxa_client::internal::state_persistence","",57,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"serialize","fxa_client::internal::telemetry","",62,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","fxa_client::internal","",68,[[],["result",4]]],[11,"serialize","fxa_client","",74,[[],["result",4]]],[11,"get_devices","fxa_client::internal","Fetches the list of devices from the current account …",67,[[["bool",15]],[["vec",3],["result",6]]]],[11,"get_current_device","","",67,[[],[["option",4],["result",6]]]],[11,"register_capabilities","","Replaces the internal set of \\\"tracked\\\" device …",67,[[],[["result",6],["hashmap",3]]]],[11,"initialize_device","","Initalizes our own device, most of the time this will be …",67,[[["type",4],["str",15]],["result",6]]],[11,"ensure_capabilities","","Register a set of device capabilities against the current …",67,[[],["result",6]]],[11,"reregister_current_capabilities","","Re-register the device capabilities, this should only be …",67,[[],["result",6]]],[11,"invoke_command","","",67,[[["device",3],["value",4],["str",15]],["result",6]]],[11,"poll_device_commands","","Poll and parse any pending available command for our …",67,[[["commandfetchreason",4]],[["result",6],["vec",3]]]],[11,"ios_fetch_device_command","","Retrieve and parse a specific command designated by its …",67,[[["u64",15]],[["incomingdevicecommand",4],["result",6]]]],[11,"fetch_and_parse_commands","","",67,[[["commandfetchreason",4],["option",4],["u64",15]],[["result",6],["vec",3]]]],[11,"parse_commands_messages","","",67,[[["commandfetchreason",4],["vec",3],["pendingcommand",3]],[["result",6],["vec",3]]]],[11,"parse_command","","",67,[[["commandfetchreason",4],["pendingcommand",3]],[["incomingdevicecommand",4],["result",6]]]],[11,"set_device_name","","",67,[[["str",15]],["result",6]]],[11,"clear_device_name","","",67,[[],["result",6]]],[11,"set_push_subscription","","",67,[[["pushsubscription",3]],["result",6]]],[11,"register_command","","",67,[[["str",15]],["result",6]]],[11,"unregister_command","","",67,[[["str",15]],["result",6]]],[11,"clear_commands","","",67,[[],["result",6]]],[11,"replace_device","","",67,[[["str",15],["hashmap",3],["type",4],["option",4]],["result",6]]],[11,"update_device","","",67,[[["deviceupdaterequest",3]],["result",6]]],[11,"get_current_device_id","","Retrieve the current device id from state",67,[[],[["string",3],["result",6]]]],[11,"migrate_from_session_token","","Migrate from a logged-in with a sessionToken Firefox …",67,[[["bool",15],["str",15]],[["fxamigrationresult",3],["result",6]]]],[11,"is_in_migration_state","","Check if the client is in a pending migration state",67,[[],["migrationstate",4]]],[11,"try_migration","","",67,[[],[["fxamigrationresult",3],["result",6]]]],[11,"network_migration","","",67,[[],["result",6]]],[11,"get_attached_clients","","Fetches the list of attached clients connected to the …",67,[[],[["result",6],["vec",3]]]],[11,"get_access_token","","Fetch a short-lived access token using the saved refresh …",67,[[["u64",15],["option",4],["str",15]],[["result",6],["accesstokeninfo",3]]]],[11,"get_session_token","","Retrieve the current session token from state",67,[[],[["string",3],["result",6]]]],[11,"check_authorization_status","","Check whether user is authorized using our refresh token.",67,[[],[["result",6],["introspectinfo",3]]]],[11,"begin_pairing_flow","","Initiate a pairing flow and return a URL that should be …",67,[[["metricsparams",3],["option",4],["str",15]],[["string",3],["result",6]]]],[11,"begin_oauth_flow","","Initiate an OAuth login flow and return a URL that should …",67,[[["metricsparams",3],["option",4],["str",15]],[["string",3],["result",6]]]],[11,"authorize_code_using_session_token","","Fetch an OAuth code for a particular client using a …",67,[[["authorizationparameters",3]],[["string",3],["result",6]]]],[11,"oauth_flow","","",67,[[["url",3]],[["string",3],["result",6]]]],[11,"complete_oauth_flow","","Complete an OAuth flow initiated in <code>begin_oauth_flow</code> or …",67,[[["str",15]],["result",6]]],[11,"handle_oauth_response","","",67,[[["option",4],["oauthtokenresponse",3],["scopedkeysflow",3]],["result",6]]],[11,"handle_session_token_change","","Typically called during a password change flow. …",67,[[["str",15]],["result",6]]],[11,"clear_access_token_cache","","<strong>💾 This method may alter the persisted account state.</strong>",67,[[]]],[11,"append_params_to_url","fxa_client","",72,[[["url",3]]]],[11,"get_profile","fxa_client::internal","Fetch the profile for the user. This method will …",67,[[["bool",15]],[["profile",3],["result",6]]]],[11,"get_profile_helper","","",67,[[["bool",15]],[["profile",3],["result",6]]]],[11,"handle_push_message","","Handle any incoming push message payload coming from the …",67,[[["str",15]],[["result",6],["vec",3]]]],[11,"get_scoped_key","","",67,[[["str",15]],[["result",6],["scopedkey",3]]]],[11,"key_bytes","fxa_client","",74,[[],[["result",6],["vec",3]]]],[11,"generate_send_tab_command_data","fxa_client::internal","Generate the Send Tab command to be registered with the …",67,[[],[["string",3],["result",6]]]],[11,"load_or_generate_keys","","",67,[[],[["result",6],["privatesendtabkeysv1",3]]]],[11,"send_single_tab","","Send a single tab to another device designated by its …",67,[[["str",15]],["result",6]]],[11,"handle_send_tab_command","","",67,[[["receivedreason",4],["option",4],["getdeviceresponse",3],["value",4]],[["incomingdevicecommand",4],["result",6]]]],[11,"diagnose_remote_keys","","",67,[[["privatesendtabkeysv1",3]],["result",6]]],[11,"gather_telemetry","","Gathers and resets telemetry for this account instance. …",67,[[],[["string",3],["result",6]]]]],"p":[[3,"EncryptedSendTabPayload"],[3,"SendTabPayload"],[3,"TabHistoryEntry"],[4,"VersionnedPrivateSendTabKeys"],[3,"PrivateSendTabKeysV1"],[3,"SendTabKeysPayload"],[3,"PublicSendTabKeys"],[4,"IncomingDeviceCommand"],[13,"TabReceived"],[3,"Config"],[3,"RemoteConfig"],[3,"Location"],[4,"Type"],[3,"Device"],[3,"PushSubscription"],[4,"CommandFetchReason"],[4,"Capability"],[4,"ErrorKind"],[13,"RemoteError"],[3,"ErrorData"],[3,"Error"],[8,"FxAClient"],[4,"HttpClientState"],[13,"Backoff"],[3,"Client"],[3,"AuthorizationRequestParameters"],[3,"HawkRequestBuilder"],[3,"ClientConfigurationResponse"],[3,"OpenIdConfigurationResponse"],[3,"ResponseAndETag"],[3,"PendingCommandsResponse"],[3,"PendingCommand"],[3,"CommandData"],[3,"DeviceUpdateRequest"],[3,"DeviceUpdateRequestBuilder"],[3,"DeviceResponseCommon"],[3,"GetAttachedClientResponse"],[4,"OAauthTokenRequest"],[13,"UsingRefreshToken"],[13,"UsingCode"],[3,"OAuthTokenResponse"],[3,"OAuthAuthResponse"],[3,"IntrospectResponse"],[3,"ProfileResponse"],[3,"ScopedKeyDataResponse"],[3,"DuplicateTokenResponse"],[3,"MigrationData"],[3,"AuthCircuitBreaker"],[3,"RefreshToken"],[3,"OAuthFlow"],[3,"AccessTokenInfo"],[4,"PushPayload"],[3,"CommandReceivedPushPayload"],[3,"DeviceConnectedPushPayload"],[3,"DeviceDisconnectedPushPayload"],[3,"AccountDestroyedPushPayload"],[3,"ScopedKeysFlow"],[4,"PersistedState"],[3,"StateV2"],[3,"StateV1"],[3,"V1Config"],[3,"V1AuthInfo"],[4,"ReceivedReason"],[3,"SentCommand"],[3,"ReceivedCommand"],[3,"FxaTelemetry"],[8,"Xorable"],[3,"FirefoxAccount"],[3,"CachedResponse"],[4,"FxaError"],[3,"FirefoxAccount"],[3,"AuthorizationInfo"],[3,"MetricsParams"],[3,"AccessTokenInfo"],[3,"ScopedKey"],[3,"AuthorizationParameters"],[3,"Device"],[4,"DeviceType"],[3,"DevicePushSubscription"],[4,"DeviceCapability"],[4,"AccountEvent"],[13,"CommandReceived"],[13,"DeviceConnected"],[13,"DeviceDisconnected"],[4,"IncomingDeviceCommand"],[13,"TabReceived"],[3,"SendTabPayload"],[3,"TabHistoryEntry"],[3,"AttachedClient"],[3,"Profile"],[4,"MigrationState"],[3,"FxAMigrationResult"],[6,"Result"]]},\
"interrupt_support":{"doc":"","i":[[8,"Interruptee","interrupt_support","Represents the state of something that may be …",null,null],[10,"was_interrupted","","",0,[[],["bool",15]]],[11,"err_if_interrupted","","",0,[[],[["interrupted",3],["result",4]]]],[3,"NeverInterrupts","","A convenience implementation, should only be used in …",null,null],[3,"Interrupted","","The error returned by err_if_interrupted.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"was_interrupted","","",1,[[],["bool",15]]],[11,"clone","","",2,[[],["interrupted",3]]],[11,"eq","","",2,[[["interrupted",3]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[8,"Interruptee"],[3,"NeverInterrupts"],[3,"Interrupted"]]},\
"logins":{"doc":"","i":[[0,"error","logins","",null,null],[4,"ErrorKind","logins::error","",null,null],[13,"InvalidLogin","","",0,null],[13,"BadSyncStatus","","",0,null],[13,"DuplicateGuid","","",0,null],[13,"NoSuchRecord","","",0,null],[13,"NonEmptyTable","","",0,null],[13,"InvalidSalt","","",0,null],[13,"SyncAdapterError","","",0,null],[13,"JsonError","","",0,null],[13,"SqlError","","",0,null],[13,"UrlParseError","","",0,null],[13,"Interrupted","","",0,null],[13,"ProtobufDecodeError","","",0,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",1,null],[12,"backtrace","","",1,null],[11,"new","","",1,[[["errorkind",4]]]],[11,"get_backtrace","","",1,[[],[["option",4],["mutex",3]]]],[3,"Error","","",null,null],[12,"0","","",2,null],[11,"kind","","",2,[[],["errorkind",4]]],[11,"backtrace","","",2,[[],[["option",4],["mutex",3]]]],[4,"InvalidLogin","","",null,null],[13,"EmptyOrigin","","",3,null],[13,"EmptyPassword","","",3,null],[13,"DuplicateLogin","","",3,null],[13,"BothTargets","","",3,null],[13,"NoTarget","","",3,null],[13,"IllegalFieldValue","","",3,null],[12,"field_info","logins::error::InvalidLogin","",4,null],[11,"label","logins::error","",2,[[],["str",15]]],[0,"login","logins","Login RecordsThe core datatype managed by this component …",null,null],[3,"Login","logins::login","",null,null],[12,"guid","","",5,null],[12,"hostname","","",5,null],[12,"form_submit_url","","",5,null],[12,"http_realm","","",5,null],[12,"username","","",5,null],[12,"password","","",5,null],[12,"username_field","","",5,null],[12,"password_field","","",5,null],[12,"time_created","","",5,null],[12,"time_password_changed","","",5,null],[12,"time_last_used","","",5,null],[12,"times_used","","",5,null],[5,"deserialize_timestamp","","",null,[[],[["i64",15],["result",4]]]],[5,"string_or_default","","",null,[[["row",3],["str",15]],[["result",6],["string",3]]]],[11,"guid","","",5,[[],["guid",3]]],[11,"guid_str","","",5,[[],["str",15]]],[11,"check_valid","","Checks whether the Login is valid, without attempting to …",5,[[],["result",6]]],[11,"fixup","","Return either the existing login, a fixed-up verion, or …",5,[[],["result",6]]],[11,"maybe_fixup","","Like <code>fixup()</code> above, but takes <code>self</code> by reference and …",5,[[],[["result",6],["option",4]]]],[11,"validate_and_fixup_origin","","Internal helper for validation and fixups of an \\\"origin\\\" …",5,[[["str",15]],[["option",4],["result",6]]]],[11,"validate_and_fixup","","Internal helper for doing validation and fixups.",5,[[["bool",15]],[["result",6],["option",4]]]],[11,"from_row","","",5,[[["row",3]],[["result",6],["login",3]]]],[3,"MirrorLogin","","",null,null],[12,"login","","",6,null],[12,"is_overridden","","",6,null],[12,"server_modified","","",6,null],[11,"guid_str","","",6,[[],["str",15]]],[11,"from_row","","",6,[[["row",3]],[["mirrorlogin",3],["result",6]]]],[4,"SyncStatus","","",null,null],[13,"Synced","","",7,null],[13,"Changed","","",7,null],[13,"New","","",7,null],[11,"from_u8","","",7,[[["u8",15]],["result",6]]],[3,"LocalLogin","","",null,null],[12,"login","","",8,null],[12,"sync_status","","",8,null],[12,"is_deleted","","",8,null],[12,"local_modified","","",8,null],[11,"guid_str","","",8,[[],["str",15]]],[11,"from_row","","",8,[[["row",3]],[["result",6],["locallogin",3]]]],[3,"SyncLoginData","","",null,null],[12,"guid","","",9,null],[12,"local","","",9,null],[12,"mirror","","",9,null],[12,"inbound","","",9,null],[11,"guid_str","","",9,[[],["str",15]]],[11,"guid","","",9,[[],["guid",3]]],[11,"from_payload","","",9,[[["servertimestamp",3],["payload",3]],[["error",3],["result",4]]]],[11,"set_local","","",9,[[["locallogin",3]],["result",6]]],[11,"set_mirror","","",9,[[["mirrorlogin",3]],["result",6]]],[3,"LoginDelta","","",null,null],[12,"hostname","","",10,null],[12,"password","","",10,null],[12,"username","","",10,null],[12,"http_realm","","",10,null],[12,"form_submit_url","","",10,null],[12,"time_created","","",10,null],[12,"time_last_used","","",10,null],[12,"time_password_changed","","",10,null],[12,"password_field","","",10,null],[12,"username_field","","",10,null],[12,"times_used","","",10,null],[11,"merge","","",10,[[["bool",15],["logindelta",3]],["logindelta",3]]],[11,"apply_delta","","",5,[[["logindelta",3]]]],[11,"delta","","",5,[[["login",3]],["logindelta",3]]],[0,"db","logins","",null,null],[3,"MigrationPhaseMetrics","logins::db","",null,null],[12,"num_processed","","",11,null],[12,"num_succeeded","","",11,null],[12,"num_failed","","",11,null],[12,"total_duration","","",11,null],[12,"errors","","",11,null],[3,"MigrationMetrics","","",null,null],[12,"fixup_phase","","",12,null],[12,"insert_phase","","",12,null],[12,"num_processed","","",12,null],[12,"num_succeeded","","",12,null],[12,"num_failed","","",12,null],[12,"total_duration","","",12,null],[12,"errors","","",12,null],[3,"LoginDb","","",null,null],[12,"db","","",13,null],[12,"interrupt_counter","","",13,null],[11,"with_connection","","",13,[[["connection",3],["option",4],["str",15]],["result",6]]],[11,"open","","",13,[[["option",4],["str",15]],["result",6]]],[11,"open_with_salt","","",13,[[["str",15]],["result",6]]],[11,"open_in_memory","","",13,[[["option",4],["str",15]],["result",6]]],[11,"open_and_get_salt","","Opens an existing database and fetches the salt. This …",13,[[["str",15]],[["result",6],["string",3]]]],[11,"open_and_migrate_to_plaintext_header","","",13,[[["str",15]],["result",6]]],[11,"disable_mem_security","","",13,[[],["result",6]]],[11,"rekey_database","","Change the key on an existing encrypted database, it must …",13,[[["str",15]],["result",6]]],[11,"new_interrupt_handle","","",13,[[],["sqlinterrupthandle",3]]],[11,"begin_interrupt_scope","","",13,[[],["sqlinterruptscope",3]]],[5,"ensure_valid_salt","","",null,[[["str",15]],["result",6]]],[5,"sqlcipher_3_compat","","",null,[[["connection",3]],["result",6]]],[11,"mark_as_synchronized","","",13,[[["servertimestamp",3],["sqlinterruptscope",3]],["result",6]]],[11,"fetch_login_data","","",13,[[["sqlinterruptscope",3],["engineincoming",3]],[["result",6],["vec",3]]]],[11,"find_dupe","","",13,[[["login",3]],[["option",4],["result",6]]]],[11,"get_all","","",13,[[],[["vec",3],["result",6]]]],[11,"get_by_base_domain","","",13,[[["str",15]],[["vec",3],["result",6]]]],[11,"get_by_id","","",13,[[["str",15]],[["option",4],["result",6]]]],[11,"touch","","",13,[[["str",15]],["result",6]]],[11,"add","","",13,[[["login",3]],[["result",6],["login",3]]]],[11,"import_multiple","","",13,[[],[["result",6],["migrationmetrics",3]]]],[11,"update","","",13,[[["login",3]],["result",6]]],[11,"check_valid_with_no_dupes","","",13,[[["login",3]],["result",6]]],[11,"fixup_and_check_for_dupes","","",13,[[["login",3]],[["result",6],["login",3]]]],[11,"check_for_dupes","","",13,[[["login",3]],["result",6]]],[11,"dupe_exists","","",13,[[["login",3]],[["result",6],["bool",15]]]],[11,"potential_dupes_ignoring_username","","",13,[[["login",3]],[["vec",3],["result",6]]]],[11,"exists","","",13,[[["str",15]],[["result",6],["bool",15]]]],[11,"delete","","Delete the record with the provided id. Returns true if …",13,[[["str",15]],[["result",6],["bool",15]]]],[11,"mark_mirror_overridden","","",13,[[["str",15]],["result",6]]],[11,"ensure_local_overlay_exists","","",13,[[["str",15]],["result",6]]],[11,"clone_mirror_to_overlay","","",13,[[["str",15]],[["result",6],["usize",15]]]],[11,"reset","","",13,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",13,[[["sqlinterruptscope",3]],["result",6]]],[11,"wipe_local","","",13,[[],["result",6]]],[11,"reconcile","","",13,[[["sqlinterruptscope",3],["engineincoming",3],["servertimestamp",3],["synclogindata",3],["vec",3]],[["result",6],["updateplan",3]]]],[11,"execute_plan","","",13,[[["updateplan",3],["sqlinterruptscope",3]],["result",6]]],[11,"fetch_outgoing","","",13,[[["servertimestamp",3],["sqlinterruptscope",3]],[["result",6],["outgoingchangeset",6]]]],[11,"do_apply_incoming","","",13,[[["engine",3],["sqlinterruptscope",3],["incomingchangeset",6]],[["result",6],["outgoingchangeset",6]]]],[11,"put_meta","","",13,[[["tosql",8],["str",15]],["result",6]]],[11,"get_meta","","",13,[[["str",15]],[["result",6],["option",4]]]],[11,"delete_meta","","",13,[[["str",15]],["result",6]]],[11,"set_last_sync","","",13,[[["servertimestamp",3]],["result",6]]],[11,"get_last_sync","","",13,[[],[["result",6],["option",4]]]],[11,"set_global_state","","",13,[[["option",4]],["result",6]]],[11,"get_global_state","","",13,[[],[["option",4],["result",6]]]],[11,"migrate_global_state","","A utility we can kill by the end of 2019 ;)",13,[[],["result",6]]],[3,"LoginStore","","",null,null],[12,"db","","",14,null],[12,"scope","","",14,null],[11,"new","","",14,[[["logindb",3]]]],[3,"GET_ALL_SQL","","",null,null],[12,"__private_field","","",15,null],[3,"GET_BY_GUID_SQL","","",null,null],[12,"__private_field","","",16,null],[3,"CLONE_ENTIRE_MIRROR_SQL","","",null,null],[12,"__private_field","","",17,null],[3,"CLONE_SINGLE_MIRROR_SQL","","",null,null],[12,"__private_field","","",18,null],[0,"schema","logins","Logins Schema v4The schema we use is a evolution of the …",null,null],[17,"VERSION","logins::schema","Note that firefox-ios is currently on version 3. Version …",null,null],[17,"COMMON_COLS","","Every column shared by both tables except for <code>id</code>",null,null],[17,"COMMON_SQL","","",null,null],[3,"CREATE_LOCAL_TABLE_SQL","","",null,null],[12,"__private_field","","",19,null],[3,"CREATE_MIRROR_TABLE_SQL","","",null,null],[12,"__private_field","","",20,null],[3,"SET_VERSION_SQL","","",null,null],[12,"__private_field","","",21,null],[17,"CREATE_META_TABLE_SQL","","",null,null],[17,"CREATE_OVERRIDE_HOSTNAME_INDEX_SQL","","",null,null],[17,"CREATE_DELETED_HOSTNAME_INDEX_SQL","","",null,null],[17,"UPDATE_LOCAL_TIMESTAMPS_TO_MILLIS_SQL","","",null,null],[17,"UPDATE_MIRROR_TIMESTAMPS_TO_MILLIS_SQL","","",null,null],[7,"LAST_SYNC_META_KEY","","",null,null],[7,"GLOBAL_STATE_META_KEY","","",null,null],[7,"GLOBAL_SYNCID_META_KEY","","",null,null],[7,"COLLECTION_SYNCID_META_KEY","","",null,null],[5,"init","","",null,[[["connection",3]],["result",6]]],[5,"upgrade","","",null,[[["i64",15],["connection",3]],["result",6]]],[5,"create","","",null,[[["connection",3]],["result",6]]],[5,"drop","","",null,[[["connection",3]],["result",6]]],[0,"store","logins","",null,null],[3,"PasswordStore","logins::store","",null,null],[12,"db","","",22,null],[12,"mem_cached_state","","",22,null],[11,"new","","",22,[[["option",4],["str",15]],["result",6]]],[11,"new_with_salt","","",22,[[["str",15]],["result",6]]],[11,"new_in_memory","","",22,[[["option",4],["str",15]],["result",6]]],[11,"list","","",22,[[],[["vec",3],["result",6]]]],[11,"get","","",22,[[["str",15]],[["option",4],["result",6]]]],[11,"get_by_base_domain","","",22,[[["str",15]],[["vec",3],["result",6]]]],[11,"potential_dupes_ignoring_username","","",22,[[["login",3]],[["vec",3],["result",6]]]],[11,"touch","","",22,[[["str",15]],["result",6]]],[11,"delete","","",22,[[["str",15]],[["result",6],["bool",15]]]],[11,"wipe","","",22,[[],["result",6]]],[11,"wipe_local","","",22,[[],["result",6]]],[11,"reset","","",22,[[],["result",6]]],[11,"update","","",22,[[["login",3]],["result",6]]],[11,"add","","",22,[[["login",3]],[["result",6],["string",3]]]],[11,"import_multiple","","",22,[[],[["result",6],["migrationmetrics",3]]]],[11,"disable_mem_security","","",22,[[],["result",6]]],[11,"rekey_database","","",22,[[["str",15]],["result",6]]],[11,"conn","","",22,[[],["connection",3]]],[11,"new_interrupt_handle","","",22,[[],["sqlinterrupthandle",3]]],[11,"sync","","A convenience wrapper around sync_multiple.",22,[[["sync15storageclientinit",3],["keybundle",3]],[["result",6],["synctelemetryping",3]]]],[11,"check_valid_with_no_dupes","","",22,[[["login",3]],["result",6]]],[0,"update_plan","logins","",null,null],[3,"UpdatePlan","logins::update_plan","",null,null],[12,"delete_mirror","","",23,null],[12,"delete_local","","",23,null],[12,"local_updates","","",23,null],[12,"mirror_inserts","","",23,null],[12,"mirror_updates","","",23,null],[11,"plan_two_way_merge","","",23,[[["login",3]]]],[11,"plan_three_way_merge","","",23,[[["mirrorlogin",3],["locallogin",3],["servertimestamp",3],["login",3]]]],[11,"plan_delete","","",23,[[["guid",3]]]],[11,"plan_mirror_update","","",23,[[["servertimestamp",3],["login",3]]]],[11,"plan_mirror_insert","","",23,[[["bool",15],["servertimestamp",3],["login",3]]]],[11,"perform_deletes","","",23,[[["connection",3],["sqlinterruptscope",3]],["result",6]]],[11,"perform_mirror_updates","","",23,[[["connection",3],["sqlinterruptscope",3]],["result",6]]],[11,"perform_mirror_inserts","","",23,[[["connection",3],["sqlinterruptscope",3]],["result",6]]],[11,"perform_local_updates","","",23,[[["connection",3],["sqlinterruptscope",3]],["result",6]]],[11,"execute","","",23,[[["connection",3],["sqlinterruptscope",3]],["result",6]]],[0,"util","logins","",null,null],[5,"url_host_port","logins::util","",null,[[["str",15]],[["option",4],["string",3]]]],[5,"system_time_millis_from_row","","",null,[[["row",3],["str",15]],[["systemtime",3],["result",6]]]],[5,"duration_ms_i64","","",null,[[["duration",3]],["i64",15]]],[5,"system_time_ms_i64","","",null,[[["systemtime",3]],["i64",15]]],[0,"ffi","logins","",null,null],[0,"error_codes","logins::ffi","",null,null],[17,"UNEXPECTED","logins::ffi::error_codes","An unexpected error occurred which likely cannot be …",null,null],[17,"AUTH_INVALID","","Indicates the FxA credentials are invalid, and should be …",null,null],[17,"NO_SUCH_RECORD","","Returned from an <code>update()</code> call where the record ID did …",null,null],[17,"DUPLICATE_GUID","","Returned from an <code>add()</code> call that was provided an ID, …",null,null],[17,"INVALID_KEY","","Either the file is not a database, or it is not encrypted …",null,null],[17,"NETWORK","","A request to the sync server failed.",null,null],[17,"INTERRUPTED","","An operation has been interrupted.",null,null],[17,"INVALID_SALT","","An invalid salt was provided.",null,null],[17,"INVALID_LOGIN_EMPTY_ORIGIN","","",null,null],[17,"INVALID_LOGIN_EMPTY_PASSWORD","","",null,null],[17,"INVALID_LOGIN_DUPLICATE_LOGIN","","",null,null],[17,"INVALID_LOGIN_BOTH_TARGETS","","",null,null],[17,"INVALID_LOGIN_NO_TARGET","","",null,null],[17,"INVALID_LOGIN_ILLEGAL_FIELD_VALUE","","",null,null],[5,"get_code","logins::ffi","",null,[[["error",3]],["errorcode",3]]],[0,"msg_types","logins","",null,null],[3,"PasswordInfo","logins::msg_types","",null,null],[12,"id","","",24,null],[12,"hostname","","",24,null],[12,"password","","",24,null],[12,"username","","",24,null],[12,"http_realm","","",24,null],[12,"form_submit_url","","",24,null],[12,"username_field","","",24,null],[12,"password_field","","",24,null],[12,"times_used","","",24,null],[12,"time_created","","",24,null],[12,"time_last_used","","",24,null],[12,"time_password_changed","","",24,null],[11,"http_realm","","Returns the value of <code>http_realm</code>, or the default value if …",24,[[],["str",15]]],[11,"form_submit_url","","Returns the value of <code>form_submit_url</code>, or the default …",24,[[],["str",15]]],[3,"PasswordInfos","","",null,null],[12,"infos","","",25,null],[3,"LoginDb","logins","",null,null],[12,"db","","",13,null],[12,"interrupt_counter","","",13,null],[3,"LoginStore","","",null,null],[12,"db","","",14,null],[12,"scope","","",14,null],[4,"ErrorKind","","",null,null],[13,"InvalidLogin","","",0,null],[13,"BadSyncStatus","","",0,null],[13,"DuplicateGuid","","",0,null],[13,"NoSuchRecord","","",0,null],[13,"NonEmptyTable","","",0,null],[13,"InvalidSalt","","",0,null],[13,"SyncAdapterError","","",0,null],[13,"JsonError","","",0,null],[13,"SqlError","","",0,null],[13,"UrlParseError","","",0,null],[13,"Interrupted","","",0,null],[13,"ProtobufDecodeError","","",0,null],[6,"Result","","",null,null],[3,"Error","","",null,null],[12,"0","","",2,null],[4,"InvalidLogin","","",null,null],[13,"EmptyOrigin","","",3,null],[13,"EmptyPassword","","",3,null],[13,"DuplicateLogin","","",3,null],[13,"BothTargets","","",3,null],[13,"NoTarget","","",3,null],[13,"IllegalFieldValue","","",3,null],[12,"field_info","logins::InvalidLogin","",4,null],[3,"Login","logins","",null,null],[12,"guid","","",5,null],[12,"hostname","","",5,null],[12,"form_submit_url","","",5,null],[12,"http_realm","","",5,null],[12,"username","","",5,null],[12,"password","","",5,null],[12,"username_field","","",5,null],[12,"password_field","","",5,null],[12,"time_created","","",5,null],[12,"time_password_changed","","",5,null],[12,"time_last_used","","",5,null],[12,"times_used","","",5,null],[3,"PasswordStore","","",null,null],[12,"db","","",22,null],[12,"mem_cached_state","","",22,null],[11,"from","logins::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","logins::login","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"get_hash","","",5,[[],["u64",15]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","logins::db","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","logins::schema","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","logins::store","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","logins::update_plan","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","logins::msg_types","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"as_mut","logins::login","",8,[[],["login",3]]],[11,"as_mut","","",6,[[],["login",3]]],[11,"as_ref","","",8,[[],["login",3]]],[11,"as_ref","","",6,[[],["login",3]]],[11,"from","logins::error","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["interrupted",3]]]],[11,"from","","",0,[[["decodeerror",3]]]],[11,"from","","",2,[[["errorkind",4]],["error",3]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["parseerror",4]]]],[11,"from","","",2,[[["error",4]]]],[11,"from","","",2,[[["invalidlogin",4]]]],[11,"from","","",2,[[["interrupted",3]]]],[11,"from","","",2,[[["decodeerror",3]]]],[11,"from","logins::msg_types","",24,[[["login",3]]]],[11,"from","logins::login","",5,[[["passwordinfo",3]]]],[11,"from","","",5,[[["locallogin",3]]]],[11,"from","","",8,[[["login",3]]]],[11,"from","","",5,[[["mirrorlogin",3]]]],[11,"from","","",6,[[["login",3]]]],[11,"clone","","",5,[[],["login",3]]],[11,"clone","","",6,[[],["mirrorlogin",3]]],[11,"clone","","",7,[[],["syncstatus",4]]],[11,"clone","","",8,[[],["locallogin",3]]],[11,"clone","","",10,[[],["logindelta",3]]],[11,"clone","logins::db","",11,[[],["migrationphasemetrics",3]]],[11,"clone","","",12,[[],["migrationmetrics",3]]],[11,"clone","logins::update_plan","",23,[[],["updateplan",3]]],[11,"clone","logins::msg_types","",24,[[],["passwordinfo",3]]],[11,"clone","","",25,[[],["passwordinfos",3]]],[11,"default","logins::login","",5,[[],["login",3]]],[11,"default","","",10,[[],["logindelta",3]]],[11,"default","logins::db","",11,[[],["migrationphasemetrics",3]]],[11,"default","","",12,[[],["migrationmetrics",3]]],[11,"default","logins::update_plan","",23,[[],["updateplan",3]]],[11,"default","logins::msg_types","",24,[[],["passwordinfo",3]]],[11,"default","","",25,[[],["passwordinfos",3]]],[11,"cmp","logins::login","",7,[[["syncstatus",4]],["ordering",4]]],[11,"eq","","",5,[[["login",3]],["bool",15]]],[11,"ne","","",5,[[["login",3]],["bool",15]]],[11,"eq","","",7,[[["syncstatus",4]],["bool",15]]],[11,"eq","logins::db","",11,[[["migrationphasemetrics",3]],["bool",15]]],[11,"ne","","",11,[[["migrationphasemetrics",3]],["bool",15]]],[11,"eq","","",12,[[["migrationmetrics",3]],["bool",15]]],[11,"ne","","",12,[[["migrationmetrics",3]],["bool",15]]],[11,"eq","logins::msg_types","",24,[[["passwordinfo",3]],["bool",15]]],[11,"ne","","",24,[[["passwordinfo",3]],["bool",15]]],[11,"eq","","",25,[[["passwordinfos",3]],["bool",15]]],[11,"ne","","",25,[[["passwordinfos",3]],["bool",15]]],[11,"partial_cmp","logins::login","",7,[[["syncstatus",4]],[["option",4],["ordering",4]]]],[11,"deref","logins::db","",13,[[],["connection",3]]],[11,"deref","","",15,[[],["string",3]]],[11,"deref","","",16,[[],["string",3]]],[11,"deref","","",17,[[],["string",3]]],[11,"deref","","",18,[[],["string",3]]],[11,"deref","logins::schema","",19,[[],["string",3]]],[11,"deref","","",20,[[],["string",3]]],[11,"deref","","",21,[[],["string",3]]],[11,"fmt","logins::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","logins::login","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","logins::db","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","logins::update_plan","",23,[[["formatter",3]],["result",6]]],[11,"fmt","logins::msg_types","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","logins::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","logins::login","",5,[[]]],[11,"hash","","",7,[[]]],[11,"source","logins::error","",0,[[],[["option",4],["error",8]]]],[11,"serialize","logins::login","",5,[[],["result",4]]],[11,"serialize","logins::db","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"deserialize","logins::login","",5,[[],["result",4]]],[11,"deserialize","logins::db","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"collection_name","","",14,[[],[["cow",4],["str",15]]]],[11,"apply_incoming","","",14,[[["engine",3],["vec",3],["incomingchangeset",6]],[["outgoingchangeset",6],["result",6]]]],[11,"sync_finished","","",14,[[["servertimestamp",3],["vec",3],["guid",3]],["result",6]]],[11,"get_collection_requests","","",14,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[11,"get_sync_assoc","","",14,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",14,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",14,[[],["result",6]]],[11,"initialize","","",15,[[]]],[11,"initialize","","",16,[[]]],[11,"initialize","","",17,[[]]],[11,"initialize","","",18,[[]]],[11,"initialize","logins::schema","",19,[[]]],[11,"initialize","","",20,[[]]],[11,"initialize","","",21,[[]]],[11,"ffi_default","logins::msg_types","",24,[[]]],[11,"into_ffi_value","","",24,[[]]],[11,"ffi_default","","",25,[[]]],[11,"into_ffi_value","","",25,[[]]],[11,"encode_raw","","",24,[[]]],[11,"merge_field","","",24,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",24,[[],["usize",15]]],[11,"clear","","",24,[[]]],[11,"encode_raw","","",25,[[]]],[11,"merge_field","","",25,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",25,[[],["usize",15]]],[11,"clear","","",25,[[]]],[11,"conn","logins::db","",13,[[],["connection",3]]]],"p":[[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[4,"InvalidLogin"],[13,"IllegalFieldValue"],[3,"Login"],[3,"MirrorLogin"],[4,"SyncStatus"],[3,"LocalLogin"],[3,"SyncLoginData"],[3,"LoginDelta"],[3,"MigrationPhaseMetrics"],[3,"MigrationMetrics"],[3,"LoginDb"],[3,"LoginStore"],[3,"GET_ALL_SQL"],[3,"GET_BY_GUID_SQL"],[3,"CLONE_ENTIRE_MIRROR_SQL"],[3,"CLONE_SINGLE_MIRROR_SQL"],[3,"CREATE_LOCAL_TABLE_SQL"],[3,"CREATE_MIRROR_TABLE_SQL"],[3,"SET_VERSION_SQL"],[3,"PasswordStore"],[3,"UpdatePlan"],[3,"PasswordInfo"],[3,"PasswordInfos"]]},\
"logins_ffi":{"doc":"","i":[[3,"STORES","logins_ffi","",null,null],[12,"__private_field","","",0,null],[5,"sync15_passwords_state_new","","",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"sync15_passwords_state_new_with_salt","","",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"sync15_passwords_num_open_connections","","",null,[[["externerror",3]],["u64",15]]],[5,"bytes_to_key_string","","",null,[[["usize",15]],[["string",3],["option",4]]]],[5,"sync15_passwords_state_new_with_hex_key","","Same as sync15_passwords_state_new, but automatically …",null,[[["u32",15],["externerror",3],["ffistr",3]],["u64",15]]],[5,"sync15_passwords_get_db_salt","","Opens an existing database that stores its salt in the …",null,[[["externerror",3],["ffistr",3]]]],[5,"sync15_passwords_migrate_plaintext_header","","Opens an existing database that stores its salt in the …",null,[[["externerror",3],["ffistr",3]]]],[5,"parse_url","","",null,[[["str",15]],[["url",3],["result",6]]]],[5,"sync15_passwords_disable_mem_security","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_rekey_database","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"sync15_passwords_rekey_database_with_hex_key","","Same as sync15_passwords_rekey_database, but accepts a …",null,[[["u32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_sync","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"sync15_passwords_touch","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"get_buffer","","",null,[[["i32",15]]]],[5,"sync15_passwords_check_valid","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_delete","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["u8",15]]],[5,"sync15_passwords_wipe","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_wipe_local","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_reset","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_new_interrupt_handle","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_interrupt","","",null,[[["externerror",3],["sqlinterrupthandle",3]]]],[5,"sync15_passwords_get_all","","",null,[[["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"sync15_passwords_get_by_base_domain","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"sync15_passwords_potential_dupes_ignoring_username","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"sync15_passwords_get_by_id","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"sync15_passwords_add","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_import","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_update","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"sync15_passwords_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"sync15_passwords_destroy_buffer","","",null,[[["bytebuffer",3]]]],[5,"sync15_passwords_state_destroy","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_passwords_interrupt_handle_destroy","","SafetyThis is equivalent to calling Box::from_raw with …",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"deref","","",0,[[],["concurrenthandlemap",3]]],[11,"initialize","","",0,[[]]]],"p":[[3,"STORES"]]},\
"nimbus":{"doc":"","i":[[0,"dbcache","nimbus","",null,null],[3,"CachedData","nimbus::dbcache","",null,null],[12,"branches_by_experiment","","",0,null],[12,"branches_by_feature","","",0,null],[3,"DatabaseCache","","",null,null],[12,"data","","",1,null],[11,"commit_and_update","","",1,[[["writer",3],["safemoderwtransaction",3],["database",3]],["result",6]]],[11,"get_data","","",1,[[],["result",6]]],[11,"get_experiment_branch","","",1,[[["str",15]],[["result",6],["option",4]]]],[0,"enrollment","nimbus","",null,null],[17,"DB_KEY_GLOBAL_USER_PARTICIPATION","nimbus::enrollment","",null,null],[17,"DEFAULT_GLOBAL_USER_PARTICIPATION","","",null,null],[17,"PREVIOUS_ENROLLMENTS_GC_TIME","","",null,null],[4,"EnrolledReason","","",null,null],[13,"Qualified","","",2,null],[13,"OptIn","","",2,null],[4,"NotEnrolledReason","","",null,null],[13,"OptOut","","",3,null],[13,"NotSelected","","",3,null],[13,"NotTargeted","","",3,null],[13,"EnrollmentsPaused","","",3,null],[4,"DisqualifiedReason","","",null,null],[13,"Error","","",4,null],[13,"OptOut","","",4,null],[13,"NotTargeted","","",4,null],[3,"ExperimentEnrollment","","",null,null],[12,"slug","","",5,null],[12,"status","","",5,null],[11,"from_new_experiment","","Evaluate an experiment enrollment for an experiment we …",5,[[["experiment",3],["vec",3],["bool",15],["appcontext",3],["uuid",3],["availablerandomizationunits",3]],["result",6]]],[11,"from_explicit_opt_in","","Force enroll ourselves in an experiment.",5,[[["experiment",3],["vec",3],["str",15]],["result",6]]],[11,"on_experiment_updated","","Update our enrollment to an experiment we have seen …",5,[[["experiment",3],["vec",3],["bool",15],["appcontext",3],["uuid",3],["availablerandomizationunits",3]],["result",6]]],[11,"on_experiment_ended","","Transition our enrollment to WasEnrolled (Option::Some) …",5,[[["vec",3]],["option",4]]],[11,"on_explicit_opt_out","","Force unenroll ourselves from an experiment.",5,[[["vec",3]],["experimentenrollment",3]]],[11,"reset_telemetry_identifiers","","Reset identifiers in response to application-level …",5,[[["vec",3]]]],[11,"maybe_garbage_collect","","Garbage collect old experiments we\'ve kept a WasEnrolled …",5,[[],["option",4]]],[11,"get_change_event","","",5,[[],["enrollmentchangeevent",3]]],[11,"disqualify_from_enrolled","","If the current state is <code>Enrolled</code>, move to <code>Disqualified</code> …",5,[[["disqualifiedreason",4]]]],[4,"EnrollmentStatus","","",null,null],[13,"Enrolled","","",6,null],[12,"enrollment_id","nimbus::enrollment::EnrollmentStatus","",7,null],[12,"reason","","",7,null],[12,"branch","","",7,null],[12,"feature_id","","",7,null],[13,"NotEnrolled","nimbus::enrollment","",6,null],[12,"reason","nimbus::enrollment::EnrollmentStatus","",8,null],[13,"Disqualified","nimbus::enrollment","",6,null],[12,"enrollment_id","nimbus::enrollment::EnrollmentStatus","",9,null],[12,"reason","","",9,null],[12,"branch","","",9,null],[13,"WasEnrolled","nimbus::enrollment","",6,null],[12,"enrollment_id","nimbus::enrollment::EnrollmentStatus","",10,null],[12,"branch","","",10,null],[12,"experiment_ended_at","","",10,null],[13,"Error","nimbus::enrollment","",6,null],[12,"reason","nimbus::enrollment::EnrollmentStatus","",11,null],[11,"new_enrolled","nimbus::enrollment","",6,[[["enrolledreason",4],["str",15]]]],[11,"is_enrolled","","",6,[[],["bool",15]]],[11,"clone_with_nil_enrollment_id","","Make a clone of this status, but with the special nil …",6,[[]]],[5,"get_enrollments","","Return information about all enrolled experiments.",null,[[["database",3]],[["vec",3],["result",6]]]],[3,"EnrollmentsEvolver","","",null,null],[12,"nimbus_id","","",12,null],[12,"available_randomization_units","","",12,null],[12,"app_context","","",12,null],[11,"new","","",12,[[["uuid",3],["availablerandomizationunits",3],["appcontext",3]]]],[11,"evolve_enrollments_in_db","","Convenient wrapper around <code>evolve_enrollments</code> that fetches …",12,[[["writer",3],["database",3]],[["result",6],["vec",3]]]],[11,"evolve_enrollments","","Evolve and calculate the new set of enrollments, using the…",12,[[["bool",15]],["result",6]]],[11,"evolve_enrollment","","Evolve a single enrollment using the previous and current …",12,[[["experiment",3],["option",4],["bool",15],["vec",3],["option",4],["experimentenrollment",3]],[["result",6],["option",4]]]],[5,"map_experiments","","",null,[[],[["hashmap",3],["string",3],["experiment",3]]]],[5,"map_enrollments","","",null,[[],[["string",3],["hashmap",3],["experimentenrollment",3]]]],[3,"EnrollmentChangeEvent","","",null,null],[12,"experiment_slug","","",13,null],[12,"branch_slug","","",13,null],[12,"enrollment_id","","",13,null],[12,"reason","","",13,null],[12,"change","","",13,null],[11,"new","","",13,[[["str",15],["enrollmentchangeeventtype",4],["option",4],["uuid",3]]]],[4,"EnrollmentChangeEventType","","",null,null],[13,"Enrollment","","",14,null],[13,"Disqualification","","",14,null],[13,"Unenrollment","","",14,null],[5,"opt_in_with_branch","","",null,[[["str",15],["database",3],["writer",3]],[["result",6],["vec",3]]]],[5,"opt_out","","",null,[[["writer",3],["str",15],["database",3]],[["result",6],["vec",3]]]],[5,"get_global_user_participation","","",null,[[["database",3]],[["bool",15],["result",6]]]],[5,"set_global_user_participation","","",null,[[["writer",3],["bool",15],["database",3]],["result",6]]],[5,"reset_telemetry_identifiers","","Reset unique identifiers in response to application-level …",null,[[["writer",3],["database",3]],[["result",6],["vec",3]]]],[5,"now_secs","","",null,[[],["u64",15]]],[0,"error","nimbus","Not complete yet This is where the error definitions can …",null,null],[4,"NimbusError","nimbus::error","",null,null],[13,"InvalidPersistedData","","",15,null],[13,"RkvError","","",15,null],[13,"IOError","","",15,null],[13,"JSONError","","",15,null],[13,"EvaluationError","","",15,null],[13,"InvalidExpression","","",15,null],[13,"InvalidFraction","","",15,null],[13,"TryFromSliceError","","",15,null],[13,"EmptyRatiosError","","",15,null],[13,"OutOfBoundsError","","",15,null],[13,"UrlParsingError","","",15,null],[13,"RequestError","","",15,null],[13,"UuidError","","",15,null],[13,"ResponseError","","",15,null],[13,"InvalidExperimentFormat","","",15,null],[13,"InvalidPath","","",15,null],[13,"InternalError","","",15,null],[13,"NoSuchExperiment","","",15,null],[13,"NoSuchBranch","","",15,null],[13,"BackoffError","","",15,null],[13,"DatabaseNotReady","","",15,null],[6,"Result","","",null,null],[0,"evaluator","nimbus","",null,null],[3,"Bucket","nimbus::evaluator","",null,null],[11,"new","","",16,[[]]],[5,"evaluate_enrollment","","Determine the enrolment status for an experiment.",null,[[["experiment",3],["appcontext",3],["uuid",3],["availablerandomizationunits",3]],[["result",6],["experimentenrollment",3]]]],[5,"choose_branch","","Chooses a branch randomly from a set of branches based on …",null,[[["str",15]],[["branch",3],["result",6]]]],[5,"targeting","","Checks if the client is targeted by an experiment This …",null,[[["appcontext",3],["str",15]],[["enrollmentstatus",4],["option",4]]]],[0,"client","nimbus","",null,null],[0,"fs_client","nimbus::client","A SettingsClient that uses the file-system. Used for …",null,null],[3,"FileSystemClient","nimbus::client::fs_client","",null,null],[12,"path","","",17,null],[11,"new","","",17,[[["asref",8],["path",3]],["result",6]]],[0,"http_client","nimbus::client","This is a simple HTTP client that uses viaduct to …",null,null],[17,"HEADER_BACKOFF","nimbus::client::http_client","",null,null],[17,"HEADER_RETRY_AFTER","","",null,null],[3,"Client","","",null,null],[12,"base_url","","",18,null],[12,"collection_name","","",18,null],[12,"bucket_name","","",18,null],[12,"remote_state","","",18,null],[4,"RemoteState","","",null,null],[13,"Ok","","",19,null],[13,"Backoff","","",19,null],[12,"observed_at","nimbus::client::http_client::RemoteState","",20,null],[12,"duration","","",20,null],[11,"new","nimbus::client::http_client","",18,[[["remotesettingsconfig",3]],["result",6]]],[11,"make_request","","",18,[[["request",3]],[["response",3],["result",6]]]],[11,"ensure_no_backoff","","",18,[[],["result",6]]],[11,"handle_backoff_hint","","",18,[[["response",3]],["result",6]]],[5,"parse_experiments","","",null,[[["str",15]],[["vec",3],["result",6]]]],[0,"null_client","nimbus::client","",null,null],[3,"NullClient","nimbus::client::null_client","This is a client for use when no server is provided. Its …",null,null],[11,"new","","",21,[[]]],[5,"create_client","nimbus::client","",null,[[["remotesettingsconfig",3],["option",4]],[["result",6],["box",3]]]],[8,"SettingsClient","","",null,null],[10,"get_experiments_metadata","","",22,[[],[["string",3],["result",6]]]],[10,"fetch_experiments","","",22,[[],[["vec",3],["result",6]]]],[0,"config","nimbus","This module defines the custom configurations that …",null,null],[3,"RemoteSettingsConfig","nimbus::config","Optional custom configuration Currently includes the …",null,null],[12,"server_url","","",23,null],[12,"bucket_name","","",23,null],[12,"collection_name","","",23,null],[0,"matcher","nimbus","This module defines all the information needed to match a …",null,null],[3,"Matcher","nimbus::matcher","",null,null],[12,"app_name","","",24,null],[12,"app_id","","",24,null],[12,"channel","","",24,null],[12,"app_display_version","","",24,null],[12,"app_min_version","","",24,null],[12,"app_max_version","","",24,null],[12,"app_build","","",24,null],[12,"app_min_build","","",24,null],[12,"app_max_build","","",24,null],[12,"architecture","","",24,null],[12,"device_manufacturer","","",24,null],[12,"device_model","","",24,null],[12,"locale","","",24,null],[12,"os","","",24,null],[12,"os_version","","",24,null],[12,"android_sdk_version","","",24,null],[12,"debug_tags","","",24,null],[3,"AppContext","","The <code>AppContext</code> object represents the parameters and …",null,null],[12,"app_name","","",25,null],[12,"app_id","","",25,null],[12,"channel","","",25,null],[12,"app_version","","",25,null],[12,"app_build","","",25,null],[12,"architecture","","",25,null],[12,"device_manufacturer","","",25,null],[12,"device_model","","",25,null],[12,"locale","","",25,null],[12,"os","","",25,null],[12,"os_version","","",25,null],[12,"android_sdk_version","","",25,null],[12,"debug_tag","","",25,null],[0,"persistence","nimbus","Our storage abstraction, currently backed by Rkv.",null,null],[0,"backend","nimbus::persistence","",null,null],[6,"Rkv","nimbus::persistence::backend","",null,null],[6,"RkvSingleStore","","",null,null],[6,"Reader","","",null,null],[6,"Writer","","",null,null],[8,"Readable","","",null,null],[5,"rkv_new","","",null,[[["path",3]],[["rkv",3],["storeerror",4],["result",4]]]],[17,"DB_KEY_DB_VERSION","nimbus::persistence","",null,null],[17,"DB_VERSION","","",null,null],[4,"StoreId","","Enumeration of the different stores within our database.",null,null],[13,"Experiments","","Store containing the set of known experiments, as read …",26,null],[13,"Enrollments","","Store containing the set of known experiment enrollments.",26,null],[13,"Meta","","Store containing miscellaneous metadata about this client …",26,null],[13,"Updates","","Store containing pending updates to experiment data.",26,null],[3,"SingleStore","","A wrapper for an Rkv store. Implemented to allow any …",null,null],[12,"store","","",27,null],[11,"new","","",27,[[["singlestore",3],["safemodedatabase",3]]]],[11,"put","","",27,[[["str",15],["writer",3]],["result",6]]],[11,"delete","","",27,[[["str",15],["writer",3]],["result",6]]],[11,"clear","","",27,[[["writer",3]],["result",6]]],[11,"get","","",27,[[["str",15]],[["option",4],["result",6]]]],[11,"collect_all","","",27,[[],[["vec",3],["result",6]]]],[3,"Database","","Database used to access persisted data This an …",null,null],[12,"rkv","","",28,null],[12,"meta_store","","",28,null],[12,"experiment_store","","",28,null],[12,"enrollment_store","","",28,null],[12,"updates_store","","",28,null],[11,"new","","Main constructor for a database Initiates the Rkv …",28,[[["asref",8],["path",3]],["result",6]]],[11,"maybe_upgrade","","",28,[[],["result",6]]],[11,"get_store","","Gets a Store object, which used with the writer returned …",28,[[["storeid",4]],["singlestore",3]]],[11,"open_rkv","","",28,[[["asref",8],["path",3]],[["result",6],["rkv",3]]]],[11,"read","","Function used to obtain a \\\"reader\\\" which is used for …",28,[[],[["result",6],["reader",3]]]],[11,"write","","Function used to obtain a \\\"writer\\\" which is used for …",28,[[],[["result",6],["writer",3]]]],[0,"sampling","nimbus","This module implements the sampling logic required to …",null,null],[17,"HASH_BITS","nimbus::sampling","",null,null],[17,"HASH_LENGTH","","",null,null],[5,"bucket_sample","","Sample by splitting the input space into a series of …",null,[[["u32",15],["serialize",8]],[["bool",15],["result",6]]]],[5,"ratio_sample","","Sample over a list of ratios such that, over the input …",null,[[["serialize",8]],[["usize",15],["result",6]]]],[5,"truncated_hash","","Provides a hash of <code>data</code>, truncated to the 6 most …",null,[[["serialize",8]],["result",6]]],[5,"is_hash_in_bucket","","Checks if a given hash (represented as a 6 byte hex …",null,[[["u32",15],["str",15]],[["bool",15],["result",6]]]],[5,"fraction_to_key","","Maps from the range [0, 1] to [0, 2^48]",null,[[["f64",15]],[["string",3],["result",6]]]],[0,"updating","nimbus","This module implements the primitive functions to …",null,null],[17,"KEY_PENDING_UPDATES","nimbus::updating","",null,null],[5,"write_pending_experiments","","",null,[[["database",3],["experiment",3],["vec",3],["writer",3]],["result",6]]],[5,"read_and_remove_pending_experiments","","",null,[[["writer",3],["database",3]],[["option",4],["result",6]]]],[5,"evaluate_enrollment","nimbus","Determine the enrolment status for an experiment.",null,[[["experiment",3],["appcontext",3],["uuid",3],["availablerandomizationunits",3]],[["result",6],["experimentenrollment",3]]]],[3,"RemoteSettingsConfig","","Optional custom configuration Currently includes the …",null,null],[12,"server_url","","",23,null],[12,"bucket_name","","",23,null],[12,"collection_name","","",23,null],[4,"EnrollmentStatus","","",null,null],[13,"Enrolled","","",6,null],[12,"enrollment_id","nimbus::EnrollmentStatus","",7,null],[12,"reason","","",7,null],[12,"branch","","",7,null],[12,"feature_id","","",7,null],[13,"NotEnrolled","nimbus","",6,null],[12,"reason","nimbus::EnrollmentStatus","",8,null],[13,"Disqualified","nimbus","",6,null],[12,"enrollment_id","nimbus::EnrollmentStatus","",9,null],[12,"reason","","",9,null],[12,"branch","","",9,null],[13,"WasEnrolled","nimbus","",6,null],[12,"enrollment_id","nimbus::EnrollmentStatus","",10,null],[12,"branch","","",10,null],[12,"experiment_ended_at","","",10,null],[13,"Error","nimbus","",6,null],[12,"reason","nimbus::EnrollmentStatus","",11,null],[3,"AppContext","nimbus","The <code>AppContext</code> object represents the parameters and …",null,null],[12,"app_name","","",25,null],[12,"app_id","","",25,null],[12,"channel","","",25,null],[12,"app_version","","",25,null],[12,"app_build","","",25,null],[12,"architecture","","",25,null],[12,"device_manufacturer","","",25,null],[12,"device_model","","",25,null],[12,"locale","","",25,null],[12,"os","","",25,null],[12,"os_version","","",25,null],[12,"android_sdk_version","","",25,null],[12,"debug_tag","","",25,null],[17,"DEFAULT_TOTAL_BUCKETS","","",null,null],[17,"DB_KEY_NIMBUS_ID","","",null,null],[3,"InternalMutableState","","",null,null],[12,"available_randomization_units","","",29,null],[3,"NimbusClient","","Nimbus is the main struct representing the experiments …",null,null],[12,"settings_client","","",30,null],[12,"mutable_state","","",30,null],[12,"app_context","","",30,null],[12,"db","","",30,null],[12,"database_cache","","",30,null],[12,"db_path","","",30,null],[11,"new","","",30,[[["remotesettingsconfig",3],["into",8],["pathbuf",3],["option",4],["appcontext",3],["availablerandomizationunits",3]],["result",6]]],[11,"initialize","","",30,[[],["result",6]]],[11,"get_experiment_branch","","",30,[[["string",3]],[["result",6],["option",4]]]],[11,"get_experiment_branches","","",30,[[["string",3]],[["result",6],["vec",3]]]],[11,"get_global_user_participation","","",30,[[],[["bool",15],["result",6]]]],[11,"set_global_user_participation","","",30,[[["bool",15]],[["result",6],["vec",3]]]],[11,"get_active_experiments","","",30,[[],[["vec",3],["result",6]]]],[11,"get_all_experiments","","",30,[[],[["vec",3],["result",6]]]],[11,"opt_in_with_branch","","",30,[[["string",3]],[["result",6],["vec",3]]]],[11,"opt_out","","",30,[[["string",3]],[["result",6],["vec",3]]]],[11,"update_experiments","","",30,[[],[["result",6],["vec",3]]]],[11,"fetch_experiments","","",30,[[],["result",6]]],[11,"apply_pending_experiments","","",30,[[],[["result",6],["vec",3]]]],[11,"set_experiments_locally","","",30,[[["string",3]],["result",6]]],[11,"reset_telemetry_identifiers","","Reset internal state in response to application-level …",30,[[["availablerandomizationunits",3]],[["result",6],["vec",3]]]],[11,"nimbus_id","","",30,[[],[["uuid",3],["result",6]]]],[11,"read_or_create_nimbus_id","","",30,[[["writer",3],["database",3]],[["uuid",3],["result",6]]]],[11,"set_nimbus_id","","",30,[[["uuid",3]],["result",6]]],[11,"db","","",30,[[],[["database",3],["result",6]]]],[3,"EnrolledExperiment","","",null,null],[12,"feature_ids","","",31,null],[12,"slug","","",31,null],[12,"user_facing_name","","",31,null],[12,"user_facing_description","","",31,null],[12,"branch_slug","","",31,null],[12,"enrollment_id","","",31,null],[17,"SCHEMA_VERSION","","This is the currently supported major schema version.",null,null],[3,"Experiment","","",null,null],[12,"schema_version","","",32,null],[12,"slug","","",32,null],[12,"app_name","","",32,null],[12,"app_id","","",32,null],[12,"channel","","",32,null],[12,"user_facing_name","","",32,null],[12,"user_facing_description","","",32,null],[12,"is_enrollment_paused","","",32,null],[12,"bucket_config","","",32,null],[12,"probe_sets","","",32,null],[12,"branches","","",32,null],[12,"feature_ids","","",32,null],[12,"targeting","","",32,null],[12,"start_date","","",32,null],[12,"end_date","","",32,null],[12,"proposed_duration","","",32,null],[12,"proposed_enrollment","","",32,null],[12,"reference_branch","","",32,null],[11,"has_branch","","",32,[[["str",15]],["bool",15]]],[11,"get_first_feature_id","","",32,[[],["string",3]]],[3,"FeatureConfig","","",null,null],[12,"feature_id","","",33,null],[12,"enabled","","",33,null],[3,"Branch","","",null,null],[12,"slug","","",34,null],[12,"ratio","","",34,null],[12,"feature","","",34,null],[5,"default_buckets","","",null,[[],["u32",15]]],[3,"BucketConfig","","",null,null],[12,"randomization_unit","","",35,null],[12,"namespace","","",35,null],[12,"start","","",35,null],[12,"count","","",35,null],[12,"total","","",35,null],[4,"RandomizationUnit","","",null,null],[13,"NimbusId","","",36,null],[13,"ClientId","","",36,null],[3,"AvailableRandomizationUnits","","",null,null],[12,"client_id","","",37,null],[12,"dummy","","",37,null],[11,"with_client_id","","",37,[[["str",15]]]],[11,"get_value","","",37,[[["str",15],["randomizationunit",4]],[["option",4],["str",15]]]],[11,"from","nimbus::dbcache","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","nimbus::enrollment","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"to_bytes","","",2,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"to_bytes","","",3,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"to_bytes","","",4,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"to_bytes","","",5,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"to_bytes","","",6,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","nimbus::error","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","nimbus::evaluator","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"to_bytes","","",16,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","nimbus::client::fs_client","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","nimbus::client::http_client","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","nimbus::client::null_client","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","nimbus::config","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","nimbus::matcher","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"to_bytes","","",24,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"to_bytes","","",25,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","nimbus::persistence","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","nimbus","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"to_bytes","","",32,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"to_bytes","","",33,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"to_bytes","","",34,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"to_bytes","","",35,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"to_bytes","","",36,[[],[["result",4],["vec",3],["dataerror",4]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"get_experiments_metadata","nimbus::client::fs_client","",17,[[],[["string",3],["result",6]]]],[11,"fetch_experiments","","",17,[[],[["vec",3],["result",6]]]],[11,"get_experiments_metadata","nimbus::client::http_client","",18,[[],[["string",3],["result",6]]]],[11,"fetch_experiments","","",18,[[],[["vec",3],["result",6]]]],[11,"get_experiments_metadata","nimbus::client::null_client","",21,[[],[["string",3],["result",6]]]],[11,"fetch_experiments","","",21,[[],[["vec",3],["result",6]]]],[11,"from","nimbus::error","",15,[[["storeerror",4]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","","",15,[[["tryfromsliceerror",3]]]],[11,"from","","",15,[[["parseerror",4]]]],[11,"from","","",15,[[["error",4]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","","",15,[[["evaluationerror",4]]]],[11,"clone","nimbus::enrollment","",2,[[],["enrolledreason",4]]],[11,"clone","","",3,[[],["notenrolledreason",4]]],[11,"clone","","",4,[[],["disqualifiedreason",4]]],[11,"clone","","",5,[[],["experimentenrollment",3]]],[11,"clone","","",6,[[],["enrollmentstatus",4]]],[11,"clone","nimbus::evaluator","",16,[[],["bucket",3]]],[11,"clone","nimbus::client::http_client","",19,[[],["remotestate",4]]],[11,"clone","nimbus::config","",23,[[],["remotesettingsconfig",3]]],[11,"clone","nimbus::matcher","",24,[[],["matcher",3]]],[11,"clone","","",25,[[],["appcontext",3]]],[11,"clone","nimbus","",31,[[],["enrolledexperiment",3]]],[11,"clone","","",32,[[],["experiment",3]]],[11,"clone","","",33,[[],["featureconfig",3]]],[11,"clone","","",34,[[],["branch",3]]],[11,"clone","","",35,[[],["bucketconfig",3]]],[11,"clone","","",36,[[],["randomizationunit",4]]],[11,"default","nimbus::dbcache","",1,[[],["databasecache",3]]],[11,"default","nimbus::evaluator","",16,[[],["bucket",3]]],[11,"default","nimbus::matcher","",24,[[],["matcher",3]]],[11,"default","","",25,[[],["appcontext",3]]],[11,"default","nimbus","",29,[[],["internalmutablestate",3]]],[11,"default","","",32,[[],["experiment",3]]],[11,"default","","",33,[[],["featureconfig",3]]],[11,"default","","",34,[[],["branch",3]]],[11,"default","","",35,[[],["bucketconfig",3]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[],["availablerandomizationunits",3]]],[11,"eq","nimbus::enrollment","",2,[[["enrolledreason",4]],["bool",15]]],[11,"eq","","",3,[[["notenrolledreason",4]],["bool",15]]],[11,"eq","","",4,[[["disqualifiedreason",4]],["bool",15]]],[11,"eq","","",5,[[["experimentenrollment",3]],["bool",15]]],[11,"ne","","",5,[[["experimentenrollment",3]],["bool",15]]],[11,"eq","","",6,[[["enrollmentstatus",4]],["bool",15]]],[11,"ne","","",6,[[["enrollmentstatus",4]],["bool",15]]],[11,"eq","","",14,[[["enrollmentchangeeventtype",4]],["bool",15]]],[11,"eq","nimbus","",32,[[["experiment",3]],["bool",15]]],[11,"ne","","",32,[[["experiment",3]],["bool",15]]],[11,"eq","","",33,[[["featureconfig",3]],["bool",15]]],[11,"ne","","",33,[[["featureconfig",3]],["bool",15]]],[11,"eq","","",34,[[["branch",3]],["bool",15]]],[11,"ne","","",34,[[["branch",3]],["bool",15]]],[11,"eq","","",35,[[["bucketconfig",3]],["bool",15]]],[11,"ne","","",35,[[["bucketconfig",3]],["bool",15]]],[11,"eq","","",36,[[["randomizationunit",4]],["bool",15]]],[11,"fmt","nimbus::enrollment","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::error","",15,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::evaluator","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::client::http_client","",19,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::config","",23,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::matcher","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","nimbus::error","",15,[[["formatter",3]],["result",6]]],[11,"hash","nimbus::enrollment","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",6,[[]]],[11,"source","nimbus::error","",15,[[],[["option",4],["error",8]]]],[11,"serialize","nimbus::enrollment","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","nimbus::evaluator","",16,[[],["result",4]]],[11,"serialize","nimbus::matcher","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","nimbus","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"deserialize","nimbus::enrollment","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","nimbus::evaluator","",16,[[],["result",4]]],[11,"deserialize","nimbus::matcher","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","nimbus","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]]],"p":[[3,"CachedData"],[3,"DatabaseCache"],[4,"EnrolledReason"],[4,"NotEnrolledReason"],[4,"DisqualifiedReason"],[3,"ExperimentEnrollment"],[4,"EnrollmentStatus"],[13,"Enrolled"],[13,"NotEnrolled"],[13,"Disqualified"],[13,"WasEnrolled"],[13,"Error"],[3,"EnrollmentsEvolver"],[3,"EnrollmentChangeEvent"],[4,"EnrollmentChangeEventType"],[4,"NimbusError"],[3,"Bucket"],[3,"FileSystemClient"],[3,"Client"],[4,"RemoteState"],[13,"Backoff"],[3,"NullClient"],[8,"SettingsClient"],[3,"RemoteSettingsConfig"],[3,"Matcher"],[3,"AppContext"],[4,"StoreId"],[3,"SingleStore"],[3,"Database"],[3,"InternalMutableState"],[3,"NimbusClient"],[3,"EnrolledExperiment"],[3,"Experiment"],[3,"FeatureConfig"],[3,"Branch"],[3,"BucketConfig"],[4,"RandomizationUnit"],[3,"AvailableRandomizationUnits"]]},\
"nss":{"doc":"","i":[[0,"util","nss","",null,null],[17,"COMPATIBLE_NSS_VERSION","nss::util","",null,null],[7,"NSS_INIT","","",null,null],[5,"ensure_nss_initialized","","",null,[[]]],[5,"map_nss_secstatus","","",null,[[],["result",6]]],[5,"get_last_error","","Retrieve and wrap the last NSS/NSPR error in the current …",null,[[],["error",3]]],[8,"ScopedPtr","","",null,null],[16,"RawType","","",0,null],[10,"from_ptr","","",0,[[],["result",6]]],[10,"as_ptr","","",0,[[]]],[10,"as_mut_ptr","","",0,[[]]],[5,"sec_item_as_slice","","",null,[[["secitem",6]],["result",6]]],[0,"aes","nss","",null,null],[17,"AES_GCM_TAG_LENGTH","nss::aes","",null,null],[4,"Operation","","",null,null],[13,"Encrypt","","",1,null],[13,"Decrypt","","",1,null],[5,"aes_gcm_crypt","","",null,[[["operation",4]],[["vec",3],["result",6]]]],[5,"aes_cbc_crypt","","",null,[[["operation",4]],[["vec",3],["result",6]]]],[5,"common_crypt","","",null,[[["usize",15],["secitem",6],["ck_mechanism_type",6],["operation",4]],[["vec",3],["result",6]]]],[0,"ec","nss","",null,null],[4,"Curve","nss::ec","",null,null],[13,"P256","","",2,null],[13,"P384","","",2,null],[11,"get_field_len","","",2,[[],["u32",15]]],[17,"CRV_P256","","",null,null],[17,"CRV_P384","","",null,null],[3,"EcKey","","",null,null],[12,"curve","","",3,null],[12,"private_key","","",3,null],[12,"public_key","","",3,null],[11,"new","","",3,[[["curve",4]]]],[11,"from_coordinates","","",3,[[["curve",4]],["result",6]]],[11,"curve","","",3,[[],["curve",4]]],[11,"public_key","","",3,[[]]],[11,"private_key","","",3,[[]]],[5,"create_ec_point_for_coordinates","","",null,[[],[["vec",3],["result",6]]]],[5,"generate_keypair","","",null,[[["curve",4]],["result",6]]],[3,"PrivateKey","","",null,null],[12,"curve","","",4,null],[12,"wrapped","","",4,null],[11,"convert_to_public_key","","",4,[[],[["result",6],["publickey",3]]]],[11,"from","","",4,[[["curve",4],["pk11privatekey",3]]]],[11,"curve","","",4,[[],["curve",4]]],[11,"private_value","","",4,[[],[["vec",3],["result",6]]]],[11,"from_nss_params","","",4,[[["curve",4]],["result",6]]],[11,"import","","",4,[[["eckey",3]],["result",6]]],[11,"export","","",4,[[],[["result",6],["eckey",3]]]],[5,"ck_attribute","","",null,[[["usize",15],["ck_attribute_type",6],["ck_void_ptr",6]],[["result",6],["ck_attribute",3]]]],[3,"PublicKey","","",null,null],[12,"curve","","",5,null],[12,"wrapped","","",5,null],[11,"from","","",5,[[["pk11publickey",3],["curve",4]]]],[11,"curve","","",5,[[],["curve",4]]],[11,"verify","","ECDSA verify operation",5,[[["hashalgorithm",4]],["result",6]]],[11,"to_bytes","","",5,[[],[["vec",3],["result",6]]]],[11,"from_bytes","","",5,[[["curve",4]],[["result",6],["publickey",3]]]],[5,"check_pub_key_bytes","","",null,[[["curve",4]],["result",6]]],[5,"create_ec_params_for_curve","","",null,[[["curve",4]],[["vec",3],["result",6]]]],[0,"ecdh","nss","",null,null],[5,"ecdh_agreement","nss::ecdh","",null,[[["publickey",3],["privatekey",3]],[["vec",3],["result",6]]]],[0,"error","nss","",null,null],[4,"ErrorKind","nss::error","",null,null],[13,"NSSInitFailure","","",6,null],[13,"NSSError","","",6,null],[13,"InternalError","","",6,null],[13,"ConversionError","","",6,null],[13,"Base64Decode","","",6,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",7,null],[12,"backtrace","","",7,null],[11,"new","","",7,[[["errorkind",4]]]],[11,"get_backtrace","","",7,[[],[["mutex",3],["option",4]]]],[3,"Error","","",null,null],[12,"0","","",8,null],[11,"kind","","",8,[[],["errorkind",4]]],[11,"backtrace","","",8,[[],[["mutex",3],["option",4]]]],[0,"pbkdf2","nss","",null,null],[5,"pbkdf2_key_derive","nss::pbkdf2","",null,[[["u32",15],["hashalgorithm",4]],["result",6]]],[0,"pk11","nss","",null,null],[0,"context","nss::pk11","",null,null],[4,"HashAlgorithm","nss::pk11::context","",null,null],[13,"SHA256","","",9,null],[13,"SHA384","","",9,null],[11,"result_len","","",9,[[],["u32",15]]],[11,"as_hmac_mechanism","","",9,[[],["u32",15]]],[11,"as_hkdf_mechanism","","",9,[[],["u32",15]]],[5,"hash_buf","","",null,[[["hashalgorithm",4]],[["vec",3],["result",6]]]],[5,"hmac_sign","","",null,[[["hashalgorithm",4]],[["vec",3],["result",6]]]],[5,"hash_buf_with_context","","Similar to hash_buf except the consumer has to provide …",null,[[["context",3]],[["vec",3],["result",6]]]],[5,"create_context_by_sym_key","","Safe wrapper around PK11_CreateContextBySymKey that …",null,[[["ck_mechanism_type",6],["ck_attribute_type",6],["symkey",3]],[["result",6],["context",3]]]],[0,"slot","nss::pk11","",null,null],[5,"generate_random","nss::pk11::slot","",null,[[],["result",6]]],[5,"get_internal_slot","","Safe wrapper around <code>PK11_GetInternalSlot</code> that …",null,[[],[["result",6],["slot",3]]]],[0,"sym_key","nss::pk11","",null,null],[5,"hkdf_expand","nss::pk11::sym_key","",null,[[["usize",15],["hashalgorithm",4]],[["vec",3],["result",6]]]],[5,"import_sym_key","","Safe wrapper around PK11_ImportSymKey that de-allocates …",null,[[["ck_mechanism_type",6],["ck_attribute_type",6]],[["symkey",3],["result",6]]]],[0,"types","nss::pk11","",null,null],[3,"SymKey","nss::pk11::types","",null,null],[12,"ptr","","",10,null],[3,"PrivateKey","","",null,null],[12,"ptr","","",11,null],[3,"PublicKey","","",null,null],[12,"ptr","","",12,null],[3,"GenericObject","","",null,null],[12,"ptr","","",13,null],[3,"Context","","",null,null],[12,"ptr","","",14,null],[3,"Slot","","",null,null],[12,"ptr","","",15,null],[3,"AlgorithmID","","",null,null],[12,"ptr","","",16,null],[5,"secoid_destroy_algorithm_id_true","","",null,[[]]],[5,"pk11_destroy_context_true","","",null,[[]]],[8,"Pkcs11Object","","",null,null],[18,"PK11_OBJECT_TYPE","","",17,null],[11,"read_raw_attribute","","",17,[[["ck_attribute_type",6]],[["result",6],["scopedsecitem",3]]]],[11,"convert_to_public_key","","",11,[[],[["result",6],["publickey",3]]]],[11,"from_private_key_template","","",11,[[["ck_attribute",3],["vec",3]],["result",6]]],[3,"ScopedSECItem","","",null,null],[12,"wrapped","","",18,null],[11,"empty","","",18,[[["secitemtype",4]]]],[11,"as_mut_ref","","",18,[[],["secitem",6]]],[5,"destroy_private_key_without_destroying_pkcs11_object","","",null,[[]]],[0,"secport","nss","",null,null],[5,"secure_memcmp","nss::secport","",null,[[],["bool",15]]],[3,"Error","nss","",null,null],[12,"0","","",8,null],[4,"ErrorKind","","",null,null],[13,"NSSInitFailure","","",6,null],[13,"NSSError","","",6,null],[13,"InternalError","","",6,null],[13,"ConversionError","","",6,null],[13,"Base64Decode","","",6,null],[6,"Result","","",null,null],[5,"ensure_initialized","","",null,[[]]],[14,"scoped_ptr","","",null,null],[11,"from","nss::aes","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","nss::ec","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","nss::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","nss::pk11::context","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","nss::pk11::types","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from_ptr","","",10,[[],[["symkey",3],["result",6]]]],[11,"as_ptr","","",10,[[]]],[11,"as_mut_ptr","","",10,[[]]],[11,"from_ptr","","",11,[[],[["result",6],["privatekey",3]]]],[11,"as_ptr","","",11,[[]]],[11,"as_mut_ptr","","",11,[[]]],[11,"from_ptr","","",12,[[],[["result",6],["publickey",3]]]],[11,"as_ptr","","",12,[[]]],[11,"as_mut_ptr","","",12,[[]]],[11,"from_ptr","","",13,[[],[["genericobject",3],["result",6]]]],[11,"as_ptr","","",13,[[]]],[11,"as_mut_ptr","","",13,[[]]],[11,"from_ptr","","",14,[[],[["result",6],["context",3]]]],[11,"as_ptr","","",14,[[]]],[11,"as_mut_ptr","","",14,[[]]],[11,"from_ptr","","",15,[[],[["result",6],["slot",3]]]],[11,"as_ptr","","",15,[[]]],[11,"as_mut_ptr","","",15,[[]]],[11,"from_ptr","","",16,[[],[["result",6],["algorithmid",3]]]],[11,"as_ptr","","",16,[[]]],[11,"as_mut_ptr","","",16,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",11,[[]]],[11,"drop","","",12,[[]]],[11,"drop","","",13,[[]]],[11,"drop","","",14,[[]]],[11,"drop","","",15,[[]]],[11,"drop","","",16,[[]]],[11,"drop","","",18,[[]]],[11,"from","nss::error","",6,[[["tryfrominterror",3]]]],[11,"from","","",6,[[["decodeerror",4]]]],[11,"from","","",8,[[["errorkind",4]],["error",3]]],[11,"from","","",8,[[["decodeerror",4]]]],[11,"from","","",8,[[["tryfrominterror",3]]]],[11,"clone","nss::aes","",1,[[],["operation",4]]],[11,"clone","nss::ec","",2,[[],["curve",4]]],[11,"clone","","",3,[[],["eckey",3]]],[11,"clone","nss::pk11::context","",9,[[],["hashalgorithm",4]]],[11,"eq","nss::aes","",1,[[["operation",4]],["bool",15]]],[11,"eq","nss::ec","",2,[[["curve",4]],["bool",15]]],[11,"eq","","",3,[[["eckey",3]],["bool",15]]],[11,"ne","","",3,[[["eckey",3]],["bool",15]]],[11,"deref","","",4,[[],["pk11privatekey",3]]],[11,"deref","","",5,[[],["pk11publickey",3]]],[11,"deref","nss::pk11::types","",18,[[],["secitem",6]]],[11,"fmt","nss::aes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","nss::ec","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","nss::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","nss::pk11::context","",9,[[["formatter",3]],["result",6]]],[11,"fmt","nss::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"serialize","nss::ec","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]]],"p":[[8,"ScopedPtr"],[4,"Operation"],[4,"Curve"],[3,"EcKey"],[3,"PrivateKey"],[3,"PublicKey"],[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[4,"HashAlgorithm"],[3,"SymKey"],[3,"PrivateKey"],[3,"PublicKey"],[3,"GenericObject"],[3,"Context"],[3,"Slot"],[3,"AlgorithmID"],[8,"Pkcs11Object"],[3,"ScopedSECItem"]]},\
"nss_build_common":{"doc":"This shouldn\'t exist, but does because if something isn\'t …","i":[[4,"LinkingKind","nss_build_common","",null,null],[13,"Dynamic","","",0,null],[12,"folded_libs","nss_build_common::LinkingKind","",1,null],[13,"Static","nss_build_common","",0,null],[3,"NoNssDir","","",null,null],[5,"link_nss","","",null,[[],[["result",4],["nonssdir",3]]]],[5,"get_nss","","",null,[[],[["nonssdir",3],["result",4]]]],[5,"determine_kind","","",null,[[],["linkingkind",4]]],[5,"link_nss_libs","","",null,[[["linkingkind",4]]]],[5,"get_nss_libs","","",null,[[["linkingkind",4]],[["vec",3],["str",15]]]],[5,"env","","",null,[[["str",15]],[["osstring",3],["option",4]]]],[5,"env_str","","",null,[[["str",15]],[["option",4],["string",3]]]],[5,"env_flag","","",null,[[["str",15]],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["linkingkind",4]]],[11,"clone","","",2,[[],["nonssdir",3]]],[11,"eq","","",0,[[["linkingkind",4]],["bool",15]]],[11,"ne","","",0,[[["linkingkind",4]],["bool",15]]],[11,"eq","","",2,[[["nonssdir",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[4,"LinkingKind"],[13,"Dynamic"],[3,"NoNssDir"]]},\
"nss_sys":{"doc":"","i":[[5,"SECKEY_CopyPublicKey","nss_sys","",null,null],[5,"SECKEY_ConvertToPublicKey","","",null,null],[5,"SECKEY_DestroyPrivateKey","","",null,null],[5,"SECKEY_DestroyPublicKey","","",null,null],[5,"NSS_VersionCheck","","",null,null],[5,"NSS_InitContext","","",null,null],[5,"PK11_FreeSlot","","",null,null],[5,"PK11_GetInternalSlot","","",null,null],[5,"PK11_GenerateRandom","","",null,null],[5,"PK11_FreeSymKey","","",null,null],[5,"PK11_ImportSymKey","","",null,null],[5,"PK11_Derive","","",null,null],[5,"PK11_PubDeriveWithKDF","","",null,null],[5,"PK11_ExtractKeyValue","","",null,null],[5,"PK11_GetKeyData","","",null,null],[5,"PK11_GenerateKeyPair","","",null,null],[5,"PK11_FindKeyByKeyID","","",null,null],[5,"PK11_Decrypt","","",null,null],[5,"PK11_Encrypt","","",null,null],[5,"PK11_VerifyWithMechanism","","",null,null],[5,"PK11_MapSignKeyType","","",null,null],[5,"PK11_DestroyContext","","",null,null],[5,"PK11_CreateContextBySymKey","","",null,null],[5,"PK11_DigestBegin","","",null,null],[5,"PK11_HashBuf","","",null,null],[5,"PK11_DigestOp","","",null,null],[5,"PK11_DigestFinal","","",null,null],[5,"PK11_DestroyGenericObject","","",null,null],[5,"PK11_CreateGenericObject","","",null,null],[5,"PK11_ReadRawAttribute","","",null,null],[5,"PK11_CreatePBEV2AlgorithmID","","",null,null],[5,"PK11_PBEKeyGen","","",null,null],[5,"PR_GetError","","",null,null],[5,"PR_GetErrorTextLength","","",null,null],[5,"PR_GetErrorText","","",null,null],[5,"SECITEM_FreeItem","","",null,null],[5,"SECOID_FindOIDByTag","","",null,null],[5,"SECOID_DestroyAlgorithmID","","",null,null],[5,"PORT_FreeArena","","",null,null],[5,"NSS_SecureMemcmp","","",null,null],[0,"bindings","","",null,null],[0,"blapit","nss_sys::bindings","",null,null],[17,"EC_POINT_FORM_UNCOMPRESSED","nss_sys::bindings::blapit","",null,null],[17,"SHA256_LENGTH","","",null,null],[17,"SHA384_LENGTH","","",null,null],[17,"HASH_LENGTH_MAX","","",null,null],[17,"AES_BLOCK_SIZE","","",null,null],[0,"keyhi","nss_sys::bindings","",null,null],[5,"SECKEY_CopyPublicKey","nss_sys::bindings::keyhi","",null,null],[5,"SECKEY_ConvertToPublicKey","","",null,null],[5,"SECKEY_DestroyPrivateKey","","",null,null],[5,"SECKEY_DestroyPublicKey","","",null,null],[0,"keythi","nss_sys::bindings","",null,null],[6,"SECKEYPublicKey","nss_sys::bindings::keythi","",null,null],[3,"SECKEYPublicKeyStr","","",null,null],[12,"arena","","",0,null],[12,"keyType","","",0,null],[12,"pkcs11Slot","","",0,null],[12,"pkcs11ID","","",0,null],[12,"u","","",0,null],[19,"SECKEYPublicKeyStr_u","","",null,null],[12,"rsa","","",1,null],[12,"dsa","","",1,null],[12,"dh","","",1,null],[12,"kea","","",1,null],[12,"fortezza","","",1,null],[12,"ec","","",1,null],[6,"SECKEYPrivateKey","","",null,null],[3,"SECKEYPrivateKeyStr","","",null,null],[12,"arena","","",2,null],[12,"keyType","","",2,null],[12,"pkcs11Slot","","",2,null],[12,"pkcs11ID","","",2,null],[12,"pkcs11IsTemp","","",2,null],[12,"wincx","","",2,null],[12,"staticflags","","",2,null],[4,"KeyType","","",null,null],[13,"nullKey","","",3,null],[13,"rsaKey","","",3,null],[13,"dsaKey","","",3,null],[13,"fortezzaKey","","",3,null],[13,"dhKey","","",3,null],[13,"keaKey","","",3,null],[13,"ecKey","","",3,null],[13,"rsaPssKey","","",3,null],[13,"rsaOaepKey","","",3,null],[6,"SECKEYRSAPublicKey","","",null,null],[3,"SECKEYRSAPublicKeyStr","","",null,null],[12,"arena","","",4,null],[12,"modulus","","",4,null],[12,"publicExponent","","",4,null],[6,"SECKEYDSAPublicKey","","",null,null],[3,"SECKEYDSAPublicKeyStr","","",null,null],[12,"params","","",5,null],[12,"publicValue","","",5,null],[6,"SECKEYPQGParams","","",null,null],[3,"SECKEYPQGParamsStr","","",null,null],[12,"arena","","",6,null],[12,"prime","","",6,null],[12,"subPrime","","",6,null],[12,"base","","",6,null],[6,"SECKEYDHPublicKey","","",null,null],[3,"SECKEYDHPublicKeyStr","","",null,null],[12,"arena","","",7,null],[12,"prime","","",7,null],[12,"base","","",7,null],[12,"publicValue","","",7,null],[6,"SECKEYKEAPublicKey","","",null,null],[3,"SECKEYKEAPublicKeyStr","","",null,null],[12,"params","","",8,null],[12,"publicValue","","",8,null],[6,"SECKEYKEAParams","","",null,null],[3,"SECKEYKEAParamsStr","","",null,null],[12,"arena","","",9,null],[12,"hash","","",9,null],[6,"SECKEYFortezzaPublicKey","","",null,null],[3,"SECKEYFortezzaPublicKeyStr","","",null,null],[12,"KEAversion","","",10,null],[12,"DSSversion","","",10,null],[12,"KMID","","",10,null],[12,"clearance","","",10,null],[12,"KEApriviledge","","",10,null],[12,"DSSpriviledge","","",10,null],[12,"KEAKey","","",10,null],[12,"DSSKey","","",10,null],[12,"params","","",10,null],[12,"keaParams","","",10,null],[6,"SECKEYECPublicKey","","",null,null],[3,"SECKEYECPublicKeyStr","","",null,null],[12,"DEREncodedParams","","",11,null],[12,"size","","",11,null],[12,"publicValue","","",11,null],[12,"encoding","","",11,null],[6,"SECKEYECParams","","",null,null],[4,"ECPointEncoding","","",null,null],[13,"ECPoint_Uncompressed","","",12,null],[13,"ECPoint_XOnly","","",12,null],[13,"ECPoint_Undefined","","",12,null],[0,"nss","nss_sys::bindings","",null,null],[5,"NSS_VersionCheck","nss_sys::bindings::nss","",null,null],[5,"NSS_InitContext","","",null,null],[17,"NSS_INIT_READONLY","","",null,null],[17,"NSS_INIT_NOCERTDB","","",null,null],[17,"NSS_INIT_NOMODDB","","",null,null],[17,"NSS_INIT_FORCEOPEN","","",null,null],[17,"NSS_INIT_OPTIMIZESPACE","","",null,null],[6,"NSSInitContext","","",null,null],[6,"NSSInitParameters","","",null,null],[0,"pk11pub","nss_sys::bindings","",null,null],[5,"PK11_FreeSlot","nss_sys::bindings::pk11pub","",null,null],[5,"PK11_GetInternalSlot","","",null,null],[5,"PK11_GenerateRandom","","",null,null],[5,"PK11_FreeSymKey","","",null,null],[5,"PK11_ImportSymKey","","",null,null],[5,"PK11_Derive","","",null,null],[5,"PK11_PubDeriveWithKDF","","",null,null],[5,"PK11_ExtractKeyValue","","",null,null],[5,"PK11_GetKeyData","","",null,null],[5,"PK11_GenerateKeyPair","","",null,null],[5,"PK11_FindKeyByKeyID","","",null,null],[5,"PK11_Decrypt","","",null,null],[5,"PK11_Encrypt","","",null,null],[5,"PK11_VerifyWithMechanism","","",null,null],[5,"PK11_MapSignKeyType","","",null,null],[5,"PK11_DestroyContext","","",null,null],[5,"PK11_CreateContextBySymKey","","",null,null],[5,"PK11_DigestBegin","","",null,null],[5,"PK11_HashBuf","","",null,null],[5,"PK11_DigestOp","","",null,null],[5,"PK11_DigestFinal","","",null,null],[5,"PK11_DestroyGenericObject","","",null,null],[5,"PK11_CreateGenericObject","","",null,null],[5,"PK11_ReadRawAttribute","","",null,null],[5,"PK11_CreatePBEV2AlgorithmID","","",null,null],[5,"PK11_PBEKeyGen","","",null,null],[0,"pkcs11n","nss_sys::bindings","",null,null],[17,"NSSCK_VENDOR_NSS","nss_sys::bindings::pkcs11n","",null,null],[17,"CKM_NSS","","",null,null],[17,"CKM_NSS_HKDF_SHA256","","",null,null],[17,"CKM_NSS_HKDF_SHA384","","",null,null],[6,"CK_GCM_PARAMS","","",null,null],[3,"CK_GCM_PARAMS_V3","","",null,null],[12,"pIv","","",13,null],[12,"ulIvLen","","",13,null],[12,"ulIvBits","","",13,null],[12,"pAAD","","",13,null],[12,"ulAADLen","","",13,null],[12,"ulTagBits","","",13,null],[3,"CK_NSS_HKDFParams","","",null,null],[12,"bExtract","","",14,null],[12,"pSalt","","",14,null],[12,"ulSaltLen","","",14,null],[12,"bExpand","","",14,null],[12,"pInfo","","",14,null],[12,"ulInfoLen","","",14,null],[0,"pkcs11t","nss_sys::bindings","",null,null],[17,"CK_TRUE","nss_sys::bindings::pkcs11t","",null,null],[17,"CK_FALSE","","",null,null],[6,"CK_BYTE","","",null,null],[6,"CK_BBOOL","","",null,null],[6,"CK_ULONG","","",null,null],[6,"CK_BYTE_PTR","","",null,null],[6,"CK_VOID_PTR","","",null,null],[6,"CK_OBJECT_HANDLE","","",null,null],[6,"CK_OBJECT_CLASS","","",null,null],[6,"CK_KEY_TYPE","","",null,null],[6,"CK_ATTRIBUTE_TYPE","","",null,null],[3,"CK_ATTRIBUTE","","",null,null],[12,"type_","","",15,null],[12,"pValue","","",15,null],[12,"ulValueLen","","",15,null],[6,"CK_MECHANISM_TYPE","","",null,null],[17,"CK_INVALID_HANDLE","","",null,null],[17,"CKO_PRIVATE_KEY","","",null,null],[17,"CKK_EC","","",null,null],[17,"CKA_CLASS","","",null,null],[17,"CKA_TOKEN","","",null,null],[17,"CKA_PRIVATE","","",null,null],[17,"CKA_VALUE","","",null,null],[17,"CKA_KEY_TYPE","","",null,null],[17,"CKA_ID","","",null,null],[17,"CKA_SENSITIVE","","",null,null],[17,"CKA_ENCRYPT","","",null,null],[17,"CKA_WRAP","","",null,null],[17,"CKA_SIGN","","",null,null],[17,"CKA_EC_PARAMS","","",null,null],[17,"CKA_EC_POINT","","",null,null],[17,"CKM_VENDOR_DEFINED","","",null,null],[17,"CKM_SHA256_HMAC","","",null,null],[17,"CKM_SHA384_HMAC","","",null,null],[17,"CKM_SHA512_HMAC","","",null,null],[17,"CKM_EC_KEY_PAIR_GEN","","",null,null],[17,"CKM_ECDH1_DERIVE","","",null,null],[17,"CKM_AES_CBC_PAD","","",null,null],[17,"CKM_AES_GCM","","",null,null],[17,"CKD_NULL","","",null,null],[0,"plarena","nss_sys::bindings","",null,null],[3,"PLArena","nss_sys::bindings::plarena","",null,null],[12,"next","","",16,null],[12,"base","","",16,null],[12,"limit","","",16,null],[12,"avail","","",16,null],[3,"PLArenaPool","","",null,null],[12,"first","","",17,null],[12,"current","","",17,null],[12,"arenasize","","",17,null],[12,"mask","","",17,null],[0,"prerror","nss_sys::bindings","",null,null],[5,"PR_GetError","nss_sys::bindings::prerror","",null,null],[5,"PR_GetErrorTextLength","","",null,null],[5,"PR_GetErrorText","","",null,null],[6,"PRErrorCode","","",null,null],[0,"prtypes","nss_sys::bindings","",null,null],[6,"PRIntn","nss_sys::bindings::prtypes","",null,null],[6,"PRBool","","",null,null],[6,"PRUword","","",null,null],[6,"PRInt32","","",null,null],[6,"PRUint32","","",null,null],[17,"PR_FALSE","","",null,null],[17,"PR_TRUE","","",null,null],[0,"secasn1t","nss_sys::bindings","",null,null],[17,"SEC_ASN1_OBJECT_ID","nss_sys::bindings::secasn1t","",null,null],[0,"seccomon","nss_sys::bindings","",null,null],[4,"SECItemType","nss_sys::bindings::seccomon","",null,null],[13,"siBuffer","","",18,null],[13,"siClearDataBuffer","","",18,null],[13,"siCipherDataBuffer","","",18,null],[13,"siDERCertBuffer","","",18,null],[13,"siEncodedCertBuffer","","",18,null],[13,"siDERNameBuffer","","",18,null],[13,"siEncodedNameBuffer","","",18,null],[13,"siAsciiNameString","","",18,null],[13,"siAsciiString","","",18,null],[13,"siDEROID","","",18,null],[13,"siUnsignedInteger","","",18,null],[13,"siUTCTime","","",18,null],[13,"siGeneralizedTime","","",18,null],[13,"siVisibleString","","",18,null],[13,"siUTF8String","","",18,null],[13,"siBMPString","","",18,null],[6,"SECItem","","",null,null],[3,"SECItemStr","","",null,null],[12,"type_","","",19,null],[12,"data","","",19,null],[12,"len","","",19,null],[4,"_SECStatus","","",null,null],[13,"SECWouldBlock","","",20,null],[13,"SECFailure","","",20,null],[13,"SECSuccess","","",20,null],[0,"secitem","nss_sys::bindings","",null,null],[5,"SECITEM_FreeItem","nss_sys::bindings::secitem","",null,null],[0,"secmodt","nss_sys::bindings","",null,null],[6,"PK11SlotInfo","nss_sys::bindings::secmodt","",null,null],[6,"PK11SymKey","","",null,null],[6,"PK11Context","","",null,null],[4,"PK11Origin","","",null,null],[13,"PK11_OriginNULL","","",21,null],[13,"PK11_OriginDerive","","",21,null],[13,"PK11_OriginGenerated","","",21,null],[13,"PK11_OriginFortezzaHack","","",21,null],[13,"PK11_OriginUnwrap","","",21,null],[4,"PK11ObjectType","","",null,null],[13,"PK11_TypeGeneric","","",22,null],[13,"PK11_TypePrivKey","","",22,null],[13,"PK11_TypePubKey","","",22,null],[13,"PK11_TypeCert","","",22,null],[13,"PK11_TypeSymKey","","",22,null],[6,"PK11GenericObject","","",null,null],[0,"secoid","nss_sys::bindings","",null,null],[5,"SECOID_FindOIDByTag","nss_sys::bindings::secoid","",null,null],[5,"SECOID_DestroyAlgorithmID","","",null,null],[0,"secoidt","nss_sys::bindings","",null,null],[3,"SECAlgorithmIDStr","nss_sys::bindings::secoidt","",null,null],[12,"algorithm","","",23,null],[12,"parameters","","",23,null],[6,"SECAlgorithmID","","",null,null],[3,"SECOidDataStr","","",null,null],[12,"oid","","",24,null],[12,"offset","","",24,null],[12,"desc","","",24,null],[12,"mechanism","","",24,null],[12,"supportedExtension","","",24,null],[6,"SECOidData","","",null,null],[4,"SECSupportExtenTag","","",null,null],[13,"INVALID_CERT_EXTENSION","","",25,null],[13,"UNSUPPORTED_CERT_EXTENSION","","",25,null],[13,"SUPPORTED_CERT_EXTENSION","","",25,null],[4,"SECOidTag","","",null,null],[13,"SEC_OID_UNKNOWN","","",26,null],[13,"SEC_OID_MD2","","",26,null],[13,"SEC_OID_MD4","","",26,null],[13,"SEC_OID_MD5","","",26,null],[13,"SEC_OID_SHA1","","",26,null],[13,"SEC_OID_RC2_CBC","","",26,null],[13,"SEC_OID_RC4","","",26,null],[13,"SEC_OID_DES_EDE3_CBC","","",26,null],[13,"SEC_OID_RC5_CBC_PAD","","",26,null],[13,"SEC_OID_DES_ECB","","",26,null],[13,"SEC_OID_DES_CBC","","",26,null],[13,"SEC_OID_DES_OFB","","",26,null],[13,"SEC_OID_DES_CFB","","",26,null],[13,"SEC_OID_DES_MAC","","",26,null],[13,"SEC_OID_DES_EDE","","",26,null],[13,"SEC_OID_ISO_SHA_WITH_RSA_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS1_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD2_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD4_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD5_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA1_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_MD2_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_MD5_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_SHA1_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS7","","",26,null],[13,"SEC_OID_PKCS7_DATA","","",26,null],[13,"SEC_OID_PKCS7_SIGNED_DATA","","",26,null],[13,"SEC_OID_PKCS7_ENVELOPED_DATA","","",26,null],[13,"SEC_OID_PKCS7_SIGNED_ENVELOPED_DATA","","",26,null],[13,"SEC_OID_PKCS7_DIGESTED_DATA","","",26,null],[13,"SEC_OID_PKCS7_ENCRYPTED_DATA","","",26,null],[13,"SEC_OID_PKCS9_EMAIL_ADDRESS","","",26,null],[13,"SEC_OID_PKCS9_UNSTRUCTURED_NAME","","",26,null],[13,"SEC_OID_PKCS9_CONTENT_TYPE","","",26,null],[13,"SEC_OID_PKCS9_MESSAGE_DIGEST","","",26,null],[13,"SEC_OID_PKCS9_SIGNING_TIME","","",26,null],[13,"SEC_OID_PKCS9_COUNTER_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS9_CHALLENGE_PASSWORD","","",26,null],[13,"SEC_OID_PKCS9_UNSTRUCTURED_ADDRESS","","",26,null],[13,"SEC_OID_PKCS9_EXTENDED_CERTIFICATE_ATTRIBUTES","","",26,null],[13,"SEC_OID_PKCS9_SMIME_CAPABILITIES","","",26,null],[13,"SEC_OID_AVA_COMMON_NAME","","",26,null],[13,"SEC_OID_AVA_COUNTRY_NAME","","",26,null],[13,"SEC_OID_AVA_LOCALITY","","",26,null],[13,"SEC_OID_AVA_STATE_OR_PROVINCE","","",26,null],[13,"SEC_OID_AVA_ORGANIZATION_NAME","","",26,null],[13,"SEC_OID_AVA_ORGANIZATIONAL_UNIT_NAME","","",26,null],[13,"SEC_OID_AVA_DN_QUALIFIER","","",26,null],[13,"SEC_OID_AVA_DC","","",26,null],[13,"SEC_OID_NS_TYPE_GIF","","",26,null],[13,"SEC_OID_NS_TYPE_JPEG","","",26,null],[13,"SEC_OID_NS_TYPE_URL","","",26,null],[13,"SEC_OID_NS_TYPE_HTML","","",26,null],[13,"SEC_OID_NS_TYPE_CERT_SEQUENCE","","",26,null],[13,"SEC_OID_MISSI_KEA_DSS_OLD","","",26,null],[13,"SEC_OID_MISSI_DSS_OLD","","",26,null],[13,"SEC_OID_MISSI_KEA_DSS","","",26,null],[13,"SEC_OID_MISSI_DSS","","",26,null],[13,"SEC_OID_MISSI_KEA","","",26,null],[13,"SEC_OID_MISSI_ALT_KEA","","",26,null],[13,"SEC_OID_NS_CERT_EXT_NETSCAPE_OK","","",26,null],[13,"SEC_OID_NS_CERT_EXT_ISSUER_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SUBJECT_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_TYPE","","",26,null],[13,"SEC_OID_NS_CERT_EXT_BASE_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_REVOCATION_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_REVOCATION_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_CRL_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_CERT_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_RENEWAL_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_POLICY_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_HOMEPAGE_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_ENTITY_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_USER_PICTURE","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SSL_SERVER_NAME","","",26,null],[13,"SEC_OID_NS_CERT_EXT_COMMENT","","",26,null],[13,"SEC_OID_NS_CERT_EXT_LOST_PASSWORD_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_RENEWAL_TIME","","",26,null],[13,"SEC_OID_NS_KEY_USAGE_GOVT_APPROVED","","",26,null],[13,"SEC_OID_X509_SUBJECT_DIRECTORY_ATTR","","",26,null],[13,"SEC_OID_X509_SUBJECT_KEY_ID","","",26,null],[13,"SEC_OID_X509_KEY_USAGE","","",26,null],[13,"SEC_OID_X509_PRIVATE_KEY_USAGE_PERIOD","","",26,null],[13,"SEC_OID_X509_SUBJECT_ALT_NAME","","",26,null],[13,"SEC_OID_X509_ISSUER_ALT_NAME","","",26,null],[13,"SEC_OID_X509_BASIC_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_NAME_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_CRL_DIST_POINTS","","",26,null],[13,"SEC_OID_X509_CERTIFICATE_POLICIES","","",26,null],[13,"SEC_OID_X509_POLICY_MAPPINGS","","",26,null],[13,"SEC_OID_X509_POLICY_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_AUTH_KEY_ID","","",26,null],[13,"SEC_OID_X509_EXT_KEY_USAGE","","",26,null],[13,"SEC_OID_X509_AUTH_INFO_ACCESS","","",26,null],[13,"SEC_OID_X509_CRL_NUMBER","","",26,null],[13,"SEC_OID_X509_REASON_CODE","","",26,null],[13,"SEC_OID_X509_INVALID_DATE","","",26,null],[13,"SEC_OID_X500_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_RFC1274_UID","","",26,null],[13,"SEC_OID_RFC1274_MAIL","","",26,null],[13,"SEC_OID_PKCS12","","",26,null],[13,"SEC_OID_PKCS12_MODE_IDS","","",26,null],[13,"SEC_OID_PKCS12_ESPVK_IDS","","",26,null],[13,"SEC_OID_PKCS12_BAG_IDS","","",26,null],[13,"SEC_OID_PKCS12_CERT_BAG_IDS","","",26,null],[13,"SEC_OID_PKCS12_OIDS","","",26,null],[13,"SEC_OID_PKCS12_PBE_IDS","","",26,null],[13,"SEC_OID_PKCS12_SIGNATURE_IDS","","",26,null],[13,"SEC_OID_PKCS12_ENVELOPING_IDS","","",26,null],[13,"SEC_OID_PKCS12_PKCS8_KEY_SHROUDING","","",26,null],[13,"SEC_OID_PKCS12_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_CERT_AND_CRL_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_SECRET_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_X509_CERT_CRL_BAG","","",26,null],[13,"SEC_OID_PKCS12_SDSI_CERT_BAG","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_TRIPLE_DES","","",26,null],[13,"SEC_OID_PKCS12_RSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_ANSIX9_DSA_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX9_DSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_BOGUS_DSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_VERISIGN_USER_NOTICES","","",26,null],[13,"SEC_OID_PKIX_CPS_POINTER_QUALIFIER","","",26,null],[13,"SEC_OID_PKIX_USER_NOTICE_QUALIFIER","","",26,null],[13,"SEC_OID_PKIX_OCSP","","",26,null],[13,"SEC_OID_PKIX_OCSP_BASIC_RESPONSE","","",26,null],[13,"SEC_OID_PKIX_OCSP_NONCE","","",26,null],[13,"SEC_OID_PKIX_OCSP_CRL","","",26,null],[13,"SEC_OID_PKIX_OCSP_RESPONSE","","",26,null],[13,"SEC_OID_PKIX_OCSP_NO_CHECK","","",26,null],[13,"SEC_OID_PKIX_OCSP_ARCHIVE_CUTOFF","","",26,null],[13,"SEC_OID_PKIX_OCSP_SERVICE_LOCATOR","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_REGTOKEN","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_AUTHENTICATOR","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PKIPUBINFO","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PKI_ARCH_OPTIONS","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_OLD_CERT_ID","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PROTOCOL_ENC_KEY","","",26,null],[13,"SEC_OID_PKIX_REGINFO_UTF8_PAIRS","","",26,null],[13,"SEC_OID_PKIX_REGINFO_CERT_REQUEST","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_SERVER_AUTH","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_CLIENT_AUTH","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_CODE_SIGN","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_EMAIL_PROTECT","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_TIME_STAMP","","",26,null],[13,"SEC_OID_OCSP_RESPONDER","","",26,null],[13,"SEC_OID_NETSCAPE_SMIME_KEA","","",26,null],[13,"SEC_OID_FORTEZZA_SKIPJACK","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_3KEY_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_2KEY_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_SAFE_CONTENTS_ID","","",26,null],[13,"SEC_OID_PKCS12_PKCS8_SHROUDED_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_PKCS8_SHROUDED_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_CERT_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_CRL_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_SECRET_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_SAFE_CONTENTS_BAG_ID","","",26,null],[13,"SEC_OID_PKCS9_X509_CERT","","",26,null],[13,"SEC_OID_PKCS9_SDSI_CERT","","",26,null],[13,"SEC_OID_PKCS9_X509_CRL","","",26,null],[13,"SEC_OID_PKCS9_FRIENDLY_NAME","","",26,null],[13,"SEC_OID_PKCS9_LOCAL_KEY_ID","","",26,null],[13,"SEC_OID_BOGUS_KEY_USAGE","","",26,null],[13,"SEC_OID_X942_DIFFIE_HELMAN_KEY","","",26,null],[13,"SEC_OID_NETSCAPE_NICKNAME","","",26,null],[13,"SEC_OID_NETSCAPE_RECOVERY_REQUEST","","",26,null],[13,"SEC_OID_CERT_RENEWAL_LOCATOR","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SCOPE_OF_USE","","",26,null],[13,"SEC_OID_CMS_EPHEMERAL_STATIC_DIFFIE_HELLMAN","","",26,null],[13,"SEC_OID_CMS_3DES_KEY_WRAP","","",26,null],[13,"SEC_OID_CMS_RC2_KEY_WRAP","","",26,null],[13,"SEC_OID_SMIME_ENCRYPTION_KEY_PREFERENCE","","",26,null],[13,"SEC_OID_AES_128_ECB","","",26,null],[13,"SEC_OID_AES_128_CBC","","",26,null],[13,"SEC_OID_AES_192_ECB","","",26,null],[13,"SEC_OID_AES_192_CBC","","",26,null],[13,"SEC_OID_AES_256_ECB","","",26,null],[13,"SEC_OID_AES_256_CBC","","",26,null],[13,"SEC_OID_SDN702_DSA_SIGNATURE","","",26,null],[13,"SEC_OID_MS_SMIME_ENCRYPTION_KEY_PREFERENCE","","",26,null],[13,"SEC_OID_SHA256","","",26,null],[13,"SEC_OID_SHA384","","",26,null],[13,"SEC_OID_SHA512","","",26,null],[13,"SEC_OID_PKCS1_SHA256_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA384_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA512_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_AES_128_KEY_WRAP","","",26,null],[13,"SEC_OID_AES_192_KEY_WRAP","","",26,null],[13,"SEC_OID_AES_256_KEY_WRAP","","",26,null],[13,"SEC_OID_ANSIX962_EC_PUBLIC_KEY","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA1_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V3","","",26,null],[13,"SEC_OID_SECG_EC_SECP256R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP112R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP112R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP128R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP128R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP160K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP160R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP160R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP192K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP224K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP224R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP256K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP384R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP521R1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB176V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB191V4","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB191V5","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB208W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB239V4","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB239V5","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB272W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB304W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB359V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB368W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB431R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT113R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT113R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT131R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT131R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT163K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT163R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT163R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT193R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT193R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT233K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT233R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT239K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT283K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT283R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT409K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT409R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT571K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT571R1","","",26,null],[13,"SEC_OID_NETSCAPE_AOLSCREENNAME","","",26,null],[13,"SEC_OID_AVA_SURNAME","","",26,null],[13,"SEC_OID_AVA_SERIAL_NUMBER","","",26,null],[13,"SEC_OID_AVA_STREET_ADDRESS","","",26,null],[13,"SEC_OID_AVA_TITLE","","",26,null],[13,"SEC_OID_AVA_POSTAL_ADDRESS","","",26,null],[13,"SEC_OID_AVA_POSTAL_CODE","","",26,null],[13,"SEC_OID_AVA_POST_OFFICE_BOX","","",26,null],[13,"SEC_OID_AVA_GIVEN_NAME","","",26,null],[13,"SEC_OID_AVA_INITIALS","","",26,null],[13,"SEC_OID_AVA_GENERATION_QUALIFIER","","",26,null],[13,"SEC_OID_AVA_HOUSE_IDENTIFIER","","",26,null],[13,"SEC_OID_AVA_PSEUDONYM","","",26,null],[13,"SEC_OID_PKIX_CA_ISSUERS","","",26,null],[13,"SEC_OID_PKCS9_EXTENSION_REQUEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SIGNATURE_RECOMMENDED_DIGEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SIGNATURE_SPECIFIED_DIGEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA224_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA256_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA384_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA512_SIGNATURE","","",26,null],[13,"SEC_OID_X509_HOLD_INSTRUCTION_CODE","","",26,null],[13,"SEC_OID_X509_DELTA_CRL_INDICATOR","","",26,null],[13,"SEC_OID_X509_ISSUING_DISTRIBUTION_POINT","","",26,null],[13,"SEC_OID_X509_CERT_ISSUER","","",26,null],[13,"SEC_OID_X509_FRESHEST_CRL","","",26,null],[13,"SEC_OID_X509_INHIBIT_ANY_POLICY","","",26,null],[13,"SEC_OID_X509_SUBJECT_INFO_ACCESS","","",26,null],[13,"SEC_OID_CAMELLIA_128_CBC","","",26,null],[13,"SEC_OID_CAMELLIA_192_CBC","","",26,null],[13,"SEC_OID_CAMELLIA_256_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBKDF2","","",26,null],[13,"SEC_OID_PKCS5_PBES2","","",26,null],[13,"SEC_OID_PKCS5_PBMAC1","","",26,null],[13,"SEC_OID_HMAC_SHA1","","",26,null],[13,"SEC_OID_HMAC_SHA224","","",26,null],[13,"SEC_OID_HMAC_SHA256","","",26,null],[13,"SEC_OID_HMAC_SHA384","","",26,null],[13,"SEC_OID_HMAC_SHA512","","",26,null],[13,"SEC_OID_PKIX_TIMESTAMPING","","",26,null],[13,"SEC_OID_PKIX_CA_REPOSITORY","","",26,null],[13,"SEC_OID_ISO_SHA1_WITH_RSA_SIGNATURE","","",26,null],[13,"SEC_OID_SEED_CBC","","",26,null],[13,"SEC_OID_X509_ANY_POLICY","","",26,null],[13,"SEC_OID_PKCS1_RSA_OAEP_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MGF1","","",26,null],[13,"SEC_OID_PKCS1_PSPECIFIED","","",26,null],[13,"SEC_OID_PKCS1_RSA_PSS_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS1_SHA224_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_SHA224","","",26,null],[13,"SEC_OID_EV_INCORPORATION_LOCALITY","","",26,null],[13,"SEC_OID_EV_INCORPORATION_STATE","","",26,null],[13,"SEC_OID_EV_INCORPORATION_COUNTRY","","",26,null],[13,"SEC_OID_BUSINESS_CATEGORY","","",26,null],[13,"SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA224_DIGEST","","",26,null],[13,"SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA256_DIGEST","","",26,null],[13,"SEC_OID_MS_EXT_KEY_USAGE_CTL_SIGNING","","",26,null],[13,"SEC_OID_AVA_NAME","","",26,null],[13,"SEC_OID_AES_128_GCM","","",26,null],[13,"SEC_OID_AES_192_GCM","","",26,null],[13,"SEC_OID_AES_256_GCM","","",26,null],[13,"SEC_OID_IDEA_CBC","","",26,null],[13,"SEC_OID_RC2_40_CBC","","",26,null],[13,"SEC_OID_DES_40_CBC","","",26,null],[13,"SEC_OID_RC4_40","","",26,null],[13,"SEC_OID_RC4_56","","",26,null],[13,"SEC_OID_NULL_CIPHER","","",26,null],[13,"SEC_OID_HMAC_MD5","","",26,null],[13,"SEC_OID_TLS_RSA","","",26,null],[13,"SEC_OID_TLS_DHE_RSA","","",26,null],[13,"SEC_OID_TLS_DHE_DSS","","",26,null],[13,"SEC_OID_TLS_DH_RSA","","",26,null],[13,"SEC_OID_TLS_DH_DSS","","",26,null],[13,"SEC_OID_TLS_DH_ANON","","",26,null],[13,"SEC_OID_TLS_ECDHE_ECDSA","","",26,null],[13,"SEC_OID_TLS_ECDHE_RSA","","",26,null],[13,"SEC_OID_TLS_ECDH_ECDSA","","",26,null],[13,"SEC_OID_TLS_ECDH_RSA","","",26,null],[13,"SEC_OID_TLS_ECDH_ANON","","",26,null],[13,"SEC_OID_TLS_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DHE_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DHE_DSS_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_DSS_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_ANON_EXPORT","","",26,null],[13,"SEC_OID_APPLY_SSL_POLICY","","",26,null],[13,"SEC_OID_CHACHA20_POLY1305","","",26,null],[13,"SEC_OID_TLS_ECDHE_PSK","","",26,null],[13,"SEC_OID_TLS_DHE_PSK","","",26,null],[13,"SEC_OID_TLS_FFDHE_2048","","",26,null],[13,"SEC_OID_TLS_FFDHE_3072","","",26,null],[13,"SEC_OID_TLS_FFDHE_4096","","",26,null],[13,"SEC_OID_TLS_FFDHE_6144","","",26,null],[13,"SEC_OID_TLS_FFDHE_8192","","",26,null],[13,"SEC_OID_TLS_DHE_CUSTOM","","",26,null],[13,"SEC_OID_CURVE25519","","",26,null],[13,"SEC_OID_TLS13_KEA_ANY","","",26,null],[13,"SEC_OID_X509_ANY_EXT_KEY_USAGE","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_IKE","","",26,null],[13,"SEC_OID_IPSEC_IKE_END","","",26,null],[13,"SEC_OID_IPSEC_IKE_INTERMEDIATE","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_END","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_TUNNEL","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_USER","","",26,null],[13,"SEC_OID_TOTAL","","",26,null],[0,"secport","nss_sys::bindings","",null,null],[5,"PORT_FreeArena","nss_sys::bindings::secport","",null,null],[5,"NSS_SecureMemcmp","","",null,null],[6,"size_t","","",null,null],[17,"EC_POINT_FORM_UNCOMPRESSED","nss_sys","",null,null],[17,"SHA256_LENGTH","","",null,null],[17,"SHA384_LENGTH","","",null,null],[17,"HASH_LENGTH_MAX","","",null,null],[17,"AES_BLOCK_SIZE","","",null,null],[6,"SECKEYPublicKey","","",null,null],[3,"SECKEYPublicKeyStr","","",null,null],[12,"arena","","",0,null],[12,"keyType","","",0,null],[12,"pkcs11Slot","","",0,null],[12,"pkcs11ID","","",0,null],[12,"u","","",0,null],[19,"SECKEYPublicKeyStr_u","","",null,null],[12,"rsa","","",1,null],[12,"dsa","","",1,null],[12,"dh","","",1,null],[12,"kea","","",1,null],[12,"fortezza","","",1,null],[12,"ec","","",1,null],[6,"SECKEYPrivateKey","","",null,null],[3,"SECKEYPrivateKeyStr","","",null,null],[12,"arena","","",2,null],[12,"keyType","","",2,null],[12,"pkcs11Slot","","",2,null],[12,"pkcs11ID","","",2,null],[12,"pkcs11IsTemp","","",2,null],[12,"wincx","","",2,null],[12,"staticflags","","",2,null],[4,"KeyType","","",null,null],[13,"nullKey","","",3,null],[13,"rsaKey","","",3,null],[13,"dsaKey","","",3,null],[13,"fortezzaKey","","",3,null],[13,"dhKey","","",3,null],[13,"keaKey","","",3,null],[13,"ecKey","","",3,null],[13,"rsaPssKey","","",3,null],[13,"rsaOaepKey","","",3,null],[6,"SECKEYRSAPublicKey","","",null,null],[3,"SECKEYRSAPublicKeyStr","","",null,null],[12,"arena","","",4,null],[12,"modulus","","",4,null],[12,"publicExponent","","",4,null],[6,"SECKEYDSAPublicKey","","",null,null],[3,"SECKEYDSAPublicKeyStr","","",null,null],[12,"params","","",5,null],[12,"publicValue","","",5,null],[6,"SECKEYPQGParams","","",null,null],[3,"SECKEYPQGParamsStr","","",null,null],[12,"arena","","",6,null],[12,"prime","","",6,null],[12,"subPrime","","",6,null],[12,"base","","",6,null],[6,"SECKEYDHPublicKey","","",null,null],[3,"SECKEYDHPublicKeyStr","","",null,null],[12,"arena","","",7,null],[12,"prime","","",7,null],[12,"base","","",7,null],[12,"publicValue","","",7,null],[6,"SECKEYKEAPublicKey","","",null,null],[3,"SECKEYKEAPublicKeyStr","","",null,null],[12,"params","","",8,null],[12,"publicValue","","",8,null],[6,"SECKEYKEAParams","","",null,null],[3,"SECKEYKEAParamsStr","","",null,null],[12,"arena","","",9,null],[12,"hash","","",9,null],[6,"SECKEYFortezzaPublicKey","","",null,null],[3,"SECKEYFortezzaPublicKeyStr","","",null,null],[12,"KEAversion","","",10,null],[12,"DSSversion","","",10,null],[12,"KMID","","",10,null],[12,"clearance","","",10,null],[12,"KEApriviledge","","",10,null],[12,"DSSpriviledge","","",10,null],[12,"KEAKey","","",10,null],[12,"DSSKey","","",10,null],[12,"params","","",10,null],[12,"keaParams","","",10,null],[6,"SECKEYECPublicKey","","",null,null],[3,"SECKEYECPublicKeyStr","","",null,null],[12,"DEREncodedParams","","",11,null],[12,"size","","",11,null],[12,"publicValue","","",11,null],[12,"encoding","","",11,null],[6,"SECKEYECParams","","",null,null],[4,"ECPointEncoding","","",null,null],[13,"ECPoint_Uncompressed","","",12,null],[13,"ECPoint_XOnly","","",12,null],[13,"ECPoint_Undefined","","",12,null],[17,"NSS_INIT_READONLY","","",null,null],[17,"NSS_INIT_NOCERTDB","","",null,null],[17,"NSS_INIT_NOMODDB","","",null,null],[17,"NSS_INIT_FORCEOPEN","","",null,null],[17,"NSS_INIT_OPTIMIZESPACE","","",null,null],[6,"NSSInitContext","","",null,null],[6,"NSSInitParameters","","",null,null],[17,"NSSCK_VENDOR_NSS","","",null,null],[17,"CKM_NSS","","",null,null],[17,"CKM_NSS_HKDF_SHA256","","",null,null],[17,"CKM_NSS_HKDF_SHA384","","",null,null],[6,"CK_GCM_PARAMS","","",null,null],[3,"CK_GCM_PARAMS_V3","","",null,null],[12,"pIv","","",13,null],[12,"ulIvLen","","",13,null],[12,"ulIvBits","","",13,null],[12,"pAAD","","",13,null],[12,"ulAADLen","","",13,null],[12,"ulTagBits","","",13,null],[3,"CK_NSS_HKDFParams","","",null,null],[12,"bExtract","","",14,null],[12,"pSalt","","",14,null],[12,"ulSaltLen","","",14,null],[12,"bExpand","","",14,null],[12,"pInfo","","",14,null],[12,"ulInfoLen","","",14,null],[17,"CK_TRUE","","",null,null],[17,"CK_FALSE","","",null,null],[6,"CK_BYTE","","",null,null],[6,"CK_BBOOL","","",null,null],[6,"CK_ULONG","","",null,null],[6,"CK_BYTE_PTR","","",null,null],[6,"CK_VOID_PTR","","",null,null],[6,"CK_OBJECT_HANDLE","","",null,null],[6,"CK_OBJECT_CLASS","","",null,null],[6,"CK_KEY_TYPE","","",null,null],[6,"CK_ATTRIBUTE_TYPE","","",null,null],[3,"CK_ATTRIBUTE","","",null,null],[12,"type_","","",15,null],[12,"pValue","","",15,null],[12,"ulValueLen","","",15,null],[6,"CK_MECHANISM_TYPE","","",null,null],[17,"CK_INVALID_HANDLE","","",null,null],[17,"CKO_PRIVATE_KEY","","",null,null],[17,"CKK_EC","","",null,null],[17,"CKA_CLASS","","",null,null],[17,"CKA_TOKEN","","",null,null],[17,"CKA_PRIVATE","","",null,null],[17,"CKA_VALUE","","",null,null],[17,"CKA_KEY_TYPE","","",null,null],[17,"CKA_ID","","",null,null],[17,"CKA_SENSITIVE","","",null,null],[17,"CKA_ENCRYPT","","",null,null],[17,"CKA_WRAP","","",null,null],[17,"CKA_SIGN","","",null,null],[17,"CKA_EC_PARAMS","","",null,null],[17,"CKA_EC_POINT","","",null,null],[17,"CKM_VENDOR_DEFINED","","",null,null],[17,"CKM_SHA256_HMAC","","",null,null],[17,"CKM_SHA384_HMAC","","",null,null],[17,"CKM_SHA512_HMAC","","",null,null],[17,"CKM_EC_KEY_PAIR_GEN","","",null,null],[17,"CKM_ECDH1_DERIVE","","",null,null],[17,"CKM_AES_CBC_PAD","","",null,null],[17,"CKM_AES_GCM","","",null,null],[17,"CKD_NULL","","",null,null],[3,"PLArena","","",null,null],[12,"next","","",16,null],[12,"base","","",16,null],[12,"limit","","",16,null],[12,"avail","","",16,null],[3,"PLArenaPool","","",null,null],[12,"first","","",17,null],[12,"current","","",17,null],[12,"arenasize","","",17,null],[12,"mask","","",17,null],[6,"PRErrorCode","","",null,null],[6,"PRIntn","","",null,null],[6,"PRBool","","",null,null],[6,"PRUword","","",null,null],[6,"PRInt32","","",null,null],[6,"PRUint32","","",null,null],[17,"PR_FALSE","","",null,null],[17,"PR_TRUE","","",null,null],[17,"SEC_ASN1_OBJECT_ID","","",null,null],[4,"SECItemType","","",null,null],[13,"siBuffer","","",18,null],[13,"siClearDataBuffer","","",18,null],[13,"siCipherDataBuffer","","",18,null],[13,"siDERCertBuffer","","",18,null],[13,"siEncodedCertBuffer","","",18,null],[13,"siDERNameBuffer","","",18,null],[13,"siEncodedNameBuffer","","",18,null],[13,"siAsciiNameString","","",18,null],[13,"siAsciiString","","",18,null],[13,"siDEROID","","",18,null],[13,"siUnsignedInteger","","",18,null],[13,"siUTCTime","","",18,null],[13,"siGeneralizedTime","","",18,null],[13,"siVisibleString","","",18,null],[13,"siUTF8String","","",18,null],[13,"siBMPString","","",18,null],[6,"SECItem","","",null,null],[3,"SECItemStr","","",null,null],[12,"type_","","",19,null],[12,"data","","",19,null],[12,"len","","",19,null],[4,"_SECStatus","","",null,null],[13,"SECWouldBlock","","",20,null],[13,"SECFailure","","",20,null],[13,"SECSuccess","","",20,null],[4,"SECStatus","","",null,null],[13,"SECWouldBlock","","",20,null],[13,"SECFailure","","",20,null],[13,"SECSuccess","","",20,null],[6,"PK11SlotInfo","","",null,null],[6,"PK11SymKey","","",null,null],[6,"PK11Context","","",null,null],[4,"PK11Origin","","",null,null],[13,"PK11_OriginNULL","","",21,null],[13,"PK11_OriginDerive","","",21,null],[13,"PK11_OriginGenerated","","",21,null],[13,"PK11_OriginFortezzaHack","","",21,null],[13,"PK11_OriginUnwrap","","",21,null],[4,"PK11ObjectType","","",null,null],[13,"PK11_TypeGeneric","","",22,null],[13,"PK11_TypePrivKey","","",22,null],[13,"PK11_TypePubKey","","",22,null],[13,"PK11_TypeCert","","",22,null],[13,"PK11_TypeSymKey","","",22,null],[6,"PK11GenericObject","","",null,null],[3,"SECAlgorithmIDStr","","",null,null],[12,"algorithm","","",23,null],[12,"parameters","","",23,null],[6,"SECAlgorithmID","","",null,null],[3,"SECOidDataStr","","",null,null],[12,"oid","","",24,null],[12,"offset","","",24,null],[12,"desc","","",24,null],[12,"mechanism","","",24,null],[12,"supportedExtension","","",24,null],[6,"SECOidData","","",null,null],[4,"SECSupportExtenTag","","",null,null],[13,"INVALID_CERT_EXTENSION","","",25,null],[13,"UNSUPPORTED_CERT_EXTENSION","","",25,null],[13,"SUPPORTED_CERT_EXTENSION","","",25,null],[4,"SECOidTag","","",null,null],[13,"SEC_OID_UNKNOWN","","",26,null],[13,"SEC_OID_MD2","","",26,null],[13,"SEC_OID_MD4","","",26,null],[13,"SEC_OID_MD5","","",26,null],[13,"SEC_OID_SHA1","","",26,null],[13,"SEC_OID_RC2_CBC","","",26,null],[13,"SEC_OID_RC4","","",26,null],[13,"SEC_OID_DES_EDE3_CBC","","",26,null],[13,"SEC_OID_RC5_CBC_PAD","","",26,null],[13,"SEC_OID_DES_ECB","","",26,null],[13,"SEC_OID_DES_CBC","","",26,null],[13,"SEC_OID_DES_OFB","","",26,null],[13,"SEC_OID_DES_CFB","","",26,null],[13,"SEC_OID_DES_MAC","","",26,null],[13,"SEC_OID_DES_EDE","","",26,null],[13,"SEC_OID_ISO_SHA_WITH_RSA_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS1_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD2_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD4_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MD5_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA1_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_MD2_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_MD5_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBE_WITH_SHA1_AND_DES_CBC","","",26,null],[13,"SEC_OID_PKCS7","","",26,null],[13,"SEC_OID_PKCS7_DATA","","",26,null],[13,"SEC_OID_PKCS7_SIGNED_DATA","","",26,null],[13,"SEC_OID_PKCS7_ENVELOPED_DATA","","",26,null],[13,"SEC_OID_PKCS7_SIGNED_ENVELOPED_DATA","","",26,null],[13,"SEC_OID_PKCS7_DIGESTED_DATA","","",26,null],[13,"SEC_OID_PKCS7_ENCRYPTED_DATA","","",26,null],[13,"SEC_OID_PKCS9_EMAIL_ADDRESS","","",26,null],[13,"SEC_OID_PKCS9_UNSTRUCTURED_NAME","","",26,null],[13,"SEC_OID_PKCS9_CONTENT_TYPE","","",26,null],[13,"SEC_OID_PKCS9_MESSAGE_DIGEST","","",26,null],[13,"SEC_OID_PKCS9_SIGNING_TIME","","",26,null],[13,"SEC_OID_PKCS9_COUNTER_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS9_CHALLENGE_PASSWORD","","",26,null],[13,"SEC_OID_PKCS9_UNSTRUCTURED_ADDRESS","","",26,null],[13,"SEC_OID_PKCS9_EXTENDED_CERTIFICATE_ATTRIBUTES","","",26,null],[13,"SEC_OID_PKCS9_SMIME_CAPABILITIES","","",26,null],[13,"SEC_OID_AVA_COMMON_NAME","","",26,null],[13,"SEC_OID_AVA_COUNTRY_NAME","","",26,null],[13,"SEC_OID_AVA_LOCALITY","","",26,null],[13,"SEC_OID_AVA_STATE_OR_PROVINCE","","",26,null],[13,"SEC_OID_AVA_ORGANIZATION_NAME","","",26,null],[13,"SEC_OID_AVA_ORGANIZATIONAL_UNIT_NAME","","",26,null],[13,"SEC_OID_AVA_DN_QUALIFIER","","",26,null],[13,"SEC_OID_AVA_DC","","",26,null],[13,"SEC_OID_NS_TYPE_GIF","","",26,null],[13,"SEC_OID_NS_TYPE_JPEG","","",26,null],[13,"SEC_OID_NS_TYPE_URL","","",26,null],[13,"SEC_OID_NS_TYPE_HTML","","",26,null],[13,"SEC_OID_NS_TYPE_CERT_SEQUENCE","","",26,null],[13,"SEC_OID_MISSI_KEA_DSS_OLD","","",26,null],[13,"SEC_OID_MISSI_DSS_OLD","","",26,null],[13,"SEC_OID_MISSI_KEA_DSS","","",26,null],[13,"SEC_OID_MISSI_DSS","","",26,null],[13,"SEC_OID_MISSI_KEA","","",26,null],[13,"SEC_OID_MISSI_ALT_KEA","","",26,null],[13,"SEC_OID_NS_CERT_EXT_NETSCAPE_OK","","",26,null],[13,"SEC_OID_NS_CERT_EXT_ISSUER_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SUBJECT_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_TYPE","","",26,null],[13,"SEC_OID_NS_CERT_EXT_BASE_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_REVOCATION_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_REVOCATION_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_CRL_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_CERT_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_RENEWAL_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CA_POLICY_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_HOMEPAGE_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_ENTITY_LOGO","","",26,null],[13,"SEC_OID_NS_CERT_EXT_USER_PICTURE","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SSL_SERVER_NAME","","",26,null],[13,"SEC_OID_NS_CERT_EXT_COMMENT","","",26,null],[13,"SEC_OID_NS_CERT_EXT_LOST_PASSWORD_URL","","",26,null],[13,"SEC_OID_NS_CERT_EXT_CERT_RENEWAL_TIME","","",26,null],[13,"SEC_OID_NS_KEY_USAGE_GOVT_APPROVED","","",26,null],[13,"SEC_OID_X509_SUBJECT_DIRECTORY_ATTR","","",26,null],[13,"SEC_OID_X509_SUBJECT_KEY_ID","","",26,null],[13,"SEC_OID_X509_KEY_USAGE","","",26,null],[13,"SEC_OID_X509_PRIVATE_KEY_USAGE_PERIOD","","",26,null],[13,"SEC_OID_X509_SUBJECT_ALT_NAME","","",26,null],[13,"SEC_OID_X509_ISSUER_ALT_NAME","","",26,null],[13,"SEC_OID_X509_BASIC_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_NAME_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_CRL_DIST_POINTS","","",26,null],[13,"SEC_OID_X509_CERTIFICATE_POLICIES","","",26,null],[13,"SEC_OID_X509_POLICY_MAPPINGS","","",26,null],[13,"SEC_OID_X509_POLICY_CONSTRAINTS","","",26,null],[13,"SEC_OID_X509_AUTH_KEY_ID","","",26,null],[13,"SEC_OID_X509_EXT_KEY_USAGE","","",26,null],[13,"SEC_OID_X509_AUTH_INFO_ACCESS","","",26,null],[13,"SEC_OID_X509_CRL_NUMBER","","",26,null],[13,"SEC_OID_X509_REASON_CODE","","",26,null],[13,"SEC_OID_X509_INVALID_DATE","","",26,null],[13,"SEC_OID_X500_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_RFC1274_UID","","",26,null],[13,"SEC_OID_RFC1274_MAIL","","",26,null],[13,"SEC_OID_PKCS12","","",26,null],[13,"SEC_OID_PKCS12_MODE_IDS","","",26,null],[13,"SEC_OID_PKCS12_ESPVK_IDS","","",26,null],[13,"SEC_OID_PKCS12_BAG_IDS","","",26,null],[13,"SEC_OID_PKCS12_CERT_BAG_IDS","","",26,null],[13,"SEC_OID_PKCS12_OIDS","","",26,null],[13,"SEC_OID_PKCS12_PBE_IDS","","",26,null],[13,"SEC_OID_PKCS12_SIGNATURE_IDS","","",26,null],[13,"SEC_OID_PKCS12_ENVELOPING_IDS","","",26,null],[13,"SEC_OID_PKCS12_PKCS8_KEY_SHROUDING","","",26,null],[13,"SEC_OID_PKCS12_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_CERT_AND_CRL_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_SECRET_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_X509_CERT_CRL_BAG","","",26,null],[13,"SEC_OID_PKCS12_SDSI_CERT_BAG","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_TRIPLE_DES","","",26,null],[13,"SEC_OID_PKCS12_RSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_ANSIX9_DSA_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX9_DSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_BOGUS_DSA_SIGNATURE_WITH_SHA1_DIGEST","","",26,null],[13,"SEC_OID_VERISIGN_USER_NOTICES","","",26,null],[13,"SEC_OID_PKIX_CPS_POINTER_QUALIFIER","","",26,null],[13,"SEC_OID_PKIX_USER_NOTICE_QUALIFIER","","",26,null],[13,"SEC_OID_PKIX_OCSP","","",26,null],[13,"SEC_OID_PKIX_OCSP_BASIC_RESPONSE","","",26,null],[13,"SEC_OID_PKIX_OCSP_NONCE","","",26,null],[13,"SEC_OID_PKIX_OCSP_CRL","","",26,null],[13,"SEC_OID_PKIX_OCSP_RESPONSE","","",26,null],[13,"SEC_OID_PKIX_OCSP_NO_CHECK","","",26,null],[13,"SEC_OID_PKIX_OCSP_ARCHIVE_CUTOFF","","",26,null],[13,"SEC_OID_PKIX_OCSP_SERVICE_LOCATOR","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_REGTOKEN","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_AUTHENTICATOR","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PKIPUBINFO","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PKI_ARCH_OPTIONS","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_OLD_CERT_ID","","",26,null],[13,"SEC_OID_PKIX_REGCTRL_PROTOCOL_ENC_KEY","","",26,null],[13,"SEC_OID_PKIX_REGINFO_UTF8_PAIRS","","",26,null],[13,"SEC_OID_PKIX_REGINFO_CERT_REQUEST","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_SERVER_AUTH","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_CLIENT_AUTH","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_CODE_SIGN","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_EMAIL_PROTECT","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_TIME_STAMP","","",26,null],[13,"SEC_OID_OCSP_RESPONDER","","",26,null],[13,"SEC_OID_NETSCAPE_SMIME_KEA","","",26,null],[13,"SEC_OID_FORTEZZA_SKIPJACK","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC4","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_3KEY_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_2KEY_TRIPLE_DES_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","","",26,null],[13,"SEC_OID_PKCS12_SAFE_CONTENTS_ID","","",26,null],[13,"SEC_OID_PKCS12_PKCS8_SHROUDED_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_PKCS8_SHROUDED_KEY_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_CERT_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_CRL_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_SECRET_BAG_ID","","",26,null],[13,"SEC_OID_PKCS12_V1_SAFE_CONTENTS_BAG_ID","","",26,null],[13,"SEC_OID_PKCS9_X509_CERT","","",26,null],[13,"SEC_OID_PKCS9_SDSI_CERT","","",26,null],[13,"SEC_OID_PKCS9_X509_CRL","","",26,null],[13,"SEC_OID_PKCS9_FRIENDLY_NAME","","",26,null],[13,"SEC_OID_PKCS9_LOCAL_KEY_ID","","",26,null],[13,"SEC_OID_BOGUS_KEY_USAGE","","",26,null],[13,"SEC_OID_X942_DIFFIE_HELMAN_KEY","","",26,null],[13,"SEC_OID_NETSCAPE_NICKNAME","","",26,null],[13,"SEC_OID_NETSCAPE_RECOVERY_REQUEST","","",26,null],[13,"SEC_OID_CERT_RENEWAL_LOCATOR","","",26,null],[13,"SEC_OID_NS_CERT_EXT_SCOPE_OF_USE","","",26,null],[13,"SEC_OID_CMS_EPHEMERAL_STATIC_DIFFIE_HELLMAN","","",26,null],[13,"SEC_OID_CMS_3DES_KEY_WRAP","","",26,null],[13,"SEC_OID_CMS_RC2_KEY_WRAP","","",26,null],[13,"SEC_OID_SMIME_ENCRYPTION_KEY_PREFERENCE","","",26,null],[13,"SEC_OID_AES_128_ECB","","",26,null],[13,"SEC_OID_AES_128_CBC","","",26,null],[13,"SEC_OID_AES_192_ECB","","",26,null],[13,"SEC_OID_AES_192_CBC","","",26,null],[13,"SEC_OID_AES_256_ECB","","",26,null],[13,"SEC_OID_AES_256_CBC","","",26,null],[13,"SEC_OID_SDN702_DSA_SIGNATURE","","",26,null],[13,"SEC_OID_MS_SMIME_ENCRYPTION_KEY_PREFERENCE","","",26,null],[13,"SEC_OID_SHA256","","",26,null],[13,"SEC_OID_SHA384","","",26,null],[13,"SEC_OID_SHA512","","",26,null],[13,"SEC_OID_PKCS1_SHA256_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA384_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_SHA512_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_AES_128_KEY_WRAP","","",26,null],[13,"SEC_OID_AES_192_KEY_WRAP","","",26,null],[13,"SEC_OID_AES_256_KEY_WRAP","","",26,null],[13,"SEC_OID_ANSIX962_EC_PUBLIC_KEY","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA1_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME192V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_PRIME239V3","","",26,null],[13,"SEC_OID_SECG_EC_SECP256R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP112R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP112R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP128R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP128R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP160K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP160R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP160R2","","",26,null],[13,"SEC_OID_SECG_EC_SECP192K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP224K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP224R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP256K1","","",26,null],[13,"SEC_OID_SECG_EC_SECP384R1","","",26,null],[13,"SEC_OID_SECG_EC_SECP521R1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB163V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB176V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB191V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB191V4","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB191V5","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB208W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V2","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB239V3","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB239V4","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2ONB239V5","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB272W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB304W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB359V1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2PNB368W1","","",26,null],[13,"SEC_OID_ANSIX962_EC_C2TNB431R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT113R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT113R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT131R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT131R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT163K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT163R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT163R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT193R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT193R2","","",26,null],[13,"SEC_OID_SECG_EC_SECT233K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT233R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT239K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT283K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT283R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT409K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT409R1","","",26,null],[13,"SEC_OID_SECG_EC_SECT571K1","","",26,null],[13,"SEC_OID_SECG_EC_SECT571R1","","",26,null],[13,"SEC_OID_NETSCAPE_AOLSCREENNAME","","",26,null],[13,"SEC_OID_AVA_SURNAME","","",26,null],[13,"SEC_OID_AVA_SERIAL_NUMBER","","",26,null],[13,"SEC_OID_AVA_STREET_ADDRESS","","",26,null],[13,"SEC_OID_AVA_TITLE","","",26,null],[13,"SEC_OID_AVA_POSTAL_ADDRESS","","",26,null],[13,"SEC_OID_AVA_POSTAL_CODE","","",26,null],[13,"SEC_OID_AVA_POST_OFFICE_BOX","","",26,null],[13,"SEC_OID_AVA_GIVEN_NAME","","",26,null],[13,"SEC_OID_AVA_INITIALS","","",26,null],[13,"SEC_OID_AVA_GENERATION_QUALIFIER","","",26,null],[13,"SEC_OID_AVA_HOUSE_IDENTIFIER","","",26,null],[13,"SEC_OID_AVA_PSEUDONYM","","",26,null],[13,"SEC_OID_PKIX_CA_ISSUERS","","",26,null],[13,"SEC_OID_PKCS9_EXTENSION_REQUEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SIGNATURE_RECOMMENDED_DIGEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SIGNATURE_SPECIFIED_DIGEST","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA224_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA256_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA384_SIGNATURE","","",26,null],[13,"SEC_OID_ANSIX962_ECDSA_SHA512_SIGNATURE","","",26,null],[13,"SEC_OID_X509_HOLD_INSTRUCTION_CODE","","",26,null],[13,"SEC_OID_X509_DELTA_CRL_INDICATOR","","",26,null],[13,"SEC_OID_X509_ISSUING_DISTRIBUTION_POINT","","",26,null],[13,"SEC_OID_X509_CERT_ISSUER","","",26,null],[13,"SEC_OID_X509_FRESHEST_CRL","","",26,null],[13,"SEC_OID_X509_INHIBIT_ANY_POLICY","","",26,null],[13,"SEC_OID_X509_SUBJECT_INFO_ACCESS","","",26,null],[13,"SEC_OID_CAMELLIA_128_CBC","","",26,null],[13,"SEC_OID_CAMELLIA_192_CBC","","",26,null],[13,"SEC_OID_CAMELLIA_256_CBC","","",26,null],[13,"SEC_OID_PKCS5_PBKDF2","","",26,null],[13,"SEC_OID_PKCS5_PBES2","","",26,null],[13,"SEC_OID_PKCS5_PBMAC1","","",26,null],[13,"SEC_OID_HMAC_SHA1","","",26,null],[13,"SEC_OID_HMAC_SHA224","","",26,null],[13,"SEC_OID_HMAC_SHA256","","",26,null],[13,"SEC_OID_HMAC_SHA384","","",26,null],[13,"SEC_OID_HMAC_SHA512","","",26,null],[13,"SEC_OID_PKIX_TIMESTAMPING","","",26,null],[13,"SEC_OID_PKIX_CA_REPOSITORY","","",26,null],[13,"SEC_OID_ISO_SHA1_WITH_RSA_SIGNATURE","","",26,null],[13,"SEC_OID_SEED_CBC","","",26,null],[13,"SEC_OID_X509_ANY_POLICY","","",26,null],[13,"SEC_OID_PKCS1_RSA_OAEP_ENCRYPTION","","",26,null],[13,"SEC_OID_PKCS1_MGF1","","",26,null],[13,"SEC_OID_PKCS1_PSPECIFIED","","",26,null],[13,"SEC_OID_PKCS1_RSA_PSS_SIGNATURE","","",26,null],[13,"SEC_OID_PKCS1_SHA224_WITH_RSA_ENCRYPTION","","",26,null],[13,"SEC_OID_SHA224","","",26,null],[13,"SEC_OID_EV_INCORPORATION_LOCALITY","","",26,null],[13,"SEC_OID_EV_INCORPORATION_STATE","","",26,null],[13,"SEC_OID_EV_INCORPORATION_COUNTRY","","",26,null],[13,"SEC_OID_BUSINESS_CATEGORY","","",26,null],[13,"SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA224_DIGEST","","",26,null],[13,"SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA256_DIGEST","","",26,null],[13,"SEC_OID_MS_EXT_KEY_USAGE_CTL_SIGNING","","",26,null],[13,"SEC_OID_AVA_NAME","","",26,null],[13,"SEC_OID_AES_128_GCM","","",26,null],[13,"SEC_OID_AES_192_GCM","","",26,null],[13,"SEC_OID_AES_256_GCM","","",26,null],[13,"SEC_OID_IDEA_CBC","","",26,null],[13,"SEC_OID_RC2_40_CBC","","",26,null],[13,"SEC_OID_DES_40_CBC","","",26,null],[13,"SEC_OID_RC4_40","","",26,null],[13,"SEC_OID_RC4_56","","",26,null],[13,"SEC_OID_NULL_CIPHER","","",26,null],[13,"SEC_OID_HMAC_MD5","","",26,null],[13,"SEC_OID_TLS_RSA","","",26,null],[13,"SEC_OID_TLS_DHE_RSA","","",26,null],[13,"SEC_OID_TLS_DHE_DSS","","",26,null],[13,"SEC_OID_TLS_DH_RSA","","",26,null],[13,"SEC_OID_TLS_DH_DSS","","",26,null],[13,"SEC_OID_TLS_DH_ANON","","",26,null],[13,"SEC_OID_TLS_ECDHE_ECDSA","","",26,null],[13,"SEC_OID_TLS_ECDHE_RSA","","",26,null],[13,"SEC_OID_TLS_ECDH_ECDSA","","",26,null],[13,"SEC_OID_TLS_ECDH_RSA","","",26,null],[13,"SEC_OID_TLS_ECDH_ANON","","",26,null],[13,"SEC_OID_TLS_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DHE_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DHE_DSS_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_RSA_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_DSS_EXPORT","","",26,null],[13,"SEC_OID_TLS_DH_ANON_EXPORT","","",26,null],[13,"SEC_OID_APPLY_SSL_POLICY","","",26,null],[13,"SEC_OID_CHACHA20_POLY1305","","",26,null],[13,"SEC_OID_TLS_ECDHE_PSK","","",26,null],[13,"SEC_OID_TLS_DHE_PSK","","",26,null],[13,"SEC_OID_TLS_FFDHE_2048","","",26,null],[13,"SEC_OID_TLS_FFDHE_3072","","",26,null],[13,"SEC_OID_TLS_FFDHE_4096","","",26,null],[13,"SEC_OID_TLS_FFDHE_6144","","",26,null],[13,"SEC_OID_TLS_FFDHE_8192","","",26,null],[13,"SEC_OID_TLS_DHE_CUSTOM","","",26,null],[13,"SEC_OID_CURVE25519","","",26,null],[13,"SEC_OID_TLS13_KEA_ANY","","",26,null],[13,"SEC_OID_X509_ANY_EXT_KEY_USAGE","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_IKE","","",26,null],[13,"SEC_OID_IPSEC_IKE_END","","",26,null],[13,"SEC_OID_IPSEC_IKE_INTERMEDIATE","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_END","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_TUNNEL","","",26,null],[13,"SEC_OID_EXT_KEY_USAGE_IPSEC_USER","","",26,null],[13,"SEC_OID_TOTAL","","",26,null],[6,"size_t","","",null,null],[11,"from","nss_sys::bindings::keythi","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","nss_sys::bindings::pkcs11n","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","nss_sys::bindings::pkcs11t","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","nss_sys::bindings::plarena","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","nss_sys::bindings::seccomon","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","nss_sys::bindings::secmodt","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","nss_sys::bindings::secoidt","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"clone","nss_sys::bindings::keythi","",4,[[],["seckeyrsapublickeystr",3]]],[11,"clone","","",5,[[],["seckeydsapublickeystr",3]]],[11,"clone","","",6,[[],["seckeypqgparamsstr",3]]],[11,"clone","","",7,[[],["seckeydhpublickeystr",3]]],[11,"clone","","",8,[[],["seckeykeapublickeystr",3]]],[11,"clone","","",9,[[],["seckeykeaparamsstr",3]]],[11,"clone","","",10,[[],["seckeyfortezzapublickeystr",3]]],[11,"clone","","",11,[[],["seckeyecpublickeystr",3]]],[11,"clone","","",12,[[],["ecpointencoding",4]]],[11,"clone","nss_sys::bindings::pkcs11t","",15,[[],["ck_attribute",3]]],[11,"clone","nss_sys::bindings::plarena","",16,[[],["plarena",3]]],[11,"clone","","",17,[[],["plarenapool",3]]],[11,"clone","nss_sys::bindings::seccomon","",19,[[],["secitemstr",3]]],[11,"clone","nss_sys::bindings::secoidt","",23,[[],["secalgorithmidstr",3]]],[11,"clone","","",24,[[],["secoiddatastr",3]]],[11,"eq","nss_sys::bindings::seccomon","",20,[[["_secstatus",4]],["bool",15]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]]],"p":[[3,"SECKEYPublicKeyStr"],[19,"SECKEYPublicKeyStr_u"],[3,"SECKEYPrivateKeyStr"],[4,"KeyType"],[3,"SECKEYRSAPublicKeyStr"],[3,"SECKEYDSAPublicKeyStr"],[3,"SECKEYPQGParamsStr"],[3,"SECKEYDHPublicKeyStr"],[3,"SECKEYKEAPublicKeyStr"],[3,"SECKEYKEAParamsStr"],[3,"SECKEYFortezzaPublicKeyStr"],[3,"SECKEYECPublicKeyStr"],[4,"ECPointEncoding"],[3,"CK_GCM_PARAMS_V3"],[3,"CK_NSS_HKDFParams"],[3,"CK_ATTRIBUTE"],[3,"PLArena"],[3,"PLArenaPool"],[4,"SECItemType"],[3,"SECItemStr"],[4,"_SECStatus"],[4,"PK11Origin"],[4,"PK11ObjectType"],[3,"SECAlgorithmIDStr"],[3,"SECOidDataStr"],[4,"SECSupportExtenTag"],[4,"SECOidTag"]]},\
"places":{"doc":"","i":[[0,"api","places","",null,null],[0,"history","places::api","",null,null],[5,"can_add_url","places::api::history","",null,[[["url",3]],[["bool",15],["result",6]]]],[3,"AddablePlaceInfo","","",null,null],[12,"url","","",0,null],[12,"title","","",0,null],[12,"visits","","",0,null],[3,"AddableVisit","","",null,null],[12,"date","","",1,null],[12,"transition","","",1,null],[12,"referrer","","",1,null],[12,"is_local","","",1,null],[5,"insert","","",null,[[["placesdb",3],["addableplaceinfo",3]],["result",6]]],[5,"is_recently_visited","","",null,[[["url",3]],["bool",15]]],[5,"add_recently_visited","","",null,[[["url",3]]]],[4,"RedirectSourceType","","",null,null],[13,"Temporary","","",2,null],[13,"Permanent","","",2,null],[5,"visit_uri","","",null,[[["url",3],["option",4],["bool",15],["option",4],["url",3],["redirectsourcetype",4],["placesdb",3],["visittransition",4]],["result",6]]],[0,"matcher","places::api","",null,null],[5,"query_flat_rows_and_then_named","places::api::matcher","",null,[[["placesdb",3],["str",15]],[["result",6],["vec",3]]]],[3,"SearchParams","","",null,null],[12,"search_string","","",3,null],[12,"limit","","",3,null],[5,"search_frecent","","Synchronously queries all providers for autocomplete …",null,[[["placesdb",3],["searchparams",3]],[["result",6],["vec",3]]]],[5,"match_url","","",null,[[["placesdb",3]],[["option",4],["result",6]]]],[5,"match_with_limit","","",null,[[["placesdb",3],["u32",15]],[["result",6],["vec",3]]]],[5,"accept_result","","Records an accepted autocomplete match, recording the …",null,[[["placesdb",3],["url",3],["str",15]],["result",6]]],[5,"split_after_prefix","","",null,[[["str",15]]]],[5,"split_after_host_and_port","","",null,[[["str",15]]]],[5,"looks_like_origin","","",null,[[["str",15]],["bool",15]]],[4,"MatchReason","","The match reason specifies why an autocomplete search …",null,null],[13,"Keyword","","",4,null],[13,"Origin","","",4,null],[13,"Url","","",4,null],[13,"PreviousUse","","",4,null],[13,"Bookmark","","",4,null],[13,"Tags","","",4,null],[3,"SearchResult","","",null,null],[12,"search_string","","The search string for this match.",5,null],[12,"url","","The URL to open when the user confirms a match. This is …",5,null],[12,"title","","The title of the autocompleted value, to show in the UI. …",5,null],[12,"icon_url","","The favicon URL.",5,null],[12,"frecency","","A frecency score for this match.",5,null],[12,"reasons","","A list of reasons why this matched.",5,null],[11,"from_adaptive_row","","Default search behaviors from Desktop: HISTORY, BOOKMARK, …",5,[[["row",3]],["result",6]]],[11,"from_suggestion_row","","",5,[[["row",3]],["result",6]]],[11,"from_origin_row","","",5,[[["row",3]],["result",6]]],[11,"from_url_row","","",5,[[["row",3]],["result",6]]],[8,"Matcher","","",null,null],[10,"search","","",6,[[["placesdb",3],["u32",15]],[["result",6],["vec",3]]]],[3,"OriginOrUrl","","",null,null],[12,"query","","",7,null],[11,"new","","",7,[[["str",15]],["originorurl",3]]],[17,"URL_SQL","","",null,null],[17,"ORIGIN_SQL","","",null,null],[3,"Adaptive","","",null,null],[12,"query","","",8,null],[12,"match_behavior","","",8,null],[12,"search_behavior","","",8,null],[11,"with_behavior","","",8,[[["matchbehavior",4],["searchbehavior",3],["str",15]],["adaptive",3]]],[3,"Suggestions","","",null,null],[12,"query","","",9,null],[12,"match_behavior","","",9,null],[12,"search_behavior","","",9,null],[11,"with_behavior","","",9,[[["matchbehavior",4],["searchbehavior",3],["str",15]],["suggestions",3]]],[0,"places_api","places::api","",null,null],[17,"GLOBAL_STATE_META_KEY","places::api::places_api","",null,null],[4,"ConnectionType","","",null,null],[13,"ReadOnly","","",10,null],[13,"ReadWrite","","",10,null],[13,"Sync","","",10,null],[11,"from_primitive","","",10,[[["u8",15]],["option",4]]],[11,"rusqlite_flags","","",10,[[],["openflags",3]]],[3,"APIS","","",null,null],[12,"__private_field","","",11,null],[7,"ID_COUNTER","","",null,null],[3,"SyncState","","",null,null],[12,"mem_cached_state","","",12,null],[12,"disk_cached_state","","",12,null],[3,"PlacesApi","","The entry-point to the places API. This object gives …",null,null],[12,"db_name","","",13,null],[12,"write_connection","","",13,null],[12,"sync_state","","",13,null],[12,"coop_tx_lock","","",13,null],[12,"sync_conn_active","","",13,null],[12,"id","","",13,null],[11,"new","","Create a new, or fetch an already open, PlacesApi backed …",13,[[],[["arc",3],["result",6]]]],[11,"new_memory","","Create a new, or fetch an already open, memory-based …",13,[[["str",15]],[["arc",3],["result",6]]]],[11,"new_or_existing_into","","",13,[[["bool",15],["pathbuf",3],["hashmap",3]],[["arc",3],["result",6]]]],[11,"new_or_existing","","",13,[[["pathbuf",3]],[["arc",3],["result",6]]]],[11,"open_connection","","Open a connection to the database.",13,[[["connectiontype",4]],[["placesdb",3],["result",6]]]],[11,"open_sync_connection","","",13,[[],[["syncconn",3],["result",6]]]],[11,"close_connection","","Close a connection to the database. If the connection is …",13,[[["placesdb",3]],["result",6]]],[11,"get_disk_persisted_state","","",13,[[["placesdb",3]],[["option",4],["result",6]]]],[11,"set_disk_persisted_state","","",13,[[["placesdb",3],["option",4]],["result",6]]],[11,"sync_history","","",13,[[["keybundle",3],["sync15storageclientinit",3]],[["result",6],["synctelemetryping",3]]]],[11,"sync_bookmarks","","",13,[[["keybundle",3],["sync15storageclientinit",3]],[["result",6],["synctelemetryping",3]]]],[11,"do_sync_one","","",13,[[["str",15]],[["result",6],["synctelemetryping",3]]]],[11,"sync","","",13,[[["keybundle",3],["sync15storageclientinit",3]],[["result",6],["syncresult",3]]]],[11,"wipe_bookmarks","","",13,[[],["result",6]]],[11,"reset_bookmarks","","",13,[[],["result",6]]],[11,"wipe_history","","",13,[[],["result",6]]],[11,"reset_history","","",13,[[],["result",6]]],[11,"new_sync_conn_interrupt_handle","","Get a new interrupt handle for the sync connection.",13,[[],[["sqlinterrupthandle",3],["result",6]]]],[3,"SyncConn","","Wrapper around PlacesDb that automatically sets a flag (…",null,null],[12,"db","","",14,null],[12,"flag","","",14,null],[5,"apply_observation","places::api","",null,[[["placesdb",3],["visitobservation",3]],["result",6]]],[0,"error","places","",null,null],[4,"ErrorKind","places::error","",null,null],[13,"InvalidPlaceInfo","","",15,null],[13,"Corruption","","",15,null],[13,"SyncAdapterError","","",15,null],[13,"MergeError","","",15,null],[13,"JsonError","","",15,null],[13,"SqlError","","",15,null],[13,"UrlParseError","","",15,null],[13,"ConnectionAlreadyOpen","","",15,null],[13,"InvalidConnectionType","","",15,null],[13,"IoError","","",15,null],[13,"InterruptedError","","",15,null],[13,"WrongApiForClose","","",15,null],[13,"MissingBookmarkKind","","",15,null],[13,"UnsupportedIncomingBookmarkType","","",15,null],[13,"UnsupportedSyncedBookmarkKind","","",15,null],[13,"UnsupportedSyncedBookmarkValidity","","",15,null],[13,"IllegalDatabasePath","","",15,null],[13,"ProtobufDecodeError","","",15,null],[13,"Utf8Error","","",15,null],[13,"DatabaseUpgradeError","","",15,null],[13,"UnsupportedDatabaseVersion","","",15,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",16,null],[12,"backtrace","","",16,null],[11,"new","","",16,[[["errorkind",4]]]],[11,"get_backtrace","","",16,[[],[["option",4],["mutex",3]]]],[3,"Error","","",null,null],[12,"0","","",17,null],[11,"kind","","",17,[[],["errorkind",4]]],[11,"backtrace","","",17,[[],[["option",4],["mutex",3]]]],[4,"InvalidPlaceInfo","","",null,null],[13,"NoUrl","","",18,null],[13,"InvalidGuid","","",18,null],[13,"InvalidParent","","",18,null],[13,"InvalidChildGuid","","",18,null],[13,"NoSuchGuid","","",18,null],[13,"NoSuchUrl","","",18,null],[13,"MismatchedBookmarkType","","",18,null],[13,"UrlTooLong","","",18,null],[13,"InvalidTag","","",18,null],[13,"IllegalChange","","",18,null],[13,"CannotUpdateRoot","","",18,null],[4,"Corruption","","",null,null],[13,"NoParent","","",19,null],[13,"InvalidLocalRoots","","",19,null],[13,"InvalidSyncedRoots","","",19,null],[13,"NonRootWithoutParent","","",19,null],[0,"types","places","",null,null],[0,"visit_transition_set","places::types","",null,null],[3,"VisitTransitionSet","places::types::visit_transition_set","",null,null],[12,"bits","","",20,null],[17,"ALL_BITS_SET","","",null,null],[11,"new","","",20,[[]]],[11,"empty","","",20,[[]]],[11,"all","","",20,[[]]],[11,"single","","",20,[[["visittransition",4]]]],[11,"for_specific","","",20,[[]]],[11,"into_u16","","",20,[[],["u16",15]]],[11,"from_u16","","",20,[[["u16",15]],[["invalidvisittype",3],["visittransitionset",3],["result",4]]]],[11,"contains","","",20,[[["visittransition",4]],["bool",15]]],[11,"insert","","",20,[[["visittransition",4]]]],[11,"remove","","",20,[[["visittransition",4]]]],[11,"complement","","",20,[[],["visittransitionset",3]]],[11,"len","","",20,[[],["usize",15]]],[11,"is_empty","","",20,[[],["bool",15]]],[3,"VisitTransitionSetIter","","",null,null],[12,"bits","","",21,null],[12,"pos","","",21,null],[3,"VisitTransitionSet","places::types","",null,null],[12,"bits","","",20,null],[3,"InvalidVisitType","","",null,null],[4,"VisitTransition","","",null,null],[13,"Link","","",22,null],[13,"Typed","","",22,null],[13,"Bookmark","","",22,null],[13,"Embed","","",22,null],[13,"RedirectPermanent","","",22,null],[13,"RedirectTemporary","","",22,null],[13,"Download","","",22,null],[13,"FramedLink","","",22,null],[13,"Reload","","",22,null],[11,"from_primitive","","",22,[[["u8",15]],["option",4]]],[3,"VisitTransitionSerdeVisitor","","",null,null],[4,"BookmarkType","","Bookmark types.",null,null],[13,"Bookmark","","",23,null],[13,"Folder","","",23,null],[13,"Separator","","",23,null],[11,"from_u8","","",23,[[["u8",15]],["option",4]]],[11,"from_u8_with_valid_url","","",23,[[["fn",8],["u8",15]]]],[4,"SyncStatus","","Re SyncStatus - note that:",null,null],[13,"Unknown","","",24,null],[13,"New","","",24,null],[13,"Normal","","",24,null],[11,"from_u8","","",24,[[["u8",15]]]],[0,"bookmark_sync","places","",null,null],[0,"engine","places::bookmark_sync","",null,null],[17,"LAST_SYNC_META_KEY","places::bookmark_sync::engine","",null,null],[17,"GLOBAL_SYNCID_META_KEY","","",null,null],[17,"COLLECTION_SYNCID_META_KEY","","",null,null],[17,"MAX_FRECENCIES_TO_RECALCULATE_PER_CHUNK","","The maximum number of URLs for which to recalculate …",null,null],[3,"MergeInterruptee","","Adapts an interruptee to a Dogear abort signal.",null,null],[12,"0","","",25,null],[3,"BookmarksEngine","","",null,null],[12,"db","","",26,null],[12,"interruptee","","",26,null],[11,"new","","",26,[[["sqlinterruptscope",3],["placesdb",3]]]],[11,"stage_incoming","","",26,[[["incomingchangeset",6],["engineincoming",3]],[["result",6],["servertimestamp",3]]]],[11,"has_changes","","",26,[[],[["bool",15],["result",6]]]],[11,"update_local_items_in_places","","Builds a temporary table with the merge states of all …",26,[[["completionops",3],["timestamp",3]],["result",6]]],[11,"apply_remote_items","","",26,[[["timestamp",3]],["result",6]]],[11,"stage_items_to_upload","","Stores a snapshot of all locally changed items in a …",26,[[],["result",6]]],[11,"fetch_outgoing_records","","Inflates Sync records for all staged outgoing items.",26,[[["servertimestamp",3]],[["result",6],["outgoingchangeset",6]]]],[11,"push_synced_items","","Decrements the change counter, updates the sync status, …",26,[[["syncguid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"update_frecencies","","",26,[[],["result",6]]],[3,"Driver","","",null,null],[12,"validation","","",27,null],[3,"Merger","","",null,null],[12,"engine","","",28,null],[12,"remote_time","","",28,null],[12,"local_time","","",28,null],[12,"external_transaction","","",28,null],[12,"telem","","",28,null],[12,"global_change_tracker","","",28,null],[11,"new","","",28,[[["bookmarksengine",3],["servertimestamp",3]]]],[11,"with_telemetry","","",28,[[["engine",3],["bookmarksengine",3],["servertimestamp",3]]]],[11,"set_external_transaction","","Prevent (or re-enable, in principal) using …",28,[[["bool",15]]]],[11,"merge","","",28,[[],["result",6]]],[11,"prepare","","Prepares synced bookmarks for merging.",28,[[],["result",6]]],[11,"local_row_to_item","","Creates a local tree item from a row in the <code>localItems</code> …",28,[[["row",3]],["result",6]]],[11,"remote_row_to_item","","Creates a remote tree item from a row in …",28,[[["row",3]],["result",6]]],[3,"NullableFragment","","A helper that formats an optional value so that it can be …",null,null],[12,"0","","",29,null],[3,"ItemTypeFragment","","A helper that interpolates a SQL <code>CASE</code> expression for …",null,null],[12,"0","","",30,null],[3,"UploadItemsFragment","","Formats a <code>SELECT</code> statement for staging local items in the …",null,null],[12,"0","","",31,null],[3,"LocalItemsFragment","","A helper that interpolates a named SQL common table …",null,null],[12,"0","","",32,null],[5,"item_kind_fragment","","",null,[[["str",15],["urlorplaceidfragment",4]],["itemkindfragment",3]]],[3,"ItemKindFragment","","A helper that interpolates a SQL <code>CASE</code> expression for …",null,null],[12,"table_name","","The name of the Places bookmarks table.",33,null],[12,"type_column_name","","The name of the column containing the Places item type.",33,null],[12,"url_or_place_id_fragment","","The column containing the item\'s URL or Place ID.",33,null],[4,"UrlOrPlaceIdFragment","","A helper that interpolates a SQL expression for querying …",null,null],[13,"Url","","The name of the column containing the URL. This avoids a …",34,null],[13,"PlaceId","","The name of the column containing the Place ID. This …",34,null],[3,"RootsFragment","","A helper that interpolates a SQL list containing the …",null,null],[12,"0","","",35,null],[0,"incoming","places::bookmark_sync","",null,null],[17,"RESULTS_AS_TAG_CONTENTS","places::bookmark_sync::incoming","",null,null],[3,"IncomingApplicator","","Manages the application of incoming records into the …",null,null],[12,"db","","",36,null],[11,"new","","",36,[[["connection",3]]]],[11,"apply_payload","","",36,[[["payload",3],["servertimestamp",3]],["result",6]]],[11,"store_incoming_bookmark","","",36,[[["jsonvalue",4],["servertimestamp",3]],["result",6]]],[11,"store_incoming_folder","","",36,[[["jsonvalue",4],["servertimestamp",3]],["result",6]]],[11,"store_incoming_tombstone","","",36,[[["syncguid",3],["servertimestamp",3]],["result",6]]],[11,"maybe_rewrite_and_store_query_url","","",36,[[["bookmarkrecordid",3],["url",3],["syncedbookmarkvalidity",4],["option",4],["str",15]],[["option",4],["result",6]]]],[11,"store_incoming_query","","",36,[[["jsonvalue",4],["servertimestamp",3]],["result",6]]],[11,"store_incoming_livemark","","",36,[[["jsonvalue",4],["servertimestamp",3]],["result",6]]],[11,"store_incoming_sep","","",36,[[["jsonvalue",4],["servertimestamp",3]],["result",6]]],[11,"maybe_store_href","","",36,[[["option",4],["str",15]],[["result",6],["url",3]]]],[11,"maybe_store_url","","",36,[[["option",4],["url",3]],[["result",6],["url",3]]]],[5,"unpack_id","","",null,[[["jsonvalue",4],["str",15]],[["bookmarkrecordid",3],["result",6]]]],[5,"unpack_optional_id","","",null,[[["jsonvalue",4],["str",15]],[["option",4],["bookmarkrecordid",3]]]],[5,"unpack_optional_str","","",null,[[["jsonvalue",4],["syncedbookmarkvalidity",4],["str",15]],[["str",15],["option",4]]]],[5,"unpack_optional_i64","","",null,[[["syncedbookmarkvalidity",4],["jsonvalue",4],["str",15]],[["i64",15],["option",4]]]],[5,"unpack_optional_keyword","","",null,[[["syncedbookmarkvalidity",4],["jsonvalue",4],["str",15]],[["string",3],["option",4]]]],[5,"set_replace","","",null,[[["syncedbookmarkvalidity",4]]]],[5,"set_reupload","","",null,[[["syncedbookmarkvalidity",4]]]],[0,"record","places::bookmark_sync","",null,null],[3,"BookmarkRecordId","places::bookmark_sync::record","A bookmark record ID. Bookmark record IDs are the same as …",null,null],[12,"0","","",37,null],[11,"from_payload_id","","Creates a bookmark record ID from a Sync record payload …",37,[[["syncguid",3]],["bookmarkrecordid",3]]],[11,"as_payload_id","","Returns a reference to the record payload ID. This is the …",37,[[],["str",15]]],[11,"into_payload_id","","Returns the record payload ID. This is the owned version …",37,[[],["string",3]]],[11,"as_guid","","Returns a reference to the GUID for this record ID.",37,[[],["syncguid",3]]],[11,"root_payload_id","","",37,[[],[["option",4],["str",15]]]],[3,"BookmarkRecord","","",null,null],[12,"record_id","","",38,null],[12,"parent_record_id","","",38,null],[12,"parent_title","","",38,null],[12,"date_added","","",38,null],[12,"has_dupe","","",38,null],[12,"title","","",38,null],[12,"url","","",38,null],[12,"keyword","","",38,null],[12,"tags","","",38,null],[3,"QueryRecord","","",null,null],[12,"record_id","","",39,null],[12,"parent_record_id","","",39,null],[12,"parent_title","","",39,null],[12,"date_added","","",39,null],[12,"has_dupe","","",39,null],[12,"title","","",39,null],[12,"url","","",39,null],[12,"tag_folder_name","","",39,null],[3,"FolderRecord","","",null,null],[12,"record_id","","",40,null],[12,"parent_record_id","","",40,null],[12,"parent_title","","",40,null],[12,"date_added","","",40,null],[12,"has_dupe","","",40,null],[12,"title","","",40,null],[12,"children","","",40,null],[3,"LivemarkRecord","","",null,null],[12,"record_id","","",41,null],[12,"parent_record_id","","",41,null],[12,"parent_title","","",41,null],[12,"date_added","","",41,null],[12,"has_dupe","","",41,null],[12,"title","","",41,null],[12,"feed_url","","",41,null],[12,"site_url","","",41,null],[3,"SeparatorRecord","","",null,null],[12,"record_id","","",42,null],[12,"parent_record_id","","",42,null],[12,"parent_title","","",42,null],[12,"date_added","","",42,null],[12,"has_dupe","","",42,null],[12,"position","","",42,null],[4,"BookmarkItemRecord","","",null,null],[13,"Bookmark","","",43,null],[13,"Query","","",43,null],[13,"Folder","","",43,null],[13,"Livemark","","",43,null],[13,"Separator","","",43,null],[5,"de_maybe_stringified_timestamp","","",null,[[],[["option",4],["result",4]]]],[4,"SyncedBookmarkKind","places::bookmark_sync","Synced item kinds. These are stored in …",null,null],[13,"Bookmark","","",44,null],[13,"Query","","",44,null],[13,"Folder","","",44,null],[13,"Livemark","","",44,null],[13,"Separator","","",44,null],[11,"from_u8","","",44,[[["u8",15]],["result",6]]],[4,"SyncedBookmarkValidity","","Synced item validity states. These are stored in …",null,null],[13,"Valid","","",45,null],[13,"Reupload","","",45,null],[13,"Replace","","",45,null],[11,"from_u8","","",45,[[["u8",15]],["result",6]]],[0,"db","places","",null,null],[0,"db","places::db","",null,null],[0,"sql_fns","places::db::db","",null,null],[5,"get_raw_str","places::db::db::sql_fns","",null,[[["context",3],["str",15],["usize",15]],[["result",6],["str",15]]]],[5,"get_raw_opt_str","","",null,[[["context",3],["str",15],["usize",15]],[["option",4],["result",6]]]],[5,"hash","","",null,[[["context",3]],[["option",4],["result",6]]]],[5,"autocomplete_match","","",null,[[["context",3]],[["result",6],["bool",15]]]],[5,"reverse_host","","",null,[[["context",3]],[["result",6],["string",3]]]],[5,"get_prefix","","",null,[[["context",3]],[["result",6],["string",3]]]],[5,"get_host_and_port","","",null,[[["context",3]],[["result",6],["string",3]]]],[5,"strip_prefix_and_userinfo","","",null,[[["context",3]],[["result",6],["string",3]]]],[5,"now","","",null,[[["context",3]],[["timestamp",3],["result",6]]]],[5,"generate_guid","","",null,[[["context",3]],[["syncguid",3],["result",6]]]],[5,"note_bookmarks_sync_change","","",null,[[["usize",15],["context",3]],[["result",6],["i64",15]]]],[17,"MAX_VARIABLE_NUMBER","places::db::db","",null,null],[3,"GLOBAL_BOOKMARK_CHANGE_COUNTERS","","",null,null],[12,"__private_field","","",46,null],[3,"PlacesDb","","",null,null],[12,"db","","",47,null],[12,"conn_type","","",47,null],[12,"interrupt_counter","","",47,null],[12,"api_id","","",47,null],[12,"coop_tx_lock","","",47,null],[11,"with_connection","","",47,[[["usize",15],["connection",3],["mutex",3],["connectiontype",4],["arc",3]],["result",6]]],[11,"open","","",47,[[["usize",15],["mutex",3],["connectiontype",4],["arc",3]],["result",6]]],[11,"new_interrupt_handle","","",47,[[],["sqlinterrupthandle",3]]],[11,"begin_interrupt_scope","","",47,[[],["sqlinterruptscope",3]]],[11,"conn_type","","",47,[[],["connectiontype",4]]],[11,"global_bookmark_change_tracker","","Returns an object that can tell you whether any changes …",47,[[],["globalchangecountertracker",3]]],[11,"api_id","","",47,[[],["usize",15]]],[3,"GlobalChangeCounterTracker","","An object that can tell you whether a bookmark changing …",null,null],[12,"api_id","","",48,null],[12,"start_value","","",48,null],[11,"new","","",48,[[["usize",15]]]],[11,"changed","","",48,[[],["bool",15]]],[11,"cur_value","","",48,[[["usize",15]],["i64",15]]],[5,"define_functions","","",null,[[["connection",3],["usize",15]],["result",6]]],[0,"schema","places::db","",null,null],[17,"VERSION","places::db::schema","",null,null],[17,"CREATE_SHARED_SCHEMA_SQL","","",null,null],[17,"CREATE_SHARED_TEMP_TABLES_SQL","","",null,null],[17,"CREATE_SYNC_TEMP_TABLES_SQL","","",null,null],[17,"CREATE_SYNC_TRIGGERS_SQL","","",null,null],[17,"CREATE_MAIN_TRIGGERS_SQL","","",null,null],[3,"CREATE_SHARED_TRIGGERS_SQL","","",null,null],[12,"__private_field","","",49,null],[7,"MOZ_META_KEY_ORIGIN_FRECENCY_COUNT","","",null,null],[7,"MOZ_META_KEY_ORIGIN_FRECENCY_SUM","","",null,null],[7,"MOZ_META_KEY_ORIGIN_FRECENCY_SUM_OF_SQUARES","","",null,null],[5,"update_origin_frecency_stats","","",null,[[["str",15]],["string",3]]],[5,"get_current_schema_version","","",null,[[["placesdb",3]],[["i64",15],["result",6]]]],[5,"init","","",null,[[["placesdb",3]],["result",6]]],[5,"migration","","Helper for upgrade. Intended use:",null,[[["placesdb",3],["i64",15]],["result",6]]],[5,"upgrade","","",null,[[["placesdb",3],["i64",15]],["result",6]]],[5,"create","","",null,[[["placesdb",3]],["result",6]]],[0,"tx","places::db","",null,null],[0,"coop_transaction","places::db::tx","This implements \\\"cooperative transactions\\\" for places. It …",null,null],[11,"chunked_coop_trransaction","places::db::db","Begin a ChunkedCoopTransaction. Must be called from the …",47,[[],[["result",6],["chunkedcooptransaction",3]]]],[11,"coop_transaction","","Begin a \\\"coop\\\" transaction. Must be called from the write …",47,[[],[["uncheckedtransaction",3],["result",6]]]],[3,"ChunkedCoopTransaction","places::db::tx::coop_transaction","This transaction is suitable for when a transaction is …",null,null],[12,"tx","","",50,null],[12,"commit_after","","",50,null],[12,"coop","","",50,null],[11,"new","","Begin a new transaction which may be split into multiple …",50,[[["duration",3],["connection",3],["mutex",3]],["result",6]]],[11,"should_commit","","Returns <code>true</code> if the current transaction has been open for …",50,[[],["bool",15]]],[11,"maybe_commit","","Checks to see if we have held a transaction for longer …",50,[[],["result",6]]],[11,"commit_and_start_new_tx","","",50,[[],["result",6]]],[11,"commit","","Consumes and commits a ChunkedCoopTransaction transaction.",50,[[],["result",6]]],[11,"rollback","","Consumes and rolls a ChunkedCoopTransaction, but …",50,[[],["result",6]]],[5,"get_tx_with_retry_on_locked","","",null,[[["connection",3]],[["uncheckedtransaction",3],["result",6]]]],[3,"PlacesTransaction","places::db::tx","High level transaction type which \\\"does the right thing\\\" …",null,null],[12,"0","","",51,null],[4,"PlacesTransactionRepr","","Only separated from PlacesTransaction so that the …",null,null],[13,"ChunkedWrite","","",52,null],[13,"UnchunkedWrite","","",52,null],[13,"ReadOnly","","",52,null],[11,"should_commit","","Returns <code>true</code> if the current transaction should be …",51,[[],["bool",15]]],[11,"maybe_commit","","For transactions on sync connnections: Checks to see if …",51,[[],["result",6]]],[11,"commit","","Consumes and commits a PlacesTransaction transaction.",51,[[],["result",6]]],[11,"rollback","","Consumes and attempst to roll back a PlacesTransaction. …",51,[[],["result",6]]],[11,"begin_transaction","places::db::db","Begin the \\\"correct\\\" transaction type for this connection.",47,[[],[["result",6],["placestransaction",3]]]],[3,"PlacesTransaction","places::db","High level transaction type which \\\"does the right thing\\\" …",null,null],[12,"0","","",51,null],[0,"ffi","places","",null,null],[0,"error_codes","places::ffi","",null,null],[17,"UNEXPECTED","places::ffi::error_codes","An unexpected error occurred which likely cannot be …",null,null],[17,"URL_PARSE_ERROR","","A URL was provided that we failed to parse",null,null],[17,"DATABASE_BUSY","","The requested operation failed because the database was …",null,null],[17,"DATABASE_INTERRUPTED","","The requested operation failed because it was interrupted",null,null],[17,"DATABASE_CORRUPT","","The requested operation failed because the store is …",null,null],[17,"INVALID_PLACE_INFO_INVALID_PARENT","","<code>InvalidParent</code>: Attempt to add a child to a non-folder.",null,null],[17,"INVALID_PLACE_INFO_NO_ITEM","","<code>NoItem</code>: The GUID provided does not exist.",null,null],[17,"INVALID_PLACE_INFO_URL_TOO_LONG","","<code>UrlTooLong</code>: The provided URL cannot be inserted, as it is …",null,null],[17,"INVALID_PLACE_INFO_ILLEGAL_CHANGE","","<code>IllegalChange</code>: Attempt to change a property on a bookmark …",null,null],[17,"INVALID_PLACE_INFO_CANNOT_UPDATE_ROOT","","<code>CannotUpdateRoot</code>: Attempt to modify a root in a way that …",null,null],[5,"get_code","places::ffi","",null,[[["error",3]],["errorcode",3]]],[0,"frecency","places","",null,null],[4,"RedirectBonus","places::frecency","",null,null],[13,"Unknown","","",53,null],[13,"Redirect","","",53,null],[13,"Normal","","",53,null],[3,"FrecencySettings","","",null,null],[12,"num_visits","","",54,null],[12,"first_bucket_cutoff_days","","",54,null],[12,"second_bucket_cutoff_days","","",54,null],[12,"third_bucket_cutoff_days","","",54,null],[12,"fourth_bucket_cutoff_days","","",54,null],[12,"first_bucket_weight","","",54,null],[12,"second_bucket_weight","","",54,null],[12,"third_bucket_weight","","",54,null],[12,"fourth_bucket_weight","","",54,null],[12,"default_bucket_weight","","",54,null],[12,"embed_visit_bonus","","",54,null],[12,"framed_link_visit_bonus","","",54,null],[12,"link_visit_bonus","","",54,null],[12,"typed_visit_bonus","","",54,null],[12,"bookmark_visit_bonus","","",54,null],[12,"download_visit_bonus","","",54,null],[12,"permanent_redirect_visit_bonus","","",54,null],[12,"temporary_redirect_visit_bonus","","",54,null],[12,"redirect_source_visit_bonus","","",54,null],[12,"default_visit_bonus","","",54,null],[12,"unvisited_bookmark_bonus","","",54,null],[12,"unvisited_typed_bonus","","",54,null],[12,"reload_visit_bonus","","",54,null],[17,"DEFAULT_FRECENCY_SETTINGS","","",null,null],[11,"get_transition_bonus","","",54,[[["visittransition",4],["bool",15],["option",4]],["i32",15]]],[11,"get_frecency_aged_weight","","",54,[[["i32",15]],["i32",15]]],[3,"FrecencyComputation","","",null,null],[12,"conn","","",55,null],[12,"settings","","",55,null],[12,"page_id","","",55,null],[12,"most_recent_redirect_bonus","","",55,null],[12,"typed","","",55,null],[12,"visit_count","","",55,null],[12,"foreign_count","","",55,null],[12,"is_query","","",55,null],[11,"new","","",55,[[["connection",3],["i64",15],["redirectbonus",4],["frecencysettings",3]],["result",6]]],[11,"has_bookmark","","",55,[[],["bool",15]]],[11,"score_recent_visits","","",55,[[],["result",6]]],[11,"get_frecency_for_sample","","",55,[[["usize",15],["f32",15]],["i32",15]]],[11,"compute_unvisited_bookmark_frecency","","",55,[[],["i32",15]]],[5,"calculate_frecency","","",null,[[["connection",3],["frecencysettings",3],["option",4],["i64",15],["bool",15]],[["result",6],["i32",15]]]],[0,"hash","places","",null,null],[17,"MAX_BYTES_TO_HASH","places::hash","",null,null],[5,"hash_url","","This should be identical to the \\\"real\\\" …",null,[[["str",15]],["u64",15]]],[4,"PrefixMode","","",null,null],[13,"Lo","","Equivalent to <code>\\\"prefix_lo\\\"</code> in mozilla::places::HashURL",56,null],[13,"Hi","","Equivalent to <code>\\\"prefix_hi\\\"</code> in mozilla::places::HashURL",56,null],[5,"hash_url_prefix","","This should be identical to the \\\"real\\\" …",null,[[["prefixmode",4],["str",15]],["u64",15]]],[17,"GOLDEN_RATIO","","",null,null],[5,"add_u32_to_hash","","",null,[[["u32",15]],["u32",15]]],[5,"hash_string","","This should return identical results to …",null,[[["str",15]],["u32",15]]],[0,"history_sync","places","",null,null],[0,"engine","places::history_sync","",null,null],[17,"LAST_SYNC_META_KEY","places::history_sync::engine","",null,null],[17,"GLOBAL_SYNCID_META_KEY","","",null,null],[17,"COLLECTION_SYNCID_META_KEY","","",null,null],[3,"HistoryEngine","","",null,null],[12,"db","","",57,null],[12,"interruptee","","",57,null],[11,"new","","",57,[[["sqlinterruptscope",3],["placesdb",3]]]],[11,"put_meta","","",57,[[["tosql",8],["str",15]],["result",6]]],[11,"get_meta","","",57,[[["str",15]],[["option",4],["result",6]]]],[11,"do_apply_incoming","","",57,[[["incomingchangeset",6],["engine",3]],[["result",6],["outgoingchangeset",6]]]],[11,"do_sync_finished","","",57,[[["guid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"migrate_v1_global_state","","A utility we can kill by the end of 2019 ;) Or even …",57,[[["placesdb",3]],["result",6]]],[0,"plan","places::history_sync","",null,null],[5,"clamp_visit_date","places::history_sync::plan","Clamps a history visit date between the current date and …",null,[[["timestamp",3]],[["result",4],["timestamp",3]]]],[4,"IncomingPlan","","This is the action we will take <em>locally</em> for each incoming …",null,null],[13,"Skip","","An entry we just want to ignore - either due to the URL …",58,null],[13,"Invalid","","Something\'s wrong with this entry.",58,null],[13,"Failed","","The entry appears sane, but there was some error.",58,null],[13,"Delete","","We should locally delete this.",58,null],[13,"Apply","","We should apply this.",58,null],[12,"url","places::history_sync::plan::IncomingPlan","",59,null],[12,"new_title","","",59,null],[12,"visits","","",59,null],[13,"Reconciled","places::history_sync::plan","Entry exists locally and it\'s the same as the incoming …",58,null],[5,"plan_incoming_record","","",null,[[["placesdb",3],["usize",15],["historyrecord",3]],["incomingplan",4]]],[5,"apply_plan","","",null,[[["placesdb",3],["incomingchangeset",6],["engineincoming",3]],[["result",6],["outgoingchangeset",6]]]],[5,"finish_plan","","",null,[[["placesdb",3]],["result",6]]],[0,"record","places::history_sync","",null,null],[3,"HistoryRecordVisit","places::history_sync::record","",null,null],[12,"date","","",60,null],[12,"transition","","",60,null],[3,"HistoryRecord","","",null,null],[12,"id","","",61,null],[12,"title","","",61,null],[12,"hist_uri","","",61,null],[12,"visits","","",61,null],[12,"sortindex","","",61,null],[12,"ttl","","",61,null],[3,"HistorySyncRecord","","",null,null],[12,"guid","","",62,null],[12,"record","","",62,null],[11,"from_payload","","",62,[[["payload",3]],["result",6]]],[17,"MAX_INCOMING_PLACES","places::history_sync","",null,null],[17,"MAX_OUTGOING_PLACES","","",null,null],[17,"MAX_VISITS","","",null,null],[17,"HISTORY_TTL","","",null,null],[3,"ServerVisitTimestamp","","Visit timestamps on the server are <em>microseconds</em> since the …",null,null],[12,"0","","",63,null],[0,"import","places","",null,null],[0,"common","places::import","",null,null],[0,"sql_fns","places::import::common","",null,null],[5,"sanitize_timestamp","places::import::common::sql_fns","",null,[[["context",3]],[["timestamp",3],["result",6]]]],[5,"validate_url","","",null,[[["context",3]],[["option",4],["result",6]]]],[5,"sanitize_utf8","","",null,[[["context",3]],[["option",4],["result",6]]]],[3,"NOW","places::import::common","",null,null],[12,"__private_field","","",64,null],[5,"attached_database","","",null,[[["str",15],["syncconn",3],["url",3]],[["result",6],["executeondrop",3]]]],[3,"ExecuteOnDrop","","We use/abuse the mirror to perform our import, but need …",null,null],[12,"conn","","",65,null],[12,"sql","","",65,null],[11,"new","","",65,[[["string",3],["syncconn",3]]]],[11,"execute_now","","",65,[[],["result",6]]],[0,"fennec","places::import","",null,null],[0,"bookmarks","places::import::fennec","",null,null],[0,"sql_fns","places::import::fennec::bookmarks","",null,null],[5,"define_functions","places::import::fennec::bookmarks::sql_fns","",null,[[["connection",3]],["result",6]]],[5,"normalize_root_guid","","",null,[[["context",3]],[["result",6],["string",3]]]],[17,"FENNEC_DB_VERSION","places::import::fennec::bookmarks","",null,null],[3,"BookmarksMigrationResult","","",null,null],[12,"num_total","","",66,null],[12,"num_succeeded","","",66,null],[12,"num_failed","","",66,null],[12,"total_duration","","",66,null],[5,"select_count","","",null,[[["placesdb",3],["str",15]],["u32",15]]],[5,"import","","",null,[[["placesapi",3]],[["result",6],["bookmarksmigrationresult",3]]]],[5,"import_pinned_sites","","",null,[[["placesapi",3]],[["vec",3],["result",6]]]],[5,"do_import","","",null,[[["placesapi",3],["url",3]],[["result",6],["bookmarksmigrationresult",3]]]],[5,"do_pinned_sites_import","","",null,[[["placesapi",3],["url",3]],[["vec",3],["result",6]]]],[4,"FennecBookmarkType","","",null,null],[13,"Folder","","",67,null],[13,"Bookmark","","",67,null],[13,"Separator","","",67,null],[3,"FILL_MOZ_PLACES","","",null,null],[12,"__private_field","","",68,null],[3,"POPULATE_MIRROR","","",null,null],[12,"__private_field","","",69,null],[17,"WIPE_MIRROR","","",null,null],[17,"POPULATE_MIRROR_STRUCTURE","","",null,null],[3,"POPULATE_STAGING","","",null,null],[12,"__private_field","","",70,null],[3,"FETCH_PINNED","","",null,null],[12,"__private_field","","",71,null],[3,"CREATE_STAGING_TABLE","","",null,null],[12,"__private_field","","",72,null],[3,"FIXUP_MOZ_BOOKMARKS","","",null,null],[12,"__private_field","","",73,null],[3,"COUNT_FENNEC_BOOKMARKS","","",null,null],[12,"__private_field","","",74,null],[3,"COUNT_FENIX_BOOKMARKS","","",null,null],[12,"__private_field","","",75,null],[5,"public_node_from_fennec_pinned","","",null,[[["row",3]],[["result",4],["publicnode",3],["error",4]]]],[0,"history","places::import::fennec","",null,null],[17,"FENNEC_DB_VERSION","places::import::fennec::history","",null,null],[3,"HistoryMigrationResult","","",null,null],[12,"num_total","","",76,null],[12,"num_succeeded","","",76,null],[12,"num_failed","","",76,null],[12,"total_duration","","",76,null],[5,"import","","",null,[[["placesapi",3]],[["historymigrationresult",3],["result",6]]]],[5,"select_count","","",null,[[["placesdb",3],["str",15]],["u32",15]]],[5,"do_import","","",null,[[["placesapi",3],["url",3]],[["historymigrationresult",3],["result",6]]]],[3,"CREATE_STAGING_TABLE","","",null,null],[12,"__private_field","","",77,null],[3,"FILL_STAGING","","",null,null],[12,"__private_field","","",78,null],[3,"FILL_MOZ_PLACES","","",null,null],[12,"__private_field","","",79,null],[3,"INSERT_HISTORY_VISITS","","",null,null],[12,"__private_field","","",80,null],[3,"COUNT_FENNEC_HISTORY_VISITS","","",null,null],[12,"__private_field","","",81,null],[3,"COUNT_FENIX_HISTORY_VISITS","","",null,null],[12,"__private_field","","",82,null],[5,"define_sql_functions","","",null,[[["connection",3]],["result",6]]],[0,"ios_bookmarks","places::import","",null,null],[0,"sql_fns","places::import::ios_bookmarks","",null,null],[5,"define_functions","places::import::ios_bookmarks::sql_fns","",null,[[["connection",3]],["result",6]]],[5,"import_ios_bookmarks","places::import::ios_bookmarks","This import is used for iOS sync users migrating from …",null,[[["placesapi",3]],["result",6]]],[5,"do_import_ios_bookmarks","","",null,[[["placesapi",3],["url",3]],["result",6]]],[5,"populate_mirror_tags","","",null,[[["placesdb",3]],["result",6]]],[4,"IosBookmarkType","","",null,null],[13,"Bookmark","","",83,null],[13,"Folder","","",83,null],[13,"Separator","","",83,null],[17,"ROOTS","","",null,null],[3,"WIPE_MIRROR","","",null,null],[12,"__private_field","","",84,null],[3,"IOS_VALID_TYPES","","",null,null],[12,"__private_field","","",85,null],[3,"FILL_MOZ_PLACES","","",null,null],[12,"__private_field","","",86,null],[3,"POPULATE_MIRROR","","",null,null],[12,"__private_field","","",87,null],[17,"POPULATE_MIRROR_STRUCTURE","","",null,null],[3,"POPULATE_STAGING","","",null,null],[12,"__private_field","","",88,null],[3,"CREATE_STAGING_TABLE","","",null,null],[12,"__private_field","","",89,null],[3,"FIXUP_MOZ_BOOKMARKS","","",null,null],[12,"__private_field","","",90,null],[0,"match_impl","places","",null,null],[17,"MAX_CHARS_TO_SEARCH_THROUGH","places::match_impl","",null,null],[4,"MatchBehavior","","",null,null],[13,"Anywhere","","",91,null],[13,"BoundaryAnywhere","","Match first on word boundaries, and if we do not get …",91,null],[13,"Boundary","","Match on word boundaries in each searchable term.",91,null],[13,"Beginning","","Match only the beginning of each search term.",91,null],[13,"AnywhereUnmodified","","Match anywhere in each searchable term without doing any …",91,null],[13,"BeginningCaseSensitive","","Match only the beginning of each search term using a case …",91,null],[3,"SearchBehavior","","",null,null],[12,"bits","","",92,null],[18,"HISTORY","","Search through history.",92,null],[18,"BOOKMARK","","Search through bookmarks.",92,null],[18,"TAG","","Search through tags.",92,null],[18,"TITLE","","Search through the title of pages.",92,null],[18,"URL","","Search the URL of pages.",92,null],[18,"TYPED","","Search for typed pages",92,null],[18,"JAVASCRIPT","","Search for javascript: urls",92,null],[18,"OPENPAGE","","Search for open pages (currently not meaningfully …",92,null],[18,"RESTRICT","","Use intersection between history, typed, bookmark, tag …",92,null],[18,"SEARCHES","","Include search suggestions from the currently selected …",92,null],[11,"empty","","Returns an empty set of flags",92,[[],["searchbehavior",3]]],[11,"all","","Returns the set containing all flags.",92,[[],["searchbehavior",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",92,[[["u32",15]],[["option",4],["searchbehavior",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",92,[[["u32",15]],["searchbehavior",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",92,[[["u32",15]],["searchbehavior",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",92,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",92,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",92,[[["searchbehavior",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",92,[[["searchbehavior",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["searchbehavior",3]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["searchbehavior",3]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["searchbehavior",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",92,[[["bool",15],["searchbehavior",3]]]],[11,"any","","",92,[[]]],[5,"dubious_to_ascii_lower","","Convert <code>c</code> to lower case if it\'s an alphabetic ascii …",null,[[["u8",15]],["u8",15]]],[5,"next_search_candidate","","A port of nextSearchCandidate in the desktop places\'s …",null,[[["char",15],["str",15]],[["usize",15],["option",4]]]],[5,"is_ascii_lower_alpha","","",null,[[["u8",15]],["bool",15]]],[5,"is_on_boundary","","port of isOnBoundary from gecko places.",null,[[["usize",15],["str",15]],["bool",15]]],[5,"string_match","","Returns true if <code>source</code> starts with <code>token</code> ignoring case.",null,[[["str",15]],["bool",15]]],[5,"char_to_lower_single","","This performs single-codepoint case folding. It will do …",null,[[["char",15]],["char",15]]],[5,"next_codepoint_lower","","Read the next codepoint out of <code>s</code> and return it\'s …",null,[[["str",15]]]],[5,"find_in_string","","",null,[[["bool",15],["str",15]],["bool",15]]],[5,"find_anywhere","","",null,[[["str",15]],["bool",15]]],[5,"find_on_boundary","","",null,[[["str",15]],["bool",15]]],[5,"find_beginning","","",null,[[["str",15]],["bool",15]]],[5,"find_beginning_case_sensitive","","",null,[[["str",15]],["bool",15]]],[3,"AutocompleteMatch","","",null,null],[12,"search_str","","",93,null],[12,"url_str","","",93,null],[12,"title_str","","",93,null],[12,"tags","","",93,null],[12,"visit_count","","",93,null],[12,"typed","","",93,null],[12,"bookmarked","","",93,null],[12,"open_page_count","","",93,null],[12,"match_behavior","","",93,null],[12,"search_behavior","","",93,null],[11,"get_search_fn","","",93,[[]]],[11,"fixup_url_str","","",93,[[["str",15]],[["str",15],["cow",4]]]],[11,"has_behavior","","",93,[[["searchbehavior",3]],["bool",15]]],[11,"invoke","","",93,[[],["bool",15]]],[0,"observation","places","",null,null],[3,"VisitObservation","places::observation","An \\\"observation\\\" based model for updating history. You …",null,null],[12,"url","","Ideally, we\'d use url::Url here with <code>serde_url</code>, but we …",94,null],[12,"title","","",94,null],[12,"visit_type","","",94,null],[12,"is_error","","",94,null],[12,"is_redirect_source","","",94,null],[12,"is_permanent_redirect_source","","",94,null],[12,"at","","",94,null],[12,"referrer","","Semantically also a url::Url, See the comment about the …",94,null],[12,"is_remote","","",94,null],[11,"new","","",94,[[["url",3]]]],[11,"with_title","","",94,[[]]],[11,"with_visit_type","","",94,[[]]],[11,"with_is_error","","",94,[[]]],[11,"with_is_redirect_source","","",94,[[]]],[11,"with_is_permanent_redirect_source","","",94,[[]]],[11,"with_at","","",94,[[]]],[11,"with_is_remote","","",94,[[]]],[11,"with_referrer","","",94,[[]]],[11,"get_redirect_frecency_boost","","",94,[[],["bool",15]]],[11,"get_is_hidden","","",94,[[],["bool",15]]],[0,"storage","places","",null,null],[0,"bookmarks","places::storage","",null,null],[0,"conversions","places::storage::bookmarks","",null,null],[3,"BookmarkUpdateInfo","places::storage::bookmarks::conversions","We don\'t require bookmark type for updates on the other …",null,null],[12,"guid","","",95,null],[12,"title","","",95,null],[12,"url","","",95,null],[12,"parent_guid","","",95,null],[12,"position","","",95,null],[11,"into_updatable","","Convert the <code>BookmarkUpdateInfo</code> into information for …",95,[[["bookmarktype",4]],["result",6]]],[0,"public_node","places::storage::bookmarks","",null,null],[3,"PublicNode","places::storage::bookmarks::public_node","This type basically exists to become a …",null,null],[12,"node_type","","",96,null],[12,"guid","","",96,null],[12,"parent_guid","","",96,null],[12,"position","","",96,null],[12,"date_added","","",96,null],[12,"last_modified","","",96,null],[12,"url","","",96,null],[12,"title","","",96,null],[12,"child_guids","","",96,null],[12,"child_nodes","","",96,null],[5,"fetch_bookmarks_by_url","","",null,[[["placesdb",3],["url",3]],[["vec",3],["result",6]]]],[5,"fetch_bookmark","","This is similar to fetch_tree, but does not recursively …",null,[[["placesdb",3],["syncguid",3],["bool",15]],[["option",4],["result",6]]]],[5,"update_bookmark_from_message","","",null,[[["placesdb",3],["protobookmark",3]],["result",6]]],[5,"fetch_public_tree","","Call fetch_public_tree_with_depth with …",null,[[["placesdb",3],["syncguid",3]],[["option",4],["result",6]]]],[5,"fetch_public_tree_with_depth","","Call fetch_tree with a depth parameter and convert the …",null,[[["placesdb",3],["syncguid",3],["fetchdepth",4]],[["option",4],["result",6]]]],[5,"search_bookmarks","","",null,[[["placesdb",3],["u32",15],["str",15]],[["vec",3],["result",6]]]],[5,"recent_bookmarks","","",null,[[["placesdb",3],["u32",15]],[["vec",3],["result",6]]]],[3,"SEARCH_QUERY","","",null,null],[12,"__private_field","","",97,null],[0,"root_guid","places::storage::bookmarks","",null,null],[17,"USER_CONTENT_ROOTS","places::storage::bookmarks::root_guid","",null,null],[4,"BookmarkRootGuid","","Special GUIDs associated with bookmark roots. It\'s …",null,null],[13,"Root","","",98,null],[13,"Menu","","",98,null],[13,"Toolbar","","",98,null],[13,"Unfiled","","",98,null],[13,"Mobile","","",98,null],[3,"GUIDS","","",null,null],[12,"__private_field","","",99,null],[11,"as_str","","",98,[[],["str",15]]],[11,"guid","","",98,[[],["syncguid",3]]],[11,"as_guid","","",98,[[],["syncguid",3]]],[11,"well_known","","",98,[[["str",15]],["option",4]]],[11,"from_guid","","",98,[[["syncguid",3]],["option",4]]],[0,"bookmark_sync","places::storage::bookmarks","",null,null],[5,"reset","places::storage::bookmarks::bookmark_sync","Removes all sync metadata, including synced bookmarks, …",null,[[["placesdb",3],["enginesyncassociation",4]],["result",6]]],[5,"create_synced_bookmark_roots","","Sets up the syncable roots. All items in …",null,[[["placesdb",3]],["result",6]]],[4,"BookmarkRootGuid","places::storage::bookmarks","Special GUIDs associated with bookmark roots. It\'s …",null,null],[13,"Root","","",98,null],[13,"Menu","","",98,null],[13,"Toolbar","","",98,null],[13,"Unfiled","","",98,null],[13,"Mobile","","",98,null],[17,"USER_CONTENT_ROOTS","","",null,null],[5,"create_root","","",null,[[["connection",3],["syncguid",3],["u32",15],["timestamp",3],["str",15]],["result",6]]],[5,"create_bookmark_roots","","",null,[[["connection",3]],["result",6]]],[4,"BookmarkPosition","","",null,null],[13,"Specific","","",100,null],[13,"Append","","",100,null],[4,"FetchDepth","","",null,null],[13,"Specific","","",101,null],[13,"Deepest","","",101,null],[5,"resolve_pos_for_insert","","Helpers to deal with managing the position correctly. …",null,[[["placesdb",3],["bookmarkposition",4],["rawbookmark",3]],[["u32",15],["result",6]]]],[5,"update_pos_for_deletion","","Updates the position of existing items so that the …",null,[[["placesdb",3],["u32",15],["rowid",3]],["result",6]]],[5,"update_pos_for_move","","Updates the position of existing items when an item is …",null,[[["placesdb",3],["rawbookmark",3],["bookmarkposition",4]],[["u32",15],["result",6]]]],[3,"InsertableBookmark","","Structures which can be used to insert a bookmark, folder …",null,null],[12,"parent_guid","","",102,null],[12,"position","","",102,null],[12,"date_added","","",102,null],[12,"last_modified","","",102,null],[12,"guid","","",102,null],[12,"url","","",102,null],[12,"title","","",102,null],[3,"InsertableSeparator","","",null,null],[12,"parent_guid","","",103,null],[12,"position","","",103,null],[12,"date_added","","",103,null],[12,"last_modified","","",103,null],[12,"guid","","",103,null],[3,"InsertableFolder","","",null,null],[12,"parent_guid","","",104,null],[12,"position","","",104,null],[12,"date_added","","",104,null],[12,"last_modified","","",104,null],[12,"guid","","",104,null],[12,"title","","",104,null],[4,"InsertableItem","","",null,null],[13,"Bookmark","","",105,null],[13,"Separator","","",105,null],[13,"Folder","","",105,null],[11,"bookmark_type","","",105,[[],["bookmarktype",4]]],[11,"parent_guid","","",105,[[],["syncguid",3]]],[11,"position","","",105,[[],["bookmarkposition",4]]],[11,"date_added","","",105,[[],["option",4]]],[11,"last_modified","","",105,[[],["option",4]]],[11,"guid","","",105,[[],["option",4]]],[5,"insert_bookmark","","",null,[[["placesdb",3],["insertableitem",4]],[["result",6],["syncguid",3]]]],[5,"maybe_truncate_title","","",null,[[["option",4]],[["str",15],["option",4]]]],[5,"insert_bookmark_in_tx","","",null,[[["placesdb",3],["insertableitem",4]],[["result",6],["syncguid",3]]]],[5,"delete_bookmark","","Delete the specified bookmark. Returns true if a bookmark …",null,[[["placesdb",3],["syncguid",3]],[["bool",15],["result",6]]]],[5,"delete_bookmark_in_tx","","",null,[[["placesdb",3],["syncguid",3]],[["bool",15],["result",6]]]],[4,"UpdateTreeLocation","","Support for modifying bookmarks, including changing the …",null,null],[13,"None","","",106,null],[13,"Position","","",106,null],[13,"Parent","","",106,null],[3,"UpdatableBookmark","","Structures which can be used to update a bookmark, folder …",null,null],[12,"location","","",107,null],[12,"url","","",107,null],[12,"title","","",107,null],[3,"UpdatableSeparator","","",null,null],[12,"location","","",108,null],[3,"UpdatableFolder","","",null,null],[12,"location","","",109,null],[12,"title","","",109,null],[4,"UpdatableItem","","",null,null],[13,"Bookmark","","",110,null],[13,"Separator","","",110,null],[13,"Folder","","",110,null],[11,"bookmark_type","","",110,[[],["bookmarktype",4]]],[11,"location","","",110,[[],["updatetreelocation",4]]],[5,"update_bookmark","","",null,[[["placesdb",3],["syncguid",3],["updatableitem",4]],["result",6]]],[5,"update_bookmark_in_tx","","",null,[[["placesdb",3],["syncguid",3],["rawbookmark",3],["updatableitem",4]],["result",6]]],[5,"set_ancestors_last_modified","","",null,[[["placesdb",3],["rowid",3],["timestamp",3]],["result",6]]],[3,"BookmarkNode","","",null,null],[12,"guid","","",111,null],[12,"date_added","","",111,null],[12,"last_modified","","",111,null],[12,"title","","",111,null],[12,"url","","",111,null],[3,"SeparatorNode","","",null,null],[12,"guid","","",112,null],[12,"date_added","","",112,null],[12,"last_modified","","",112,null],[3,"FolderNode","","",null,null],[12,"guid","","",113,null],[12,"date_added","","",113,null],[12,"last_modified","","",113,null],[12,"title","","",113,null],[12,"children","","",113,null],[4,"BookmarkTreeNode","","",null,null],[13,"Bookmark","","",114,null],[13,"Separator","","",114,null],[13,"Folder","","",114,null],[11,"node_type","","",114,[[],["bookmarktype",4]]],[11,"guid","","",114,[[],["syncguid",3]]],[11,"created_modified","","",114,[[]]],[5,"bookmarks_get_url_for_keyword","","Get the URL of the bookmark matching a keyword",null,[[["placesdb",3],["str",15]],[["option",4],["result",6]]]],[5,"add_subtree_infos","","",null,[[["syncguid",3],["foldernode",3],["vec",3]]]],[5,"delete_everything","","Erases all bookmarks and resets all Sync metadata.",null,[[["placesdb",3]],["result",6]]],[5,"insert_tree","","",null,[[["placesdb",3],["foldernode",3]],["result",6]]],[3,"FetchedTreeRow","","",null,null],[12,"level","","",115,null],[12,"id","","",115,null],[12,"guid","","",115,null],[12,"parent","","",115,null],[12,"parent_guid","","",115,null],[12,"node_type","","",115,null],[12,"position","","",115,null],[12,"title","","",115,null],[12,"date_added","","",115,null],[12,"last_modified","","",115,null],[12,"url","","",115,null],[11,"from_row","","",115,[[["row",3]],["result",6]]],[5,"inflate","","",null,[[["bookmarktreenode",4],["hashmap",3]]]],[5,"fetch_tree","","Fetch the tree starting at the specified guid. Returns a …",null,[[["placesdb",3],["syncguid",3],["fetchdepth",4]],[["result",6],["option",4]]]],[3,"RawBookmark","","A \\\"raw\\\" bookmark - a representation of the row and some …",null,null],[12,"place_id","","",116,null],[12,"row_id","","",116,null],[12,"bookmark_type","","",116,null],[12,"parent_id","","",116,null],[12,"parent_guid","","",116,null],[12,"position","","",116,null],[12,"title","","",116,null],[12,"url","","",116,null],[12,"date_added","","",116,null],[12,"date_modified","","",116,null],[12,"guid","","",116,null],[12,"sync_status","","",116,null],[12,"sync_change_counter","","",116,null],[12,"child_count","","",116,null],[12,"grandparent_id","","",116,null],[11,"from_row","","",116,[[["row",3]],["result",6]]],[17,"RAW_BOOKMARK_SQL","","sql is based on fetchBookmark() in Desktop\'s …",null,null],[5,"get_raw_bookmark","","",null,[[["placesdb",3],["syncguid",3]],[["result",6],["option",4]]]],[5,"get_raw_bookmarks_for_url","","",null,[[["placesdb",3],["url",3]],[["result",6],["vec",3]]]],[5,"reset_in_tx","","",null,[[["placesdb",3],["enginesyncassociation",4]],["result",6]]],[0,"history","places::storage","",null,null],[0,"history_sync","places::storage::history","",null,null],[3,"FetchedVisit","places::storage::history::history_sync","",null,null],[12,"is_local","","",117,null],[12,"visit_date","","",117,null],[12,"visit_type","","",117,null],[11,"from_row","","",117,[[["row",3]],["result",6]]],[3,"FetchedVisitPage","","",null,null],[12,"url","","",118,null],[12,"guid","","",118,null],[12,"row_id","","",118,null],[12,"title","","",118,null],[11,"from_row","","",118,[[["row",3]],["result",6]]],[5,"fetch_visits","","",null,[[["placesdb",3],["usize",15],["url",3]],[["option",4],["result",6]]]],[5,"apply_synced_visits","","Apply history visit from sync. This assumes they have all …",null,[[["placesdb",3],["syncguid",3],["url",3],["option",4]],["result",6]]],[5,"apply_synced_reconciliation","","",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[5,"apply_synced_deletion","","",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[4,"OutgoingInfo","","",null,null],[13,"Record","","",119,null],[13,"Tombstone","","",119,null],[5,"fetch_outgoing","","",null,[[["placesdb",3],["usize",15]],[["result",6],["hashmap",3]]]],[5,"finish_outgoing","","",null,[[["placesdb",3]],["result",6]]],[5,"reset","","Resets all sync metadata, including change counters, sync …",null,[[["placesdb",3],["enginesyncassociation",4]],["result",6]]],[7,"DELETION_HIGH_WATER_MARK_META_KEY","places::storage::history","When <code>delete_everything</code> is called (to perform a permanent …",null,null],[5,"apply_observation","","Returns the RowId of a new visit in moz_historyvisits, or …",null,[[["placesdb",3],["visitobservation",3]],[["result",6],["option",4]]]],[5,"apply_observation_direct","","Returns the RowId of a new visit in moz_historyvisits, or …",null,[[["placesdb",3],["visitobservation",3]],[["result",6],["option",4]]]],[5,"update_frecency","","",null,[[["placesdb",3],["rowid",3],["option",4],["bool",15]],["result",6]]],[5,"frecency_stale_at","","Indicates if and when a URL\'s frecency was marked as …",null,[[["placesdb",3],["url",3]],[["result",6],["option",4]]]],[5,"add_visit","","",null,[[["placesdb",3],["rowid",3],["option",4],["timestamp",3],["visittransition",4],["bool",15]],[["rowid",3],["result",6]]]],[5,"url_to_guid","","Returns the GUID for the specified Url, or None if it …",null,[[["placesdb",3],["url",3]],[["option",4],["result",6]]]],[5,"href_to_guid","","Returns the GUID for the specified Url String, or None if …",null,[[["placesdb",3],["str",15]],[["option",4],["result",6]]]],[5,"delete_visits_for_in_tx","","Internal function for deleting a page, creating a …",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[5,"insert_tombstones_for_all_page_visits","","Inserts Sync tombstones for all of a page\'s visits.",null,[[["placesdb",3],["rowid",3]],["result",6]]],[5,"delete_all_visits_for_page","","Removes all visits from a page.",null,[[["placesdb",3],["rowid",3]],["result",6]]],[5,"insert_tombstone_for_page","","Inserts a Sync tombstone for a page.",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[5,"delete_page","","Deletes a page. Note that this throws a constraint …",null,[[["placesdb",3],["rowid",3]],["result",6]]],[5,"delete_visits_for","","Deletes all visits for a page given its GUID, creating …",null,[[["placesdb",3],["syncguid",3]],["result",6]]],[5,"delete_visits_between","","Delete all visits in a date range.",null,[[["placesdb",3],["timestamp",3]],["result",6]]],[5,"delete_place_visit_at_time","","",null,[[["placesdb",3],["url",3],["timestamp",3]],["result",6]]],[5,"delete_place_visit_at_time_by_href","","",null,[[["placesdb",3],["timestamp",3],["str",15]],["result",6]]],[5,"prune_destructively","","",null,[[["placesdb",3]],["result",6]]],[5,"wipe_local","","",null,[[["placesdb",3]],["result",6]]],[5,"wipe_local_in_tx","","",null,[[["placesdb",3]],["result",6]]],[5,"delete_everything","","",null,[[["placesdb",3]],["result",6]]],[5,"delete_place_visit_at_time_in_tx","","",null,[[["placesdb",3],["timestamp",3],["str",15]],["result",6]]],[5,"delete_visits_between_in_tx","","",null,[[["placesdb",3],["timestamp",3]],["result",6]]],[3,"PageToClean","","",null,null],[12,"id","","",120,null],[12,"has_foreign","","",120,null],[12,"has_visits","","",120,null],[12,"sync_status","","",120,null],[11,"from_row","","",120,[[["row",3]],["result",6]]],[5,"cleanup_pages","","Clean up pages whose history has been modified, by either …",null,[[["placesdb",3]],["result",6]]],[5,"reset_in_tx","","",null,[[["placesdb",3],["enginesyncassociation",4]],["result",6]]],[5,"get_visited","","",null,[[["placesdb",3]],[["result",6],["vec",3]]]],[5,"get_visited_into","","Low level api used to implement both get_visited and the …",null,[[["placesdb",3]],["result",6]]],[5,"get_visited_urls","","Get the set of urls that were visited between <code>start</code> and …",null,[[["placesdb",3],["bool",15],["timestamp",3]],[["vec",3],["result",6]]]],[5,"get_top_frecent_site_infos","","",null,[[["placesdb",3],["i64",15],["i32",15]],[["topfrecentsiteinfos",3],["result",6]]]],[5,"get_visit_infos","","",null,[[["placesdb",3],["timestamp",3],["visittransitionset",3]],[["result",6],["historyvisitinfos",3]]]],[5,"get_visit_count","","",null,[[["placesdb",3],["visittransitionset",3]],[["i64",15],["result",6]]]],[5,"get_visit_page","","",null,[[["placesdb",3],["i64",15],["visittransitionset",3]],[["result",6],["historyvisitinfos",3]]]],[5,"get_visit_page_with_bound","","",null,[[["placesdb",3],["i64",15],["visittransitionset",3]],[["historyvisitinfoswithbound",3],["result",6]]]],[0,"tags","places::storage","",null,null],[4,"ValidatedTag","places::storage::tags","The validity of a tag.",null,null],[13,"Invalid","","The tag is invalid.",121,null],[13,"Normalized","","The tag is valid, but normalized to remove leading and …",121,null],[13,"Original","","The original tag is valid.",121,null],[11,"is_original","","Returns <code>true</code> if the original tag is valid; <code>false</code> if it\'s …",121,[[],["bool",15]]],[11,"ensure_valid","","Returns the tag string if the tag is valid or normalized, …",121,[[],[["str",15],["result",6]]]],[5,"validate_tag","","Checks the validity of the specified tag.",null,[[["str",15]],["validatedtag",4]]],[5,"tag_url","","Tags the specified URL.",null,[[["placesdb",3],["url",3],["str",15]],["result",6]]],[5,"untag_url","","Remove the specified tag from the specified URL.",null,[[["placesdb",3],["url",3],["str",15]],["result",6]]],[5,"remove_all_tags_from_url","","Remove all tags from the specified URL.",null,[[["placesdb",3],["url",3]],["result",6]]],[5,"remove_tag","","Remove the specified tag from all URLs.",null,[[["placesdb",3],["str",15]],["result",6]]],[5,"get_urls_with_tag","","Retrieves a list of URLs which have the specified tag.",null,[[["placesdb",3],["str",15]],[["vec",3],["result",6]]]],[5,"get_tags_for_url","","Retrieves a list of tags for the specified URL.",null,[[["placesdb",3],["url",3]],[["vec",3],["result",6]]]],[17,"URL_LENGTH_MAX","places::storage","From …",null,null],[17,"TITLE_LENGTH_MAX","","",null,null],[17,"TAG_LENGTH_MAX","","",null,null],[3,"RowId","","",null,null],[12,"0","","",122,null],[3,"PageInfo","","",null,null],[12,"url","","",123,null],[12,"guid","","",123,null],[12,"row_id","","",123,null],[12,"title","","",123,null],[12,"hidden","","",123,null],[12,"typed","","",123,null],[12,"frecency","","",123,null],[12,"visit_count_local","","",123,null],[12,"visit_count_remote","","",123,null],[12,"last_visit_date_local","","",123,null],[12,"last_visit_date_remote","","",123,null],[12,"sync_status","","",123,null],[12,"sync_change_counter","","",123,null],[11,"from_row","","",123,[[["row",3]],["result",6]]],[3,"FetchedPageInfo","","",null,null],[12,"page","","",124,null],[12,"last_visit_id","","",124,null],[11,"from_row","","",124,[[["row",3]],["result",6]]],[5,"fetch_page_info","","",null,[[["placesdb",3],["url",3]],[["result",6],["option",4]]]],[5,"new_page_info","","",null,[[["placesdb",3],["url",3],["syncguid",3],["option",4]],[["pageinfo",3],["result",6]]]],[5,"run_maintenance","","",null,[[["placesdb",3]],["result",6]]],[5,"put_meta","","",null,[[["placesdb",3],["tosql",8],["str",15]],["result",6]]],[5,"get_meta","","",null,[[["placesdb",3],["str",15]],[["option",4],["result",6]]]],[5,"delete_meta","","",null,[[["placesdb",3],["str",15]],["result",6]]],[5,"delete_pending_temp_tables","","Delete all items in the temp tables we use for staging …",null,[[["placesdb",3]],["result",6]]],[0,"util","places","",null,null],[5,"slice_up_to","places::util","Equivalent to <code>&s[..max_len.min(s.len())]</code>, but handles the …",null,[[["usize",15],["str",15]],["str",15]]],[5,"unurl_path","","<code>Path</code> is basically just a <code>str</code> with no validation, and so …",null,[[],["pathbuf",3]]],[5,"ensure_url_path","","If <code>p</code> is a file URL, return it, otherwise try and make it …",null,[[],[["result",6],["url",3]]]],[5,"normalize_path","","As best as possible, convert <code>p</code> into an absolute path, …",null,[[],[["result",6],["pathbuf",3]]]],[0,"msg_types","places","",null,null],[3,"HistoryVisitInfo","places::msg_types","",null,null],[12,"url","","",125,null],[12,"title","","",125,null],[12,"timestamp","","",125,null],[12,"visit_type","","",125,null],[12,"is_hidden","","",125,null],[11,"title","","Returns the value of <code>title</code>, or the default value if <code>title</code> …",125,[[],["str",15]]],[3,"HistoryVisitInfos","","",null,null],[12,"infos","","",126,null],[3,"HistoryVisitInfosWithBound","","",null,null],[12,"infos","","",127,null],[12,"bound","","",127,null],[12,"offset","","",127,null],[3,"BookmarkNode","","A bookmark node.",null,null],[12,"node_type","","The type of this bookmark, a <code>BookmarkType</code> (from <code>types.rs</code>).",128,null],[12,"guid","","The bookmarks guid.",128,null],[12,"date_added","","Creation time, in milliseconds since the unix epoch.",128,null],[12,"last_modified","","Last modification time, in milliseconds since the unix …",128,null],[12,"parent_guid","","Guid of the parent record.",128,null],[12,"position","","Zero based index within the parent.",128,null],[12,"title","","Bookmark title. Not present for type = …",128,null],[12,"url","","Bookmark URL. Only allowed/present for type = …",128,null],[12,"child_guids","","IDs of folder children, in order. Only present for type = …",128,null],[12,"child_nodes","","Data about folder children, in order. Only present for …",128,null],[12,"have_child_nodes","","Returned by reads, and used to distinguish between the …",128,null],[11,"node_type","","Returns the value of <code>node_type</code>, or the default value if …",128,[[],["i32",15]]],[11,"guid","","Returns the value of <code>guid</code>, or the default value if <code>guid</code> …",128,[[],["str",15]]],[11,"date_added","","Returns the value of <code>date_added</code>, or the default value if …",128,[[],["i64",15]]],[11,"last_modified","","Returns the value of <code>last_modified</code>, or the default value …",128,[[],["i64",15]]],[11,"parent_guid","","Returns the value of <code>parent_guid</code>, or the default value if …",128,[[],["str",15]]],[11,"position","","Returns the value of <code>position</code>, or the default value if …",128,[[],["u32",15]]],[11,"title","","Returns the value of <code>title</code>, or the default value if <code>title</code> …",128,[[],["str",15]]],[11,"url","","Returns the value of <code>url</code>, or the default value if <code>url</code> is …",128,[[],["str",15]]],[11,"have_child_nodes","","Returns the value of <code>have_child_nodes</code>, or the default …",128,[[],["bool",15]]],[3,"BookmarkNodeList","","An array of bookmark nodes, since we can\'t represent that …",null,null],[12,"nodes","","",129,null],[3,"SearchResultMessage","","",null,null],[12,"url","","",130,null],[12,"title","","",130,null],[12,"frecency","","",130,null],[12,"reasons","","",130,null],[11,"reasons","","Returns an iterator which yields the valid enum values …",130,[[],[["filtermap",3],["cloned",3]]]],[11,"push_reasons","","Appends the provided enum value to <code>reasons</code>.",130,[[["searchresultreason",4]]]],[3,"SearchResultList","","",null,null],[12,"results","","",131,null],[3,"TopFrecentSiteInfo","","",null,null],[12,"url","","",132,null],[12,"title","","",132,null],[11,"title","","Returns the value of <code>title</code>, or the default value if <code>title</code> …",132,[[],["str",15]]],[3,"TopFrecentSiteInfos","","",null,null],[12,"infos","","",133,null],[4,"SearchResultReason","","Protobuf allows nesting these, but prost behaves weirdly …",null,null],[13,"Keyword","","Never used in practice. Maybe remove this from here and …",134,null],[13,"Origin","","",134,null],[13,"Url","","",134,null],[13,"PreviousUse","","",134,null],[13,"Bookmark","","",134,null],[13,"Tag","","If we get real tag support, just add <code>optional string tags</code> …",134,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>SearchResultReason</code>.",134,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>SearchResultReason</code>, or <code>None</code> if <code>value</code> …",134,[[["i32",15]],[["option",4],["searchresultreason",4]]]],[11,"from","places::api::history","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","places::api::matcher","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","places::api::places_api","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","places::error","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","places::types::visit_transition_set","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"get_hash","","",20,[[],["u64",15]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","places::types","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"get_hash","","",22,[[],["u64",15]]],[11,"vzip","","",22,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"fmt","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"vzip","","",136,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"get_hash","","",23,[[],["u64",15]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"get_hash","","",24,[[],["u64",15]]],[11,"vzip","","",24,[[]]],[11,"from","places::bookmark_sync::engine","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","places::bookmark_sync::incoming","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","places::bookmark_sync::record","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"get_hash","","",37,[[],["u64",15]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"get_hash","","",38,[[],["u64",15]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"get_hash","","",39,[[],["u64",15]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"get_hash","","",40,[[],["u64",15]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"get_hash","","",41,[[],["u64",15]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"get_hash","","",42,[[],["u64",15]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"get_hash","","",43,[[],["u64",15]]],[11,"vzip","","",43,[[]]],[11,"from","places::bookmark_sync","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"get_hash","","",44,[[],["u64",15]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"get_hash","","",45,[[],["u64",15]]],[11,"vzip","","",45,[[]]],[11,"from","places::db::db","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","places::db::schema","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","places::db::tx::coop_transaction","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","places::db::tx","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","places::frecency","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","places::hash","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","places::history_sync::engine","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","places::history_sync::plan","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","places::history_sync::record","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"get_hash","","",60,[[],["u64",15]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"get_hash","","",61,[[],["u64",15]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","places::history_sync","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"get_hash","","",63,[[],["u64",15]]],[11,"vzip","","",63,[[]]],[11,"from","places::import::common","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","places::import::fennec::bookmarks","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"get_hash","","",67,[[],["u64",15]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","places::import::fennec::history","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","places::import::ios_bookmarks","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"get_hash","","",83,[[],["u64",15]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","places::match_impl","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"get_hash","","",92,[[],["u64",15]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","places::observation","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","places::storage::bookmarks::conversions","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","places::storage::bookmarks::public_node","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","places::storage::bookmarks::root_guid","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"get_hash","","",98,[[],["u64",15]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","places::storage::bookmarks","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"from","places::storage::history::history_sync","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"from","places::storage::history","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"from","places::storage::tags","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","places::storage","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"to_string","","",122,[[],["string",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"from","places::msg_types","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"get_hash","","",134,[[],["u64",15]]],[11,"vzip","","",134,[[]]],[11,"search","places::api::matcher","",7,[[["placesdb",3],["u32",15]],[["result",6],["vec",3]]]],[11,"search","","",8,[[["placesdb",3],["u32",15]],[["result",6],["vec",3]]]],[11,"search","","",9,[[["placesdb",3],["u32",15]],[["result",6],["vec",3]]]],[11,"drop","places::api::places_api","",14,[[]]],[11,"drop","places::db::db","",47,[[]]],[11,"drop","places::import::common","",65,[[]]],[11,"from","places::msg_types","",130,[[["searchresult",3]]]],[11,"from","","",134,[[["matchreason",4]]]],[11,"from","places::error","",15,[[["error",3]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","","",15,[[["error",4]]]],[11,"from","","",15,[[["parseerror",4]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","","",15,[[["interrupted",3]]]],[11,"from","","",15,[[["decodeerror",3]]]],[11,"from","","",15,[[["utf8error",3]]]],[11,"from","","",17,[[["errorkind",4]],["error",3]]],[11,"from","","",17,[[["error",3]]]],[11,"from","","",17,[[["error",3]]]],[11,"from","","",17,[[["parseerror",4]]]],[11,"from","","",17,[[["error",4]]]],[11,"from","","",17,[[["invalidplaceinfo",4]]]],[11,"from","","",17,[[["corruption",4]]]],[11,"from","","",17,[[["error",3]]]],[11,"from","","",17,[[["error",3]]]],[11,"from","","",17,[[["decodeerror",3]]]],[11,"from","","",17,[[["interrupted",3]]]],[11,"from","","",17,[[["utf8error",3]]]],[11,"from","places::bookmark_sync::record","",37,[[["syncguid",3]],["bookmarkrecordid",3]]],[11,"from","","",43,[[["bookmarkrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",43,[[["queryrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",43,[[["folderrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",43,[[["livemarkrecord",3]],["bookmarkitemrecord",4]]],[11,"from","","",43,[[["separatorrecord",3]],["bookmarkitemrecord",4]]],[11,"from","places::bookmark_sync","",44,[[["kind",4]],["syncedbookmarkkind",4]]],[11,"from","places::history_sync","",63,[[["timestamp",3]],["servervisittimestamp",3]]],[11,"from","","",63,[[["systemtime",3]]]],[11,"from","places::storage::bookmarks::public_node","",96,[[["bookmarktreenode",4]]]],[11,"from","places::msg_types","",128,[[["publicnode",3]]]],[11,"from","places::storage::bookmarks::public_node","",96,[[["rawbookmark",3]]]],[11,"from","places::msg_types","",129,[[["vec",3],["publicnode",3]]]],[11,"from","places::storage::bookmarks::conversions","",95,[[["bookmarknode",3]]]],[11,"from","places::msg_types","",129,[[["bookmarknode",3],["vec",3]]]],[11,"from","places::storage::bookmarks","",105,[[["insertablebookmark",3]]]],[11,"from","","",105,[[["insertableseparator",3]]]],[11,"from","","",105,[[["insertablefolder",3]]]],[11,"from","","",110,[[["updatablebookmark",3]]]],[11,"from","","",110,[[["updatableseparator",3]]]],[11,"from","","",110,[[["updatablefolder",3]]]],[11,"from","","",114,[[["bookmarknode",3]]]],[11,"from","","",114,[[["separatornode",3]]]],[11,"from","","",114,[[["foldernode",3]]]],[11,"extend","places::types::visit_transition_set","",20,[[]]],[11,"extend","places::match_impl","",92,[[["intoiterator",8]]]],[11,"into_iter","places::types::visit_transition_set","",20,[[],["visittransitionsetiter",3]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"clone","places::api::history","",2,[[],["redirectsourcetype",4]]],[11,"clone","places::api::matcher","",3,[[],["searchparams",3]]],[11,"clone","","",4,[[],["matchreason",4]]],[11,"clone","","",5,[[],["searchresult",3]]],[11,"clone","places::api::places_api","",10,[[],["connectiontype",4]]],[11,"clone","places::types::visit_transition_set","",20,[[],["visittransitionset",3]]],[11,"clone","places::types","",135,[[],["invalidvisittype",3]]],[11,"clone","","",22,[[],["visittransition",4]]],[11,"clone","","",23,[[],["bookmarktype",4]]],[11,"clone","","",24,[[],["syncstatus",4]]],[11,"clone","places::bookmark_sync::record","",37,[[],["bookmarkrecordid",3]]],[11,"clone","","",38,[[],["bookmarkrecord",3]]],[11,"clone","","",39,[[],["queryrecord",3]]],[11,"clone","","",40,[[],["folderrecord",3]]],[11,"clone","","",41,[[],["livemarkrecord",3]]],[11,"clone","","",42,[[],["separatorrecord",3]]],[11,"clone","","",43,[[],["bookmarkitemrecord",4]]],[11,"clone","places::bookmark_sync","",44,[[],["syncedbookmarkkind",4]]],[11,"clone","","",45,[[],["syncedbookmarkvalidity",4]]],[11,"clone","places::frecency","",53,[[],["redirectbonus",4]]],[11,"clone","","",54,[[],["frecencysettings",3]]],[11,"clone","places::hash","",56,[[],["prefixmode",4]]],[11,"clone","places::history_sync::record","",60,[[],["historyrecordvisit",3]]],[11,"clone","","",61,[[],["historyrecord",3]]],[11,"clone","places::history_sync","",63,[[],["servervisittimestamp",3]]],[11,"clone","places::import::fennec::bookmarks","",66,[[],["bookmarksmigrationresult",3]]],[11,"clone","","",67,[[],["fennecbookmarktype",4]]],[11,"clone","places::import::fennec::history","",76,[[],["historymigrationresult",3]]],[11,"clone","places::import::ios_bookmarks","",83,[[],["iosbookmarktype",4]]],[11,"clone","places::match_impl","",91,[[],["matchbehavior",4]]],[11,"clone","","",92,[[],["searchbehavior",3]]],[11,"clone","places::storage::bookmarks::conversions","",95,[[],["bookmarkupdateinfo",3]]],[11,"clone","places::storage::bookmarks::public_node","",96,[[],["publicnode",3]]],[11,"clone","places::storage::bookmarks::root_guid","",98,[[],["bookmarkrootguid",4]]],[11,"clone","places::storage::bookmarks","",100,[[],["bookmarkposition",4]]],[11,"clone","","",102,[[],["insertablebookmark",3]]],[11,"clone","","",103,[[],["insertableseparator",3]]],[11,"clone","","",104,[[],["insertablefolder",3]]],[11,"clone","","",105,[[],["insertableitem",4]]],[11,"clone","","",106,[[],["updatetreelocation",4]]],[11,"clone","","",107,[[],["updatablebookmark",3]]],[11,"clone","","",108,[[],["updatableseparator",3]]],[11,"clone","","",109,[[],["updatablefolder",3]]],[11,"clone","","",110,[[],["updatableitem",4]]],[11,"clone","places::storage::history::history_sync","",117,[[],["fetchedvisit",3]]],[11,"clone","places::storage::tags","",121,[[],["validatedtag",4]]],[11,"clone","places::storage","",122,[[],["rowid",3]]],[11,"clone","places::msg_types","",125,[[],["historyvisitinfo",3]]],[11,"clone","","",126,[[],["historyvisitinfos",3]]],[11,"clone","","",127,[[],["historyvisitinfoswithbound",3]]],[11,"clone","","",128,[[],["bookmarknode",3]]],[11,"clone","","",129,[[],["bookmarknodelist",3]]],[11,"clone","","",130,[[],["searchresultmessage",3]]],[11,"clone","","",131,[[],["searchresultlist",3]]],[11,"clone","","",132,[[],["topfrecentsiteinfo",3]]],[11,"clone","","",133,[[],["topfrecentsiteinfos",3]]],[11,"clone","","",134,[[],["searchresultreason",4]]],[11,"default","places::types::visit_transition_set","",20,[[],["visittransitionset",3]]],[11,"default","places::bookmark_sync::engine","",27,[[],["driver",3]]],[11,"default","places::frecency","",54,[[]]],[11,"default","places::history_sync::record","",60,[[],["historyrecordvisit",3]]],[11,"default","places::history_sync","",63,[[],["servervisittimestamp",3]]],[11,"default","places::import::fennec::bookmarks","",66,[[],["bookmarksmigrationresult",3]]],[11,"default","places::import::fennec::history","",76,[[],["historymigrationresult",3]]],[11,"default","places::match_impl","",92,[[],["searchbehavior",3]]],[11,"default","places::storage::bookmarks::public_node","",96,[[]]],[11,"default","places::storage::bookmarks","",106,[[]]],[11,"default","","",107,[[],["updatablebookmark",3]]],[11,"default","","",109,[[],["updatablefolder",3]]],[11,"default","","",112,[[],["separatornode",3]]],[11,"default","","",113,[[],["foldernode",3]]],[11,"default","places::storage","",122,[[],["rowid",3]]],[11,"default","places::msg_types","",125,[[],["historyvisitinfo",3]]],[11,"default","","",126,[[],["historyvisitinfos",3]]],[11,"default","","",127,[[],["historyvisitinfoswithbound",3]]],[11,"default","","",128,[[],["bookmarknode",3]]],[11,"default","","",129,[[],["bookmarknodelist",3]]],[11,"default","","",130,[[],["searchresultmessage",3]]],[11,"default","","",131,[[],["searchresultlist",3]]],[11,"default","","",132,[[],["topfrecentsiteinfo",3]]],[11,"default","","",133,[[],["topfrecentsiteinfos",3]]],[11,"default","","",134,[[],["searchresultreason",4]]],[11,"cmp","places::types","",135,[[["invalidvisittype",3]],["ordering",4]]],[11,"cmp","","",23,[[["bookmarktype",4]],["ordering",4]]],[11,"cmp","","",24,[[["syncstatus",4]],["ordering",4]]],[11,"cmp","places::bookmark_sync","",44,[[["syncedbookmarkkind",4]],["ordering",4]]],[11,"cmp","","",45,[[["syncedbookmarkvalidity",4]],["ordering",4]]],[11,"cmp","places::history_sync","",63,[[["servervisittimestamp",3]],["ordering",4]]],[11,"cmp","places::import::fennec::bookmarks","",67,[[["fennecbookmarktype",4]],["ordering",4]]],[11,"cmp","places::import::ios_bookmarks","",83,[[["iosbookmarktype",4]],["ordering",4]]],[11,"cmp","places::match_impl","",92,[[["searchbehavior",3]],["ordering",4]]],[11,"cmp","places::storage","",122,[[["rowid",3]],["ordering",4]]],[11,"cmp","places::msg_types","",134,[[["searchresultreason",4]],["ordering",4]]],[11,"eq","places::api::history","",2,[[["redirectsourcetype",4]],["bool",15]]],[11,"eq","places::api::matcher","",4,[[["matchreason",4]],["bool",15]]],[11,"ne","","",4,[[["matchreason",4]],["bool",15]]],[11,"eq","","",5,[[["searchresult",3]],["bool",15]]],[11,"ne","","",5,[[["searchresult",3]],["bool",15]]],[11,"eq","places::api::places_api","",10,[[["connectiontype",4]],["bool",15]]],[11,"eq","places::types::visit_transition_set","",20,[[["visittransitionset",3]],["bool",15]]],[11,"ne","","",20,[[["visittransitionset",3]],["bool",15]]],[11,"eq","places::types","",135,[[["invalidvisittype",3]],["bool",15]]],[11,"eq","","",22,[[["visittransition",4]],["bool",15]]],[11,"eq","","",23,[[["bookmarktype",4]],["bool",15]]],[11,"eq","","",24,[[["syncstatus",4]],["bool",15]]],[11,"eq","places::bookmark_sync::record","",37,[[["bookmarkrecordid",3]],["bool",15]]],[11,"ne","","",37,[[["bookmarkrecordid",3]],["bool",15]]],[11,"eq","","",38,[[["bookmarkrecord",3]],["bool",15]]],[11,"ne","","",38,[[["bookmarkrecord",3]],["bool",15]]],[11,"eq","","",39,[[["queryrecord",3]],["bool",15]]],[11,"ne","","",39,[[["queryrecord",3]],["bool",15]]],[11,"eq","","",40,[[["folderrecord",3]],["bool",15]]],[11,"ne","","",40,[[["folderrecord",3]],["bool",15]]],[11,"eq","","",41,[[["livemarkrecord",3]],["bool",15]]],[11,"ne","","",41,[[["livemarkrecord",3]],["bool",15]]],[11,"eq","","",42,[[["separatorrecord",3]],["bool",15]]],[11,"ne","","",42,[[["separatorrecord",3]],["bool",15]]],[11,"eq","","",43,[[["bookmarkitemrecord",4]],["bool",15]]],[11,"ne","","",43,[[["bookmarkitemrecord",4]],["bool",15]]],[11,"eq","places::bookmark_sync","",44,[[["syncedbookmarkkind",4]],["bool",15]]],[11,"eq","","",45,[[["syncedbookmarkvalidity",4]],["bool",15]]],[11,"eq","places::frecency","",53,[[["redirectbonus",4]],["bool",15]]],[11,"eq","","",54,[[["frecencysettings",3]],["bool",15]]],[11,"ne","","",54,[[["frecencysettings",3]],["bool",15]]],[11,"eq","places::hash","",56,[[["prefixmode",4]],["bool",15]]],[11,"eq","places::history_sync::record","",60,[[["historyrecordvisit",3]],["bool",15]]],[11,"ne","","",60,[[["historyrecordvisit",3]],["bool",15]]],[11,"eq","","",61,[[["historyrecord",3]],["bool",15]]],[11,"ne","","",61,[[["historyrecord",3]],["bool",15]]],[11,"eq","places::history_sync","",63,[[["servervisittimestamp",3]],["bool",15]]],[11,"ne","","",63,[[["servervisittimestamp",3]],["bool",15]]],[11,"eq","places::import::fennec::bookmarks","",66,[[["bookmarksmigrationresult",3]],["bool",15]]],[11,"ne","","",66,[[["bookmarksmigrationresult",3]],["bool",15]]],[11,"eq","","",67,[[["fennecbookmarktype",4]],["bool",15]]],[11,"eq","places::import::fennec::history","",76,[[["historymigrationresult",3]],["bool",15]]],[11,"ne","","",76,[[["historymigrationresult",3]],["bool",15]]],[11,"eq","places::import::ios_bookmarks","",83,[[["iosbookmarktype",4]],["bool",15]]],[11,"eq","places::match_impl","",91,[[["matchbehavior",4]],["bool",15]]],[11,"eq","","",92,[[["searchbehavior",3]],["bool",15]]],[11,"ne","","",92,[[["searchbehavior",3]],["bool",15]]],[11,"eq","places::storage::bookmarks::conversions","",95,[[["bookmarkupdateinfo",3]],["bool",15]]],[11,"ne","","",95,[[["bookmarkupdateinfo",3]],["bool",15]]],[11,"eq","places::storage::bookmarks::public_node","",96,[[["publicnode",3]],["bool",15]]],[11,"eq","places::storage::bookmarks::root_guid","",98,[[["bookmarkrootguid",4]],["bool",15]]],[11,"eq","","",98,[[["syncguid",3]],["bool",15]]],[11,"eq","","",98,[[["syncguid",3]],["bool",15]]],[11,"eq","","",98,[[["str",15]],["bool",15]]],[11,"eq","places::storage::history::history_sync","",117,[[["fetchedvisit",3]],["bool",15]]],[11,"ne","","",117,[[["fetchedvisit",3]],["bool",15]]],[11,"eq","places::storage::tags","",121,[[["validatedtag",4]],["bool",15]]],[11,"ne","","",121,[[["validatedtag",4]],["bool",15]]],[11,"eq","places::storage","",122,[[["rowid",3]],["bool",15]]],[11,"ne","","",122,[[["rowid",3]],["bool",15]]],[11,"eq","places::msg_types","",125,[[["historyvisitinfo",3]],["bool",15]]],[11,"ne","","",125,[[["historyvisitinfo",3]],["bool",15]]],[11,"eq","","",126,[[["historyvisitinfos",3]],["bool",15]]],[11,"ne","","",126,[[["historyvisitinfos",3]],["bool",15]]],[11,"eq","","",127,[[["historyvisitinfoswithbound",3]],["bool",15]]],[11,"ne","","",127,[[["historyvisitinfoswithbound",3]],["bool",15]]],[11,"eq","","",128,[[["bookmarknode",3]],["bool",15]]],[11,"ne","","",128,[[["bookmarknode",3]],["bool",15]]],[11,"eq","","",129,[[["bookmarknodelist",3]],["bool",15]]],[11,"ne","","",129,[[["bookmarknodelist",3]],["bool",15]]],[11,"eq","","",130,[[["searchresultmessage",3]],["bool",15]]],[11,"ne","","",130,[[["searchresultmessage",3]],["bool",15]]],[11,"eq","","",131,[[["searchresultlist",3]],["bool",15]]],[11,"ne","","",131,[[["searchresultlist",3]],["bool",15]]],[11,"eq","","",132,[[["topfrecentsiteinfo",3]],["bool",15]]],[11,"ne","","",132,[[["topfrecentsiteinfo",3]],["bool",15]]],[11,"eq","","",133,[[["topfrecentsiteinfos",3]],["bool",15]]],[11,"ne","","",133,[[["topfrecentsiteinfos",3]],["bool",15]]],[11,"eq","","",134,[[["searchresultreason",4]],["bool",15]]],[11,"partial_cmp","places::api::history","",2,[[["redirectsourcetype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::types","",135,[[["invalidvisittype",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",23,[[["bookmarktype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",24,[[["syncstatus",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::bookmark_sync","",44,[[["syncedbookmarkkind",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",45,[[["syncedbookmarkvalidity",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::history_sync","",63,[[["servervisittimestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["servervisittimestamp",3]],["bool",15]]],[11,"le","","",63,[[["servervisittimestamp",3]],["bool",15]]],[11,"gt","","",63,[[["servervisittimestamp",3]],["bool",15]]],[11,"ge","","",63,[[["servervisittimestamp",3]],["bool",15]]],[11,"partial_cmp","places::import::fennec::bookmarks","",67,[[["fennecbookmarktype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::import::ios_bookmarks","",83,[[["iosbookmarktype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::match_impl","",92,[[["searchbehavior",3]],[["option",4],["ordering",4]]]],[11,"lt","","",92,[[["searchbehavior",3]],["bool",15]]],[11,"le","","",92,[[["searchbehavior",3]],["bool",15]]],[11,"gt","","",92,[[["searchbehavior",3]],["bool",15]]],[11,"ge","","",92,[[["searchbehavior",3]],["bool",15]]],[11,"partial_cmp","places::storage::bookmarks::root_guid","",98,[[["bookmarkrootguid",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","places::storage","",122,[[["rowid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",122,[[["rowid",3]],["bool",15]]],[11,"le","","",122,[[["rowid",3]],["bool",15]]],[11,"gt","","",122,[[["rowid",3]],["bool",15]]],[11,"ge","","",122,[[["rowid",3]],["bool",15]]],[11,"partial_cmp","places::msg_types","",134,[[["searchresultreason",4]],[["option",4],["ordering",4]]]],[11,"deref","places::api::places_api","",11,[[],["mutex",3]]],[11,"deref","","",14,[[],["placesdb",3]]],[11,"deref","places::db::db","",46,[[],["rwlock",3]]],[11,"deref","","",47,[[],["connection",3]]],[11,"deref","places::db::schema","",49,[[],["string",3]]],[11,"deref","places::db::tx::coop_transaction","",50,[[],["connection",3]]],[11,"deref","places::db::tx","",51,[[],["connection",3]]],[11,"deref","places::history_sync::engine","",57,[[],["connection",3]]],[11,"deref","places::import::common","",64,[[],["timestamp",3]]],[11,"deref","places::import::fennec::bookmarks","",68,[[],["string",3]]],[11,"deref","","",69,[[],["string",3]]],[11,"deref","","",70,[[],["string",3]]],[11,"deref","","",71,[[],["string",3]]],[11,"deref","","",72,[[],["string",3]]],[11,"deref","","",73,[[],["string",3]]],[11,"deref","","",74,[[],["str",15]]],[11,"deref","","",75,[[],["str",15]]],[11,"deref","places::import::fennec::history","",77,[[],["str",15]]],[11,"deref","","",78,[[],["str",15]]],[11,"deref","","",79,[[],["str",15]]],[11,"deref","","",80,[[],["str",15]]],[11,"deref","","",81,[[],["str",15]]],[11,"deref","","",82,[[],["str",15]]],[11,"deref","places::import::ios_bookmarks","",84,[[],["string",3]]],[11,"deref","","",85,[[],["string",3]]],[11,"deref","","",86,[[],["string",3]]],[11,"deref","","",87,[[],["string",3]]],[11,"deref","","",88,[[],["string",3]]],[11,"deref","","",89,[[],["string",3]]],[11,"deref","","",90,[[],["string",3]]],[11,"deref","places::storage::bookmarks::public_node","",97,[[],["string",3]]],[11,"deref","places::storage::bookmarks::root_guid","",99,[[]]],[11,"fmt","places::api::history","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","places::api::matcher","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","places::api::places_api","",10,[[["formatter",3]],["result",6]]],[11,"fmt","places::error","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","places::types::visit_transition_set","",20,[[["formatter",3]],["result",6]]],[11,"fmt","places::types","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","places::bookmark_sync::record","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","places::bookmark_sync","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","places::db::db","",47,[[["formatter",3]],["result",6]]],[11,"fmt","places::frecency","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","places::hash","",56,[[["formatter",3]],["result",6]]],[11,"fmt","places::history_sync::plan","",58,[[["formatter",3]],["result",6]]],[11,"fmt","places::history_sync::record","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","places::history_sync","",63,[[["formatter",3]],["result",6]]],[11,"fmt","places::import::fennec::bookmarks","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","places::import::fennec::history","",76,[[["formatter",3]],["result",6]]],[11,"fmt","places::import::ios_bookmarks","",83,[[["formatter",3]],["result",6]]],[11,"fmt","places::match_impl","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","places::observation","",94,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::bookmarks::conversions","",95,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::bookmarks::public_node","",96,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::bookmarks::root_guid","",98,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::bookmarks","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::history","",120,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::history::history_sync","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage::tags","",121,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","places::msg_types","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","places::error","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","places::types","",135,[[["formatter",3]],["result",6]]],[11,"fmt","places::bookmark_sync::engine","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","places::history_sync","",63,[[["formatter",3]],["result",6]]],[11,"fmt","places::storage","",122,[[["formatter",3]],["result",6]]],[11,"sub","places::match_impl","Returns the set difference of the two sets of flags.",92,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["searchbehavior",3]]]],[11,"not","","Returns the complement of this set of flags.",92,[[],["searchbehavior",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",92,[[["searchbehavior",3]],["searchbehavior",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["searchbehavior",3]]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["searchbehavior",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["searchbehavior",3]]]],[11,"hash","places::types::visit_transition_set","",20,[[]]],[11,"hash","places::types","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","places::bookmark_sync::record","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","places::bookmark_sync","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","places::history_sync::record","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","places::history_sync","",63,[[]]],[11,"hash","places::import::fennec::bookmarks","",67,[[]]],[11,"hash","places::import::ios_bookmarks","",83,[[]]],[11,"hash","places::match_impl","",92,[[]]],[11,"hash","places::storage::bookmarks::root_guid","",98,[[]]],[11,"hash","places::msg_types","",134,[[]]],[11,"try_from","places::types::visit_transition_set","",20,[[["u16",15]],[["result",4],["invalidvisittype",3]]]],[11,"try_from","places::types","",22,[[["u8",15]],["result",4]]],[11,"from_iter","places::types::visit_transition_set","",20,[[]]],[11,"from_iter","places::match_impl","",92,[[["intoiterator",8]],["searchbehavior",3]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"source","places::error","",15,[[],[["option",4],["error",8]]]],[11,"column_result","places::types","",23,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","","",24,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","places::match_impl","",91,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","","",92,[[["valueref",4]],["fromsqlresult",6]]],[11,"column_result","places::storage","",122,[[["valueref",4]],["fromsqlresult",6]]],[11,"to_sql","places::types::visit_transition_set","",20,[[],[["tosqloutput",4],["result",6]]]],[11,"to_sql","places::types","",22,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","","",23,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","","",24,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","places::bookmark_sync","",44,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","","",45,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"to_sql","places::match_impl","",91,[[],[["tosqloutput",4],["result",6]]]],[11,"to_sql","","",92,[[],[["tosqloutput",4],["result",6]]]],[11,"to_sql","places::storage","",122,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"expecting","places::types","",136,[[["formatter",3]],["result",6]]],[11,"visit_u64","","",136,[[["u64",15]],[["error",8],["visittransition",4],["result",4]]]],[11,"serialize","places::api::matcher","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","places::types","",22,[[["serializer",8]],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","places::bookmark_sync::record","",37,[[["serializer",8]],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","places::history_sync::record","",60,[[],["result",4]]],[11,"serialize","","",61,[[],["result",4]]],[11,"serialize","places::history_sync","",63,[[],["result",4]]],[11,"serialize","places::import::fennec::bookmarks","",66,[[],["result",4]]],[11,"serialize","places::import::fennec::history","",76,[[],["result",4]]],[11,"serialize","places::observation","",94,[[],["result",4]]],[11,"serialize","places::storage::bookmarks","",114,[[],["result",4]]],[11,"serialize","places::storage","",122,[[],["result",4]]],[11,"deserialize","places::types","",22,[[["deserializer",8]],["result",4]]],[11,"deserialize","places::bookmark_sync::record","",37,[[["deserializer",8]],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","places::history_sync::record","",60,[[],["result",4]]],[11,"deserialize","","",61,[[],["result",4]]],[11,"deserialize","places::history_sync","",63,[[],["result",4]]],[11,"deserialize","places::import::fennec::bookmarks","",66,[[],["result",4]]],[11,"deserialize","places::import::fennec::history","",76,[[],["result",4]]],[11,"deserialize","places::observation","",94,[[],["result",4]]],[11,"deserialize","places::storage::bookmarks","",114,[[],["result",4]]],[11,"deserialize","places::storage","",122,[[],["result",4]]],[11,"conn","places::db::db","",47,[[],["connection",3]]],[11,"conn","places::db::tx::coop_transaction","",50,[[],["connection",3]]],[11,"conn","places::db::tx","",51,[[],["connection",3]]],[11,"initialize","places::api::places_api","",11,[[]]],[11,"initialize","places::db::db","",46,[[]]],[11,"initialize","places::db::schema","",49,[[]]],[11,"initialize","places::import::common","",64,[[]]],[11,"initialize","places::import::fennec::bookmarks","",68,[[]]],[11,"initialize","","",69,[[]]],[11,"initialize","","",70,[[]]],[11,"initialize","","",71,[[]]],[11,"initialize","","",72,[[]]],[11,"initialize","","",73,[[]]],[11,"initialize","","",74,[[]]],[11,"initialize","","",75,[[]]],[11,"initialize","places::import::fennec::history","",77,[[]]],[11,"initialize","","",78,[[]]],[11,"initialize","","",79,[[]]],[11,"initialize","","",80,[[]]],[11,"initialize","","",81,[[]]],[11,"initialize","","",82,[[]]],[11,"initialize","places::import::ios_bookmarks","",84,[[]]],[11,"initialize","","",85,[[]]],[11,"initialize","","",86,[[]]],[11,"initialize","","",87,[[]]],[11,"initialize","","",88,[[]]],[11,"initialize","","",89,[[]]],[11,"initialize","","",90,[[]]],[11,"initialize","places::storage::bookmarks::public_node","",97,[[]]],[11,"initialize","places::storage::bookmarks::root_guid","",99,[[]]],[11,"ffi_default","places::msg_types","",131,[[]]],[11,"into_ffi_value","","",131,[[]]],[11,"ffi_default","","",133,[[]]],[11,"into_ffi_value","","",133,[[]]],[11,"ffi_default","","",126,[[]]],[11,"into_ffi_value","","",126,[[]]],[11,"ffi_default","","",127,[[]]],[11,"into_ffi_value","","",127,[[]]],[11,"ffi_default","","",128,[[]]],[11,"into_ffi_value","","",128,[[]]],[11,"ffi_default","","",129,[[]]],[11,"into_ffi_value","","",129,[[]]],[11,"ffi_default","places::storage::bookmarks::public_node","",96,[[]]],[11,"into_ffi_value","","",96,[[]]],[11,"collection_name","places::bookmark_sync::engine","",26,[[],[["str",15],["cow",4]]]],[11,"apply_incoming","","",26,[[["incomingchangeset",6],["vec",3],["engine",3]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",26,[[["syncguid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"get_collection_requests","","",26,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[11,"get_sync_assoc","","",26,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",26,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","Erases all local items. Unlike <code>reset</code>, this keeps all …",26,[[],["result",6]]],[11,"collection_name","places::history_sync::engine","",57,[[],[["str",15],["cow",4]]]],[11,"apply_incoming","","",57,[[["incomingchangeset",6],["vec",3],["engine",3]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",57,[[["guid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"get_collection_requests","","",57,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[11,"get_sync_assoc","","",57,[[],[["result",6],["enginesyncassociation",4]]]],[11,"reset","","",57,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",57,[[],["result",6]]],[11,"encode_raw","places::msg_types","",125,[[]]],[11,"merge_field","","",125,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",125,[[],["usize",15]]],[11,"clear","","",125,[[]]],[11,"encode_raw","","",126,[[]]],[11,"merge_field","","",126,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",126,[[],["usize",15]]],[11,"clear","","",126,[[]]],[11,"encode_raw","","",127,[[]]],[11,"merge_field","","",127,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",127,[[],["usize",15]]],[11,"clear","","",127,[[]]],[11,"encode_raw","","",128,[[]]],[11,"merge_field","","",128,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",128,[[],["usize",15]]],[11,"clear","","",128,[[]]],[11,"encode_raw","","",129,[[]]],[11,"merge_field","","",129,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",129,[[],["usize",15]]],[11,"clear","","",129,[[]]],[11,"encode_raw","","",130,[[]]],[11,"merge_field","","",130,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",130,[[],["usize",15]]],[11,"clear","","",130,[[]]],[11,"encode_raw","","",131,[[]]],[11,"merge_field","","",131,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",131,[[],["usize",15]]],[11,"clear","","",131,[[]]],[11,"encode_raw","","",132,[[]]],[11,"merge_field","","",132,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",132,[[],["usize",15]]],[11,"clear","","",132,[[]]],[11,"encode_raw","","",133,[[]]],[11,"merge_field","","",133,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",133,[[],["usize",15]]],[11,"clear","","",133,[[]]],[11,"aborted","places::bookmark_sync::engine","",25,[[],["bool",15]]],[11,"generate_new_guid","","",27,[[["guid",3]],[["guid",3],["result",6]]]],[11,"record_telemetry_event","","",27,[[["telemetryevent",4]]]],[11,"fetch_local_tree","","Builds a fully rooted, consistent tree from all local …",28,[[],[["result",6],["tree",3]]]],[11,"fetch_remote_tree","","Builds a fully rooted tree from all synced items and …",28,[[],[["result",6],["tree",3]]]],[11,"apply","","",28,[[["mergedroot",3]],["result",6]]],[11,"get_node_type","places::msg_types","Get the BookmarkType, panicking if it\'s invalid (because …",128,[[],["bookmarktype",4]]],[11,"into_insertable","","Convert the protobuf bookmark into information for …",128,[[],[["result",6],["insertableitem",4]]]],[11,"from_row","","",125,[[["row",3]],["result",6]]],[11,"from_row","","",132,[[["row",3]],["result",6]]]],"p":[[3,"AddablePlaceInfo"],[3,"AddableVisit"],[4,"RedirectSourceType"],[3,"SearchParams"],[4,"MatchReason"],[3,"SearchResult"],[8,"Matcher"],[3,"OriginOrUrl"],[3,"Adaptive"],[3,"Suggestions"],[4,"ConnectionType"],[3,"APIS"],[3,"SyncState"],[3,"PlacesApi"],[3,"SyncConn"],[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[4,"InvalidPlaceInfo"],[4,"Corruption"],[3,"VisitTransitionSet"],[3,"VisitTransitionSetIter"],[4,"VisitTransition"],[4,"BookmarkType"],[4,"SyncStatus"],[3,"MergeInterruptee"],[3,"BookmarksEngine"],[3,"Driver"],[3,"Merger"],[3,"NullableFragment"],[3,"ItemTypeFragment"],[3,"UploadItemsFragment"],[3,"LocalItemsFragment"],[3,"ItemKindFragment"],[4,"UrlOrPlaceIdFragment"],[3,"RootsFragment"],[3,"IncomingApplicator"],[3,"BookmarkRecordId"],[3,"BookmarkRecord"],[3,"QueryRecord"],[3,"FolderRecord"],[3,"LivemarkRecord"],[3,"SeparatorRecord"],[4,"BookmarkItemRecord"],[4,"SyncedBookmarkKind"],[4,"SyncedBookmarkValidity"],[3,"GLOBAL_BOOKMARK_CHANGE_COUNTERS"],[3,"PlacesDb"],[3,"GlobalChangeCounterTracker"],[3,"CREATE_SHARED_TRIGGERS_SQL"],[3,"ChunkedCoopTransaction"],[3,"PlacesTransaction"],[4,"PlacesTransactionRepr"],[4,"RedirectBonus"],[3,"FrecencySettings"],[3,"FrecencyComputation"],[4,"PrefixMode"],[3,"HistoryEngine"],[4,"IncomingPlan"],[13,"Apply"],[3,"HistoryRecordVisit"],[3,"HistoryRecord"],[3,"HistorySyncRecord"],[3,"ServerVisitTimestamp"],[3,"NOW"],[3,"ExecuteOnDrop"],[3,"BookmarksMigrationResult"],[4,"FennecBookmarkType"],[3,"FILL_MOZ_PLACES"],[3,"POPULATE_MIRROR"],[3,"POPULATE_STAGING"],[3,"FETCH_PINNED"],[3,"CREATE_STAGING_TABLE"],[3,"FIXUP_MOZ_BOOKMARKS"],[3,"COUNT_FENNEC_BOOKMARKS"],[3,"COUNT_FENIX_BOOKMARKS"],[3,"HistoryMigrationResult"],[3,"CREATE_STAGING_TABLE"],[3,"FILL_STAGING"],[3,"FILL_MOZ_PLACES"],[3,"INSERT_HISTORY_VISITS"],[3,"COUNT_FENNEC_HISTORY_VISITS"],[3,"COUNT_FENIX_HISTORY_VISITS"],[4,"IosBookmarkType"],[3,"WIPE_MIRROR"],[3,"IOS_VALID_TYPES"],[3,"FILL_MOZ_PLACES"],[3,"POPULATE_MIRROR"],[3,"POPULATE_STAGING"],[3,"CREATE_STAGING_TABLE"],[3,"FIXUP_MOZ_BOOKMARKS"],[4,"MatchBehavior"],[3,"SearchBehavior"],[3,"AutocompleteMatch"],[3,"VisitObservation"],[3,"BookmarkUpdateInfo"],[3,"PublicNode"],[3,"SEARCH_QUERY"],[4,"BookmarkRootGuid"],[3,"GUIDS"],[4,"BookmarkPosition"],[4,"FetchDepth"],[3,"InsertableBookmark"],[3,"InsertableSeparator"],[3,"InsertableFolder"],[4,"InsertableItem"],[4,"UpdateTreeLocation"],[3,"UpdatableBookmark"],[3,"UpdatableSeparator"],[3,"UpdatableFolder"],[4,"UpdatableItem"],[3,"BookmarkNode"],[3,"SeparatorNode"],[3,"FolderNode"],[4,"BookmarkTreeNode"],[3,"FetchedTreeRow"],[3,"RawBookmark"],[3,"FetchedVisit"],[3,"FetchedVisitPage"],[4,"OutgoingInfo"],[3,"PageToClean"],[4,"ValidatedTag"],[3,"RowId"],[3,"PageInfo"],[3,"FetchedPageInfo"],[3,"HistoryVisitInfo"],[3,"HistoryVisitInfos"],[3,"HistoryVisitInfosWithBound"],[3,"BookmarkNode"],[3,"BookmarkNodeList"],[3,"SearchResultMessage"],[3,"SearchResultList"],[3,"TopFrecentSiteInfo"],[3,"TopFrecentSiteInfos"],[4,"SearchResultReason"],[3,"InvalidVisitType"],[3,"VisitTransitionSerdeVisitor"]]},\
"places_ffi":{"doc":"","i":[[5,"parse_url","places_ffi","",null,[[["str",15]],[["url",3],["result",6]]]],[3,"APIS","","",null,null],[12,"__private_field","","",0,null],[3,"CONNECTIONS","","",null,null],[12,"__private_field","","",1,null],[5,"places_api_new","","Instantiate a places API. Returned api must be freed with …",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"places_new_sync_conn_interrupt_handle","","Get an interrupt handle for the PlacesApi\'s sync …",null,[[["externerror",3],["u64",15]]]],[5,"places_connection_new","","",null,[[["u8",15],["externerror",3],["u64",15]],["u64",15]]],[5,"places_bookmarks_import_from_ios","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_bookmarks_import_from_fennec","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_pinned_sites_import_from_fennec","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"places_history_import_from_fennec","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_api_return_write_conn","","",null,[[["externerror",3],["u64",15]]]],[5,"places_new_interrupt_handle","","Get the interrupt handle for a connection. Must be …",null,[[["externerror",3],["u64",15]]]],[5,"places_interrupt","","",null,[[["externerror",3],["sqlinterrupthandle",3]]]],[5,"places_note_observation","","Add an observation to the database. The observation is a …",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_query_autocomplete","","Execute a query, returning a <code>Vec<SearchResult></code> as a JSON …",null,[[["u32",15],["u64",15],["externerror",3],["ffistr",3]],["bytebuffer",3]]],[5,"places_match_url","","Execute a query, returning a URL string or null. Returned …",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_get_visited","","SafetyThis takes a bunch of pointers and dereferences all …",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"places_get_visited_urls_in_range","","",null,[[["u8",15],["i64",15],["u64",15],["externerror",3]]]],[5,"places_delete_visits_for","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_delete_visits_between","","",null,[[["i64",15],["externerror",3],["u64",15]]]],[5,"places_delete_visit","","",null,[[["u64",15],["i64",15],["externerror",3],["ffistr",3]]]],[5,"places_wipe_local","","",null,[[["externerror",3],["u64",15]]]],[5,"places_run_maintenance","","",null,[[["externerror",3],["u64",15]]]],[5,"places_prune_destructively","","",null,[[["externerror",3],["u64",15]]]],[5,"places_delete_everything","","",null,[[["externerror",3],["u64",15]]]],[5,"places_get_top_frecent_site_infos","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_get_visit_infos","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_get_visit_count","","",null,[[["i32",15],["externerror",3],["u64",15]],["i64",15]]],[5,"places_get_visit_page","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_get_visit_page_with_bound","","",null,[[["i32",15],["i64",15],["u64",15],["externerror",3]],["bytebuffer",3]]],[5,"places_accept_result","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"places_reset","","",null,[[["externerror",3],["u64",15]]]],[5,"bookmarks_reset","","",null,[[["externerror",3],["u64",15]]]],[5,"sync15_history_sync","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"sync15_bookmarks_sync","","",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"bookmarks_get_tree","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"bookmarks_delete_everything","","",null,[[["externerror",3],["u64",15]]]],[5,"bookmarks_get_by_guid","","",null,[[["u8",15],["u64",15],["externerror",3],["ffistr",3]],["bytebuffer",3]]],[5,"get_buffer","","",null,[[["i32",15]]]],[5,"bookmarks_insert","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"bookmarks_update","","SafetyDeref pointer, thus unsafe",null,[[["i32",15],["u64",15],["externerror",3]]]],[5,"bookmarks_delete","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["u8",15]]],[5,"bookmarks_get_all_with_url","","",null,[[["ffistr",3],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"bookmarks_get_url_for_keyword","","SafetyDeref pointer, thus unsafe",null,[[["ffistr",3],["externerror",3],["u64",15]]]],[5,"bookmarks_search","","",null,[[["i32",15],["u64",15],["externerror",3],["ffistr",3]],["bytebuffer",3]]],[5,"bookmarks_get_recent","","",null,[[["i32",15],["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"places_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"places_destroy_bytebuffer","","",null,[[["bytebuffer",3]]]],[5,"places_api_destroy","","",null,[[["externerror",3],["u64",15]]]],[5,"places_connection_destroy","","",null,[[["externerror",3],["u64",15]]]],[5,"places_interrupt_handle_destroy","","SafetyThis is equivalent to calling Box::from_raw with …",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"deref","","",0,[[],["concurrenthandlemap",3]]],[11,"deref","","",1,[[],["concurrenthandlemap",3]]],[11,"initialize","","",0,[[]]],[11,"initialize","","",1,[[]]]],"p":[[3,"APIS"],[3,"CONNECTIONS"]]},\
"protobuf_gen":{"doc":"","i":[[3,"ProtobufOpts","protobuf_gen","",null,null],[12,"dir","","",0,null],[12,"out_dir","","",0,null],[5,"main","","",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"ProtobufOpts"]]},\
"push":{"doc":"","i":[[0,"communications","push","Server Communications.",null,null],[0,"rate_limiter","push::communications","",null,null],[3,"PersistedRateLimiter","push::communications::rate_limiter","",null,null],[12,"op_name","","",0,null],[12,"periodic_interval","","",0,null],[12,"max_requests_in_interval","","",0,null],[11,"new","","",0,[[["u64",15],["u16",15],["str",15]]]],[11,"check","","",0,[[["store",3]],["bool",15]]],[11,"db_meta_keys","","",0,[[]]],[11,"get_counters","","",0,[[["store",3]]]],[11,"get_meta_integer","","",0,[[["store",3],["str",15]],[["fromstr",8],["default",8]]]],[11,"persist_counters","","",0,[[["store",3],["u16",15],["u64",15]]]],[5,"now_secs","","",null,[[],["u64",15]]],[3,"PersistedRateLimiter","push::communications","",null,null],[12,"op_name","","",0,null],[12,"periodic_interval","","",0,null],[12,"max_requests_in_interval","","",0,null],[3,"RegisterResponse","","",null,null],[12,"uaid","","The UAID associated with the request",1,null],[12,"channel_id","","The Channel ID associated with the request",1,null],[12,"secret","","Auth token for subsequent calls (note, only generated on …",1,null],[12,"endpoint","","Push endpoint for 3rd parties",1,null],[12,"senderid","","The Sender/Group ID echoed back (if applicable.)",1,null],[4,"BroadcastValue","","",null,null],[13,"Value","","",2,null],[13,"Nested","","",2,null],[8,"Connection","","A new communication link to the Autopush server",null,null],[10,"subscribe","","send a new subscription request to the server, get back …",3,[[["option",4],["str",15]],[["result",6],["registerresponse",3]]]],[10,"unsubscribe","","Drop an endpoint",3,[[["option",4],["str",15]],[["bool",15],["result",6]]]],[10,"update","","Update the autopush server with the new native OS …",3,[[["str",15]],[["bool",15],["result",6]]]],[10,"channel_list","","Get a list of server known channels.",3,[[],[["vec",3],["result",6]]]],[10,"verify_connection","","Verify that the known channel list matches up with the …",3,[[],[["bool",15],["result",6]]]],[10,"broadcast_subscribe","","Add one or more new broadcast subscriptions.",3,[[["broadcastvalue",4]],[["broadcastvalue",4],["result",6]]]],[10,"broadcasts","","get the list of broadcasts",3,[[],[["broadcastvalue",4],["result",6]]]],[3,"ConnectHttp","","Connect to the Autopush server via the HTTP interface",null,null],[12,"options","","",4,null],[12,"uaid","","",4,null],[12,"auth","","",4,null],[5,"connect","","",null,[[["option",4],["pushconfiguration",3],["string",3]],[["connecthttp",3],["result",6]]]],[11,"headers","","",4,[[],[["result",6],["headers",3]]]],[0,"config","push","",null,null],[3,"PushConfiguration","push::config","",null,null],[12,"server_host","","host name:port",5,null],[12,"socket_protocol","","connection protocol (for direct connections \\\"wss\\\")",5,null],[12,"http_protocol","","http protocol (for mobile, bridged connections \\\"https\\\")",5,null],[12,"bridge_type","","bridge protocol (\\\"fcm\\\")",5,null],[12,"registration_id","","Native OS registration ID value",5,null],[12,"enabled","","Service enabled flag",5,null],[12,"ping_interval","","How often to ping server (1800s)",5,null],[12,"sender_id","","Sender/Application ID value",5,null],[12,"database_path","","OS Path to the database",5,null],[0,"crypto","push","",null,null],[17,"SER_AUTH_LENGTH","push::crypto","",null,null],[6,"Decrypted","","",null,null],[4,"VersionnedKey","","",null,null],[13,"V1","","",6,null],[3,"KeyV1","","",null,null],[12,"p256key","","",7,null],[12,"auth","","",7,null],[6,"Key","","",null,null],[11,"serialize","","",7,[[],[["vec",3],["result",6]]]],[11,"deserialize","","",7,[[],["result",6]]],[11,"key_pair","","",7,[[],["eckeycomponents",3]]],[11,"auth_secret","","",7,[[]]],[11,"private_key","","",7,[[]]],[11,"public_key","","",7,[[]]],[11,"serialize","","",8,[[],[["vec",3],["result",6]]]],[11,"deserialize","","",8,[[],["result",6]]],[11,"key_pair","","",8,[[],["eckeycomponents",3]]],[11,"auth_secret","","",8,[[]]],[11,"private_key","","",8,[[]]],[11,"public_key","","",8,[[]]],[8,"Cryptography","","",null,null],[10,"generate_key","","generate a new local EC p256 key",9,[[],[["result",6],["key",6]]]],[10,"test_key","","create a test key for testing",9,[[["str",15]],["key",6]]],[10,"decrypt","","General decrypt function. Calls to decrypt_aesgcm or …",9,[[["key",6],["option",4],["str",15]],[["decrypted",6],["result",6]]]],[10,"decrypt_aesgcm","","Decrypt the obsolete \\\"aesgcm\\\" format (which is still used …",9,[[["vec",3],["key",6],["option",4]],[["decrypted",6],["result",6]]]],[10,"decrypt_aes128gcm","","Decrypt the RFC 8188 format.",9,[[["key",6]],[["decrypted",6],["result",6]]]],[3,"Crypto","","",null,null],[5,"get_random_bytes","","",null,[[["usize",15]],[["vec",3],["result",6]]]],[5,"extract_value","","Extract the sub-value from the header. Sub values have …",null,[[["option",4],["str",15]],[["option",4],["vec",3]]]],[0,"error","push","",null,null],[6,"Result","push::error","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",10,null],[12,"backtrace","","",10,null],[11,"new","","",10,[[["errorkind",4]]]],[11,"get_backtrace","","",10,[[],[["mutex",3],["option",4]]]],[3,"Error","","",null,null],[12,"0","","",11,null],[11,"kind","","",11,[[],["errorkind",4]]],[11,"backtrace","","",11,[[],[["mutex",3],["option",4]]]],[4,"ErrorKind","","",null,null],[13,"GeneralError","","An unspecified general error has occured",12,null],[13,"CryptoError","","",12,null],[13,"CommunicationError","","A Client communication error",12,null],[13,"CommunicationServerError","","An error returned from the registration Server",12,null],[13,"AlreadyRegisteredError","","Channel is already registered, generate new channelID",12,null],[13,"StorageError","","An error with Storage",12,null],[13,"RecordNotFoundError","","",12,null],[13,"StorageSqlError","","A failure to encode data to/from storage.",12,null],[13,"MissingRegistrationTokenError","","",12,null],[13,"TranscodingError","","",12,null],[13,"UrlParseError","","A failure to parse a URL.",12,null],[11,"error_code","","",12,[[],["errorcode",3]]],[0,"ffi","push","",null,null],[0,"storage","","Handle Push data storage",null,null],[0,"db","push::storage","",null,null],[8,"Storage","push::storage::db","",null,null],[10,"get_record","","",13,[[["str",15]],[["option",4],["result",6]]]],[10,"get_record_by_chid","","",13,[[["str",15]],[["option",4],["result",6]]]],[10,"put_record","","",13,[[["pushrecord",3]],[["bool",15],["result",6]]]],[10,"delete_record","","",13,[[["str",15]],[["bool",15],["result",6]]]],[10,"delete_all_records","","",13,[[["str",15]],["result",6]]],[10,"get_channel_list","","",13,[[["str",15]],[["result",6],["vec",3]]]],[10,"update_endpoint","","",13,[[["str",15]],[["bool",15],["result",6]]]],[10,"update_native_id","","",13,[[["str",15]],[["bool",15],["result",6]]]],[10,"get_meta","","",13,[[["str",15]],[["option",4],["result",6]]]],[10,"set_meta","","",13,[[["str",15]],["result",6]]],[3,"PushDb","","",null,null],[12,"db","","",14,null],[11,"with_connection","","",14,[[["connection",3]],["result",6]]],[11,"open","","",14,[[],["result",6]]],[11,"open_in_memory","","",14,[[],["result",6]]],[11,"normalize_uuid","","Normalize UUID values to undashed, lowercase.",14,[[["str",15]],["string",3]]],[11,"uuid_to_dashed","","Dash UUID strings.",14,[[["str",15]],[["string",3],["result",6]]]],[0,"record","push::storage","",null,null],[6,"ChannelID","push::storage::record","",null,null],[3,"MetaRecord","","Meta information are various push related values that …",null,null],[12,"key","","User Agent unique identifier",15,null],[12,"val","","Server authorization token",15,null],[3,"PushRecord","","",null,null],[12,"uaid","","User Agent\'s unique identifier",16,null],[12,"channel_id","","Designation label provided by the subscribing service",16,null],[12,"endpoint","","Endpoint provided from the push server",16,null],[12,"scope","","The receipient (service worker)\'s scope",16,null],[12,"key","","Private EC Prime256v1 key info.",16,null],[12,"ctime","","Time this subscription was created.",16,null],[12,"app_server_key","","VAPID public key to restrict subscription updates for …",16,null],[12,"native_id","","(if this is a bridged connection (e.g. on Android), this …",16,null],[11,"new","","Create a Push Record from the Subscription info: …",16,[[["key",3],["str",15]]]],[11,"from_row","","",16,[[["row",3]],["result",6]]],[0,"schema","push::storage","",null,null],[17,"VERSION","push::storage::schema","",null,null],[17,"CREATE_TABLE_PUSH_SQL","","",null,null],[17,"COMMON_COLS","","",null,null],[5,"init","","",null,[[["connection",3]],["result",6]]],[5,"upgrade","","",null,[[["connection",3],["i64",15]],["result",6]]],[5,"create","","",null,[[["connection",3]],["result",6]]],[0,"types","push::storage","",null,null],[3,"Timestamp","push::storage::types","Typesafe way to manage timestamps.",null,null],[12,"0","","",17,null],[11,"now","","",17,[[]]],[3,"Store","push::storage","",null,null],[12,"db","","",14,null],[8,"Storage","","",null,null],[10,"get_record","","",13,[[["str",15]],[["option",4],["result",6]]]],[10,"get_record_by_chid","","",13,[[["str",15]],[["option",4],["result",6]]]],[10,"put_record","","",13,[[["pushrecord",3]],[["bool",15],["result",6]]]],[10,"delete_record","","",13,[[["str",15]],[["bool",15],["result",6]]]],[10,"delete_all_records","","",13,[[["str",15]],["result",6]]],[10,"get_channel_list","","",13,[[["str",15]],[["result",6],["vec",3]]]],[10,"update_endpoint","","",13,[[["str",15]],[["bool",15],["result",6]]]],[10,"update_native_id","","",13,[[["str",15]],[["bool",15],["result",6]]]],[10,"get_meta","","",13,[[["str",15]],[["option",4],["result",6]]]],[10,"set_meta","","",13,[[["str",15]],["result",6]]],[3,"PushRecord","","",null,null],[12,"uaid","","User Agent\'s unique identifier",16,null],[12,"channel_id","","Designation label provided by the subscribing service",16,null],[12,"endpoint","","Endpoint provided from the push server",16,null],[12,"scope","","The receipient (service worker)\'s scope",16,null],[12,"key","","Private EC Prime256v1 key info.",16,null],[12,"ctime","","Time this subscription was created.",16,null],[12,"app_server_key","","VAPID public key to restrict subscription updates for …",16,null],[12,"native_id","","(if this is a bridged connection (e.g. on Android), this …",16,null],[0,"subscriber","push","Handle external Push Subscription Requests.",null,null],[17,"UPDATE_RATE_LIMITER_INTERVAL","push::subscriber","",null,null],[17,"UPDATE_RATE_LIMITER_MAX_CALLS","","",null,null],[3,"PushManager","","",null,null],[12,"config","","",18,null],[12,"conn","","",18,null],[12,"store","","",18,null],[12,"update_rate_limiter","","",18,null],[11,"new","","",18,[[["pushconfiguration",3]],["result",6]]],[11,"subscribe","","",18,[[["option",4],["str",15]],["result",6]]],[11,"unsubscribe","","",18,[[["option",4],["str",15]],[["bool",15],["result",6]]]],[11,"unsubscribe_all","","",18,[[],[["bool",15],["result",6]]]],[11,"update","","",18,[[["str",15]],[["bool",15],["result",6]]]],[11,"verify_connection","","",18,[[],[["vec",3],["result",6]]]],[11,"decrypt","","",18,[[["option",4],["str",15]],[["string",3],["result",6]]]],[11,"get_record_by_chid","","",18,[[["str",15]],[["result",6],["option",4]]]],[0,"msg_types","push","",null,null],[3,"DispatchInfo","push::msg_types","",null,null],[12,"uaid","","",19,null],[12,"scope","","",19,null],[12,"endpoint","","",19,null],[12,"app_server_key","","",19,null],[11,"app_server_key","","Returns the value of <code>app_server_key</code>, or the default value …",19,[[],["str",15]]],[3,"KeyInfo","","",null,null],[12,"auth","","",20,null],[12,"p256dh","","",20,null],[3,"SubscriptionInfo","","",null,null],[12,"endpoint","","",21,null],[12,"keys","","",21,null],[3,"SubscriptionResponse","","",null,null],[12,"channel_id","","",22,null],[12,"subscription_info","","",22,null],[3,"PushSubscriptionChanged","","",null,null],[12,"channel_id","","",23,null],[12,"scope","","",23,null],[3,"PushSubscriptionsChanged","","",null,null],[12,"subs","","",24,null],[11,"from","push::communications::rate_limiter","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","push::communications","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","push::config","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","push::crypto","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","push::error","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","push::storage::db","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","push::storage::record","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","push::storage::types","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"get_hash","","",17,[[],["u64",15]]],[11,"from","push::subscriber","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","push::msg_types","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"subscribe","push::communications","send a new subscription request to the server, get back …",4,[[["option",4],["str",15]],[["result",6],["registerresponse",3]]]],[11,"unsubscribe","","Drop a channel and stop receiving updates.",4,[[["option",4],["str",15]],[["bool",15],["result",6]]]],[11,"update","","Update the push server with the new OS push authorization …",4,[[["str",15]],[["bool",15],["result",6]]]],[11,"channel_list","","Get a list of server known channels. If it differs from …",4,[[],[["vec",3],["result",6]]]],[11,"broadcast_subscribe","","",4,[[["broadcastvalue",4]],[["broadcastvalue",4],["result",6]]]],[11,"broadcasts","","",4,[[],[["broadcastvalue",4],["result",6]]]],[11,"verify_connection","","Verify that the server and client both have matching …",4,[[],[["bool",15],["result",6]]]],[11,"generate_key","push::crypto","Generate a new cryptographic Key",25,[[],[["result",6],["key",6]]]],[11,"test_key","","",25,[[["str",15]],["key",6]]],[11,"decrypt","","Decrypt the incoming webpush message based on the …",25,[[["key",6],["option",4],["str",15]],[["decrypted",6],["result",6]]]],[11,"decrypt_aesgcm","","",25,[[["vec",3],["key",6],["option",4]],[["decrypted",6],["result",6]]]],[11,"decrypt_aes128gcm","","",25,[[["key",6]],[["vec",3],["result",6]]]],[11,"get_record","push::storage::db","",14,[[["str",15]],[["option",4],["result",6]]]],[11,"get_record_by_chid","","",14,[[["str",15]],[["option",4],["result",6]]]],[11,"put_record","","",14,[[["pushrecord",3]],[["bool",15],["result",6]]]],[11,"delete_record","","",14,[[["str",15]],[["bool",15],["result",6]]]],[11,"delete_all_records","","",14,[[["str",15]],["result",6]]],[11,"get_channel_list","","",14,[[["str",15]],[["result",6],["vec",3]]]],[11,"update_endpoint","","",14,[[["str",15]],[["bool",15],["result",6]]]],[11,"update_native_id","","",14,[[["str",15]],[["bool",15],["result",6]]]],[11,"get_meta","","",14,[[["str",15]],[["option",4],["result",6]]]],[11,"set_meta","","",14,[[["str",15]],["result",6]]],[11,"from","push::error","",11,[[["errorkind",4]],["error",3]]],[11,"from","","",11,[[["error",4]]]],[11,"from","","",11,[[["parseerror",4]]]],[11,"from","","",12,[[["error",4]]]],[11,"from","","",12,[[["parseerror",4]]]],[11,"from","push::storage::types","",17,[[["systemtime",3]]]],[11,"from","","",17,[[["u64",15]]]],[11,"clone","push::config","",5,[[],["pushconfiguration",3]]],[11,"clone","push::crypto","",6,[[],["versionnedkey",4]]],[11,"clone","","",7,[[],["keyv1",3]]],[11,"clone","push::storage::record","",15,[[],["metarecord",3]]],[11,"clone","","",16,[[],["pushrecord",3]]],[11,"clone","push::storage::types","",17,[[],["timestamp",3]]],[11,"clone","push::msg_types","",19,[[],["dispatchinfo",3]]],[11,"clone","","",20,[[],["keyinfo",3]]],[11,"clone","","",21,[[],["subscriptioninfo",3]]],[11,"clone","","",22,[[],["subscriptionresponse",3]]],[11,"clone","","",23,[[],["pushsubscriptionchanged",3]]],[11,"clone","","",24,[[],["pushsubscriptionschanged",3]]],[11,"default","push::config","",5,[[],["pushconfiguration",3]]],[11,"default","push::storage::types","",17,[[],["timestamp",3]]],[11,"default","push::msg_types","",19,[[],["dispatchinfo",3]]],[11,"default","","",20,[[],["keyinfo",3]]],[11,"default","","",21,[[],["subscriptioninfo",3]]],[11,"default","","",22,[[],["subscriptionresponse",3]]],[11,"default","","",23,[[],["pushsubscriptionchanged",3]]],[11,"default","","",24,[[],["pushsubscriptionschanged",3]]],[11,"cmp","push::storage::types","",17,[[["timestamp",3]],["ordering",4]]],[11,"eq","push::crypto","",7,[[["keyv1",3]],["bool",15]]],[11,"ne","","",7,[[["keyv1",3]],["bool",15]]],[11,"eq","push::storage::record","",15,[[["metarecord",3]],["bool",15]]],[11,"ne","","",15,[[["metarecord",3]],["bool",15]]],[11,"eq","","",16,[[["pushrecord",3]],["bool",15]]],[11,"ne","","",16,[[["pushrecord",3]],["bool",15]]],[11,"eq","push::storage::types","",17,[[["timestamp",3]],["bool",15]]],[11,"ne","","",17,[[["timestamp",3]],["bool",15]]],[11,"eq","push::msg_types","",19,[[["dispatchinfo",3]],["bool",15]]],[11,"ne","","",19,[[["dispatchinfo",3]],["bool",15]]],[11,"eq","","",20,[[["keyinfo",3]],["bool",15]]],[11,"ne","","",20,[[["keyinfo",3]],["bool",15]]],[11,"eq","","",21,[[["subscriptioninfo",3]],["bool",15]]],[11,"ne","","",21,[[["subscriptioninfo",3]],["bool",15]]],[11,"eq","","",22,[[["subscriptionresponse",3]],["bool",15]]],[11,"ne","","",22,[[["subscriptionresponse",3]],["bool",15]]],[11,"eq","","",23,[[["pushsubscriptionchanged",3]],["bool",15]]],[11,"ne","","",23,[[["pushsubscriptionchanged",3]],["bool",15]]],[11,"eq","","",24,[[["pushsubscriptionschanged",3]],["bool",15]]],[11,"ne","","",24,[[["pushsubscriptionschanged",3]],["bool",15]]],[11,"partial_cmp","push::storage::types","",17,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["timestamp",3]],["bool",15]]],[11,"le","","",17,[[["timestamp",3]],["bool",15]]],[11,"gt","","",17,[[["timestamp",3]],["bool",15]]],[11,"ge","","",17,[[["timestamp",3]],["bool",15]]],[11,"deref","push::storage::db","",14,[[],["connection",3]]],[11,"fmt","push::communications","",1,[[["formatter",3]],["result",6]]],[11,"fmt","push::config","",5,[[["formatter",3]],["result",6]]],[11,"fmt","push::crypto","",7,[[["formatter",3]],["result",6]]],[11,"fmt","push::error","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","push::storage::record","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","push::storage::types","",17,[[["formatter",3]],["result",6]]],[11,"fmt","push::msg_types","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","push::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","push::storage::types","",17,[[["formatter",3]],["result",6]]],[11,"hash","","",17,[[]]],[11,"source","push::error","",12,[[],[["error",8],["option",4]]]],[11,"serialize","push::communications","",2,[[],["result",4]]],[11,"serialize","push::crypto","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","push::storage::types","",17,[[],["result",4]]],[11,"deserialize","push::communications","",2,[[],["result",4]]],[11,"deserialize","push::crypto","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","push::storage::types","",17,[[],["result",4]]],[11,"ffi_default","push::msg_types","",19,[[]]],[11,"into_ffi_value","","",19,[[]]],[11,"ffi_default","","",20,[[]]],[11,"into_ffi_value","","",20,[[]]],[11,"ffi_default","","",21,[[]]],[11,"into_ffi_value","","",21,[[]]],[11,"ffi_default","","",22,[[]]],[11,"into_ffi_value","","",22,[[]]],[11,"ffi_default","","",23,[[]]],[11,"into_ffi_value","","",23,[[]]],[11,"ffi_default","","",24,[[]]],[11,"into_ffi_value","","",24,[[]]],[11,"encode_raw","","",19,[[]]],[11,"merge_field","","",19,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",19,[[],["usize",15]]],[11,"clear","","",19,[[]]],[11,"encode_raw","","",20,[[]]],[11,"merge_field","","",20,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",20,[[],["usize",15]]],[11,"clear","","",20,[[]]],[11,"encode_raw","","",21,[[]]],[11,"merge_field","","",21,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",21,[[],["usize",15]]],[11,"clear","","",21,[[]]],[11,"encode_raw","","",22,[[]]],[11,"merge_field","","",22,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",22,[[],["usize",15]]],[11,"clear","","",22,[[]]],[11,"encode_raw","","",23,[[]]],[11,"merge_field","","",23,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",23,[[],["usize",15]]],[11,"clear","","",23,[[]]],[11,"encode_raw","","",24,[[]]],[11,"merge_field","","",24,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",24,[[],["usize",15]]],[11,"clear","","",24,[[]]],[11,"column_result","push::storage::types","",17,[[["valueref",4]],["fromsqlresult",6]]],[11,"to_sql","","",17,[[],[["tosqloutput",4],["rusqliteresult",6]]]],[11,"conn","push::storage::db","",14,[[],["connection",3]]]],"p":[[3,"PersistedRateLimiter"],[3,"RegisterResponse"],[4,"BroadcastValue"],[8,"Connection"],[3,"ConnectHttp"],[3,"PushConfiguration"],[4,"VersionnedKey"],[3,"KeyV1"],[6,"Key"],[8,"Cryptography"],[3,"ErrorData"],[3,"Error"],[4,"ErrorKind"],[8,"Storage"],[3,"PushDb"],[3,"MetaRecord"],[3,"PushRecord"],[3,"Timestamp"],[3,"PushManager"],[3,"DispatchInfo"],[3,"KeyInfo"],[3,"SubscriptionInfo"],[3,"SubscriptionResponse"],[3,"PushSubscriptionChanged"],[3,"PushSubscriptionsChanged"],[3,"Crypto"]]},\
"push_ffi":{"doc":"","i":[[3,"MANAGER","push_ffi","",null,null],[12,"__private_field","","",0,null],[5,"push_connection_new","","Instantiate a Http connection. Returned connection must …",null,[[["externerror",3],["ffistr",3]],["u64",15]]],[5,"push_subscribe","","Errors are logged.",null,[[["externerror",3],["ffistr",3],["u64",15]],["bytebuffer",3]]],[5,"push_unsubscribe","","",null,[[["externerror",3],["ffistr",3],["u64",15]],["u8",15]]],[5,"push_unsubscribe_all","","",null,[[["externerror",3],["u64",15]],["u8",15]]],[5,"push_update","","",null,[[["externerror",3],["ffistr",3],["u64",15]],["u8",15]]],[5,"push_verify_connection","","",null,[[["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"push_decrypt","","",null,[[["externerror",3],["ffistr",3],["u64",15]]]],[5,"push_dispatch_info_for_chid","","",null,[[["externerror",3],["ffistr",3],["u64",15]],["bytebuffer",3]]],[5,"push_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"push_destroy_buffer","","",null,[[["bytebuffer",3]]]],[5,"push_connection_destroy","","",null,[[["externerror",3],["u64",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[],["concurrenthandlemap",3]]],[11,"initialize","","",0,[[]]]],"p":[[3,"MANAGER"]]},\
"rc_crypto":{"doc":"","i":[[0,"aead","rc_crypto","This crate provides all the cryptographic primitives …",null,null],[0,"aes_cbc","rc_crypto::aead","",null,null],[7,"LEGACY_SYNC_AES_256_CBC_HMAC_SHA256","rc_crypto::aead::aes_cbc","AES-256 in CBC mode with HMAC-SHA256 tags and 128 bit …",null,null],[5,"open","","",null,[[["aad",3],["key",3],["nonce",3]],[["result",6],["vec",3]]]],[5,"seal","","",null,[[["aad",3],["key",3],["nonce",3]],[["result",6],["vec",3]]]],[5,"extract_keys","","",null,[[["key",3]]]],[5,"aes_cbc","","",null,[[["aad",3],["direction",4],["nonce",3]],[["result",6],["vec",3]]]],[0,"aes_gcm","rc_crypto::aead","",null,null],[7,"AES_128_GCM","rc_crypto::aead::aes_gcm","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[5,"open","","",null,[[["aad",3],["key",3],["nonce",3]],[["result",6],["vec",3]]]],[5,"seal","","",null,[[["aad",3],["key",3],["nonce",3]],[["result",6],["vec",3]]]],[5,"aes_gcm","","",null,[[["direction",4],["aad",3],["key",3],["nonce",3]],[["result",6],["vec",3]]]],[7,"LEGACY_SYNC_AES_256_CBC_HMAC_SHA256","rc_crypto::aead","AES-256 in CBC mode with HMAC-SHA256 tags and 128 bit …",null,null],[7,"AES_128_GCM","","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[5,"open","","",null,[[["nonce",3],["aad",3],["openingkey",3]],[["result",6],["vec",3]]]],[5,"seal","","",null,[[["sealingkey",3],["aad",3],["nonce",3]],[["result",6],["vec",3]]]],[3,"Aad","","The additional authenticated data (AAD) for an opening or …",null,null],[12,"0","","",0,null],[11,"from","","Construct the <code>Aad</code> by borrowing a contiguous sequence of …",0,[[]]],[11,"empty","","Construct an empty <code>Aad</code>.",0,[[]]],[3,"Nonce","","The nonce for an opening or sealing operation. This is a …",null,null],[12,"0","","",1,null],[11,"try_assume_unique_for_key","","",1,[[["algorithm",3]],["result",6]]],[3,"OpeningKey","","",null,null],[12,"key","","",2,null],[11,"new","","Create a new opening key.",2,[[["algorithm",3]],["result",6]]],[11,"algorithm","","The key\'s AEAD algorithm.",2,[[],["algorithm",3]]],[3,"SealingKey","","",null,null],[12,"key","","",3,null],[11,"new","","Create a new sealing key.",3,[[["algorithm",3]],["result",6]]],[11,"algorithm","","The key\'s AEAD algorithm.",3,[[],["algorithm",3]]],[3,"Key","","<code>OpeningKey</code> and <code>SealingKey</code> are type-safety wrappers around …",null,null],[12,"key_value","","",4,null],[12,"algorithm","","",4,null],[11,"new","","",4,[[["algorithm",3]],["result",6]]],[11,"algorithm","","",4,[[],["algorithm",3]]],[3,"Algorithm","","",null,null],[12,"tag_len","","",5,null],[12,"key_len","","",5,null],[12,"nonce_len","","",5,null],[12,"open","","",5,null],[12,"seal","","",5,null],[11,"key_len","","The length of the key.",5,[[],["usize",15]]],[11,"tag_len","","The length of a tag.",5,[[],["usize",15]]],[11,"nonce_len","","The length of the nonces.",5,[[],["usize",15]]],[4,"Direction","","",null,null],[13,"Opening","","",6,null],[13,"Sealing","","",6,null],[11,"to_nss_operation","","",6,[[],["operation",4]]],[0,"agreement","rc_crypto","",null,null],[4,"Curve","rc_crypto::agreement","",null,null],[13,"P256","","",7,null],[13,"P384","","",7,null],[3,"EcKey","","",null,null],[12,"curve","","",8,null],[12,"private_key","","",8,null],[12,"public_key","","",8,null],[6,"EphemeralKeyPair","","",null,null],[3,"Algorithm","","A key agreement algorithm.",null,null],[12,"curve_id","","",9,null],[7,"ECDH_P256","","",null,null],[7,"ECDH_P384","","",null,null],[8,"Lifetime","","How many times the key may be used.",null,null],[3,"Ephemeral","","The key may be used at most once.",null,null],[3,"Static","","The key may be used more than once.",null,null],[3,"KeyPair","","A key pair for key agreement.",null,null],[12,"private_key","","",10,null],[12,"public_key","","",10,null],[11,"generate","","Generate a new key pair for the given algorithm.",10,[[["algorithm",3]],["result",6]]],[11,"from_private_key","","",10,[[["privatekey",3]],["result",6]]],[11,"private_key","","The private key.",10,[[],["privatekey",3]]],[11,"public_key","","The public key.",10,[[],["publickey",3]]],[11,"split","","Split the key pair apart.",10,[[]]],[11,"from","","",10,[[["privatekey",3],["static",3]],["result",6]]],[3,"PublicKey","","A public key for key agreement.",null,null],[12,"wrapped","","",11,null],[12,"alg","","",11,null],[11,"to_bytes","","",11,[[],[["result",6],["vec",3]]]],[11,"algorithm","","",11,[[],["algorithm",3]]],[3,"UnparsedPublicKey","","An unparsed public key for key agreement.",null,null],[12,"alg","","",12,null],[12,"bytes","","",12,null],[11,"new","","",12,[[["algorithm",3]]]],[11,"algorithm","","",12,[[],["algorithm",3]]],[11,"bytes","","",12,[[]]],[3,"PrivateKey","","A private key for key agreement.",null,null],[12,"wrapped","","",13,null],[12,"alg","","",13,null],[12,"usage","","",13,null],[11,"algorithm","","",13,[[],["algorithm",3]]],[11,"compute_public_key","","",13,[[],[["result",6],["publickey",3]]]],[11,"agree","","Ephemeral agreement. This consumes <code>self</code>, ensuring that …",13,[[["unparsedpublickey",3]],[["inputkeymaterial",3],["result",6]]]],[11,"agree_static","","Static agreement. This borrows <code>self</code>, allowing the private …",13,[[["unparsedpublickey",3]],[["inputkeymaterial",3],["result",6]]]],[11,"import","","",13,[[["eckey",3]],["result",6]]],[11,"export","","",13,[[],[["result",6],["eckey",3]]]],[11,"_tests_only_dangerously_convert_to_ephemeral","","The whole point of having <code>Ephemeral</code> and <code>Static</code> lifetimes …",13,[[],[["privatekey",3],["ephemeral",3]]]],[5,"agree_","","",null,[[["algorithm",3],["privatekey",3],["unparsedpublickey",3]],[["inputkeymaterial",3],["result",6]]]],[3,"InputKeyMaterial","","The result of a key agreement operation, to be fed into a …",null,null],[12,"value","","",14,null],[11,"derive","","Calls <code>kdf</code> with the raw key material and then returns what …",14,[[]]],[0,"constant_time","rc_crypto","",null,null],[5,"verify_slices_are_equal","rc_crypto::constant_time","Returns <code>Ok(())</code> if <code>a == b</code> and <code>Error</code> otherwise. The …",null,[[],["result",6]]],[0,"digest","rc_crypto","",null,null],[4,"Algorithm","rc_crypto::digest","",null,null],[13,"SHA256","","",15,null],[13,"SHA384","","",15,null],[3,"Digest","","A calculated digest value.",null,null],[12,"value","","",16,null],[12,"algorithm","","",16,null],[11,"algorithm","","",16,[[],["algorithm",4]]],[5,"digest","","Returns the digest of data using the given digest …",null,[[["algorithm",4]],[["digest",3],["result",6]]]],[0,"ece_crypto","rc_crypto","",null,null],[3,"RcCryptoLocalKeyPair","rc_crypto::ece_crypto","",null,null],[12,"wrapped","","",17,null],[11,"from_raw_components","","",17,[[["eckeycomponents",3]],[["result",4],["error",4]]]],[11,"generate_random","","",17,[[],[["result",4],["error",4]]]],[11,"agree","","",17,[[["rccryptoremotepublickey",3]],[["result",4],["vec",3],["error",4]]]],[3,"RcCryptoRemotePublicKey","","",null,null],[12,"raw","","",18,null],[11,"from_raw","","",18,[[],[["result",4],["rccryptoremotepublickey",3],["error",4]]]],[3,"RcCryptoCryptographer","","",null,null],[5,"init","","",null,[[]]],[0,"error","rc_crypto","",null,null],[4,"ErrorKind","rc_crypto::error","",null,null],[13,"NSSError","","",19,null],[13,"InternalError","","",19,null],[13,"ConversionError","","",19,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",20,null],[12,"backtrace","","",20,null],[11,"new","","",20,[[["errorkind",4]]]],[11,"get_backtrace","","",20,[[],[["mutex",3],["option",4]]]],[3,"Error","","",null,null],[12,"0","","",21,null],[11,"kind","","",21,[[],["errorkind",4]]],[11,"backtrace","","",21,[[],[["mutex",3],["option",4]]]],[0,"hawk_crypto","rc_crypto","",null,null],[3,"RcCryptoCryptographer","rc_crypto::hawk_crypto","",null,null],[3,"NssHasher","","",null,null],[12,"buffer","","",22,null],[12,"algorithm","","",22,null],[5,"to_rc_crypto_algorithm","","",null,[[["digestalgorithm",4]],[["cryptoerror",4],["result",4],["algorithm",4]]]],[5,"init","","",null,[[]]],[0,"hkdf","rc_crypto","",null,null],[5,"extract_and_expand","rc_crypto::hkdf","",null,[[["signingkey",3]],["result",6]]],[5,"extract","","",null,[[["signingkey",3]],[["result",6],["signingkey",3]]]],[5,"expand","","",null,[[["signingkey",3]],["result",6]]],[0,"hmac","rc_crypto","",null,null],[3,"Signature","rc_crypto::hmac","A calculated signature value. This is a type-safe …",null,null],[12,"0","","",23,null],[3,"SigningKey","","A key to use for HMAC signing.",null,null],[12,"digest_alg","","",24,null],[12,"key_value","","",24,null],[11,"new","","",24,[[["algorithm",4]]]],[11,"digest_algorithm","","",24,[[],["algorithm",4]]],[3,"VerificationKey","","A key to use for HMAC authentication.",null,null],[12,"wrapped","","",25,null],[11,"new","","",25,[[["algorithm",4]]]],[11,"digest_algorithm","","",25,[[],["algorithm",4]]],[5,"verify","","Calculate the HMAC of <code>data</code> using <code>key</code> and verify it …",null,[[["verificationkey",3]],["result",6]]],[5,"verify_with_own_key","","Equivalent to <code>verify</code> but allows the consumer to pass a …",null,[[["signingkey",3]],["result",6]]],[5,"sign","","Calculate the HMAC of <code>data</code> using <code>key</code>.",null,[[["signingkey",3]],[["signature",3],["result",6]]]],[0,"pbkdf2","rc_crypto","",null,null],[4,"HashAlgorithm","rc_crypto::pbkdf2","",null,null],[13,"SHA256","","",15,null],[13,"SHA384","","",15,null],[5,"derive","","Extend passwords using pbkdf2, based on the following rfc …",null,[[["u32",15],["hashalgorithm",4]],["result",6]]],[0,"rand","rc_crypto","",null,null],[5,"fill","rc_crypto::rand","Fill a buffer with cryptographically secure pseudo-random …",null,[[],["result",6]]],[0,"signature","rc_crypto","",null,null],[3,"VerificationAlgorithm","rc_crypto::signature","A signature verification algorithm.",null,null],[12,"curve","","",26,null],[12,"digest_alg","","",26,null],[7,"ECDSA_P256_SHA256","","",null,null],[7,"ECDSA_P384_SHA384","","",null,null],[3,"UnparsedPublicKey","","An unparsed public key for signature operations.",null,null],[12,"alg","","",27,null],[12,"bytes","","",27,null],[11,"new","","",27,[[["verificationalgorithm",3]]]],[11,"verify","","",27,[[],["result",6]]],[11,"algorithm","","",27,[[],["verificationalgorithm",3]]],[11,"bytes","","",27,[[]]],[3,"Error","rc_crypto","",null,null],[12,"0","","",21,null],[4,"ErrorKind","","",null,null],[13,"NSSError","","",19,null],[13,"InternalError","","",19,null],[13,"ConversionError","","",19,null],[6,"Result","","",null,null],[5,"ensure_initialized","","Only required to be called if you intend to use this …",null,[[]]],[11,"from","rc_crypto::aead","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","rc_crypto::agreement","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","rc_crypto::pbkdf2","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","rc_crypto::digest","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"encode_hex","","",16,[[]]],[11,"encode_hex_upper","","",16,[[]]],[11,"from","rc_crypto::ece_crypto","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","rc_crypto::error","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","rc_crypto::hawk_crypto","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","rc_crypto::hmac","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"encode_hex","","",23,[[]]],[11,"encode_hex_upper","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","rc_crypto::signature","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"serialize","rc_crypto::agreement","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rc_crypto::pbkdf2","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rc_crypto::agreement","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",7,[[],[["result",4],["curve",4]]]],[11,"deserialize","","",8,[[],[["eckey",3],["result",4]]]],[11,"clone","","",7,[[],["curve",4]]],[11,"clone","rc_crypto::pbkdf2","",15,[[],["hashalgorithm",4]]],[11,"clone","rc_crypto::agreement","",8,[[],["eckey",3]]],[11,"eq","","",7,[[["curve",4]],["bool",15]]],[11,"eq","","",8,[[["eckey",3]],["bool",15]]],[11,"ne","","",8,[[["eckey",3]],["bool",15]]],[11,"as_ref","rc_crypto::digest","",16,[[]]],[11,"as_ref","rc_crypto::hmac","",23,[[]]],[11,"from","rc_crypto::error","",19,[[["error",3]]]],[11,"from","","",19,[[["tryfrominterror",3]]]],[11,"from","","",21,[[["errorkind",4]],["error",3]]],[11,"from","","",21,[[["tryfrominterror",3]]]],[11,"from","","",21,[[["error",3]]]],[11,"clone","rc_crypto::digest","",16,[[],["digest",3]]],[11,"clone","rc_crypto::hmac","",23,[[],["signature",3]]],[11,"eq","rc_crypto::agreement","",9,[[["algorithm",3]],["bool",15]]],[11,"ne","","",9,[[["algorithm",3]],["bool",15]]],[11,"fmt","rc_crypto::error","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"source","","",19,[[],[["option",4],["error",8]]]],[11,"generate_ephemeral_keypair","rc_crypto::ece_crypto","",30,[[],[["error",4],["result",4],["box",3]]]],[11,"import_key_pair","","",30,[[["eckeycomponents",3]],[["error",4],["result",4],["box",3]]]],[11,"import_public_key","","",30,[[],[["error",4],["result",4],["box",3]]]],[11,"compute_ecdh_secret","","",30,[[["remotepublickey",8],["localkeypair",8]],[["result",4],["vec",3],["error",4]]]],[11,"hkdf_sha256","","",30,[[["usize",15]],[["result",4],["vec",3],["error",4]]]],[11,"aes_gcm_128_encrypt","","",30,[[],[["result",4],["vec",3],["error",4]]]],[11,"aes_gcm_128_decrypt","","",30,[[],[["result",4],["vec",3],["error",4]]]],[11,"random_bytes","","",30,[[],[["error",4],["result",4]]]],[11,"as_raw","","",18,[[],[["result",4],["vec",3],["error",4]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"raw_components","","",17,[[],[["error",4],["result",4],["eckeycomponents",3]]]],[11,"pub_as_raw","","",17,[[],[["result",4],["vec",3],["error",4]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"rand_bytes","rc_crypto::hawk_crypto","",31,[[],[["result",4],["cryptoerror",4]]]],[11,"new_key","","",31,[[["digestalgorithm",4]],[["box",3],["cryptoerror",4],["result",4]]]],[11,"constant_time_compare","","",31,[[],["bool",15]]],[11,"new_hasher","","",31,[[["digestalgorithm",4]],[["box",3],["result",4],["cryptoerror",4]]]],[11,"sign","rc_crypto::hmac","",24,[[],[["cryptoerror",4],["result",4],["vec",3]]]],[11,"update","rc_crypto::hawk_crypto","",22,[[],[["result",4],["cryptoerror",4]]]],[11,"finish","","",22,[[],[["cryptoerror",4],["result",4],["vec",3]]]],[11,"get_field_len","rc_crypto::agreement","",7,[[],["u32",15]]],[11,"new","","",8,[[["curve",4]],["eckey",3]]],[11,"from_coordinates","","",8,[[["curve",4]],[["result",4],["eckey",3],["error",3]]]],[11,"curve","","",8,[[],["curve",4]]],[11,"public_key","","",8,[[]]],[11,"private_key","","",8,[[]]]],"p":[[3,"Aad"],[3,"Nonce"],[3,"OpeningKey"],[3,"SealingKey"],[3,"Key"],[3,"Algorithm"],[4,"Direction"],[4,"Curve"],[3,"EcKey"],[3,"Algorithm"],[3,"KeyPair"],[3,"PublicKey"],[3,"UnparsedPublicKey"],[3,"PrivateKey"],[3,"InputKeyMaterial"],[4,"HashAlgorithm"],[3,"Digest"],[3,"RcCryptoLocalKeyPair"],[3,"RcCryptoRemotePublicKey"],[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[3,"NssHasher"],[3,"Signature"],[3,"SigningKey"],[3,"VerificationKey"],[3,"VerificationAlgorithm"],[3,"UnparsedPublicKey"],[3,"Ephemeral"],[3,"Static"],[3,"RcCryptoCryptographer"],[3,"RcCryptoCryptographer"]]},\
"rc_log_ffi":{"doc":"This crate allows users from the other side of the FFI to …","i":[[0,"ios","rc_log_ffi","",null,null],[6,"LogCallback","rc_log_ffi::ios","Type of the log callback provided to us by swift. Takes …",null,null],[3,"LogAdapterState","","",null,null],[12,"stop","","",0,null],[3,"Logger","","",null,null],[12,"callback","","",1,null],[12,"stop","","",1,null],[11,"init","","",0,[[["logcallback",6]]]],[0,"settable_log","rc_log_ffi","",null,null],[3,"SettableLog","rc_log_ffi::settable_log","",null,null],[12,"inner","","",2,null],[3,"SETTABLE_LOG","","",null,null],[12,"__private_field","","",3,null],[11,"set","","",2,[[["log",8],["box",3]]]],[11,"unset","","",2,[[]]],[5,"init_once","","",null,[[]]],[5,"set_logger","","",null,[[["log",8],["box",3]]]],[5,"unset_logger","","",null,[[]]],[5,"string_to_cstring_lossy","rc_log_ffi","",null,[[["string",3]],["cstring",3]]],[4,"LogLevel","","",null,null],[13,"VERBOSE","","",4,null],[13,"DEBUG","","",4,null],[13,"INFO","","",4,null],[13,"WARN","","",4,null],[13,"ERROR","","",4,null],[11,"from_level_and_message","","Equivalent to the <code>into()</code> conversion but avoids reporting …",4,[[["str",15],["level",4]]]],[5,"rc_log_adapter_create","","",null,[[["logcallback",6],["externerror",3]]]],[5,"level_filter_from_i32","","",null,[[["i32",15]],["levelfilter",4]]],[5,"rc_log_adapter_set_max_level","","",null,[[["externerror",3],["i32",15]]]],[5,"rc_log_adapter_destroy","","SafetyUnsafe because it frees it\'s argument.",null,[[]]],[5,"rc_log_adapter_test__log_msg","","",null,[[["ffistr",3]]]],[5,"rc_log_adapter_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[11,"from","rc_log_ffi::ios","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","rc_log_ffi::settable_log","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","rc_log_ffi","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","rc_log_ffi::ios","",0,[[]]],[11,"from","rc_log_ffi","",4,[[["level",4]]]],[11,"clone","","",4,[[],["loglevel",4]]],[11,"eq","","",4,[[["loglevel",4]],["bool",15]]],[11,"deref","rc_log_ffi::settable_log","",3,[[],["settablelog",3]]],[11,"fmt","rc_log_ffi","",4,[[["formatter",3]],["result",6]]],[11,"initialize","rc_log_ffi::settable_log","",3,[[]]],[11,"enabled","rc_log_ffi::ios","",1,[[["metadata",3]],["bool",15]]],[11,"flush","","",1,[[]]],[11,"log","","",1,[[["record",3]]]],[11,"enabled","rc_log_ffi::settable_log","",2,[[["metadata",3]],["bool",15]]],[11,"flush","","",2,[[]]],[11,"log","","",2,[[["record",3]]]],[11,"ffi_default","rc_log_ffi::ios","",0,[[]]],[11,"into_ffi_value","","",0,[[]]]],"p":[[3,"LogAdapterState"],[3,"Logger"],[3,"SettableLog"],[3,"SETTABLE_LOG"],[4,"LogLevel"]]},\
"restmail_client":{"doc":"","i":[[0,"error","restmail_client","",null,null],[4,"RestmailClientError","restmail_client::error","",null,null],[13,"NotARestmailEmail","","",0,null],[13,"HitRetryMax","","",0,null],[13,"JsonError","","",0,null],[13,"Disconnect","","",0,null],[13,"RequestError","","",0,null],[6,"Result","restmail_client","",null,null],[5,"find_email","","For a given restmail email, find the first email that …",null,[[["u8",15],["str",15]],[["result",4],["emailjson",4],["restmailclienterror",4]]]],[5,"clear_mailbox","","",null,[[["str",15]],[["result",4],["restmailclienterror",4]]]],[5,"username_from_email","","",null,[[["str",15]],[["result",4],["string",3],["restmailclienterror",4]]]],[5,"url_for_email","","",null,[[["str",15]],[["result",4],["url",3],["restmailclienterror",4]]]],[11,"from","restmail_client::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"RestmailClientError"]]},\
"sql_support":{"doc":"","i":[[0,"conn_ext","sql_support","",null,null],[3,"Conn","sql_support::conn_ext","",null,null],[12,"0","","",0,null],[8,"ConnExt","","This trait exists so that we can use these helpers on …",null,null],[10,"conn","","The method you need to implement to opt in to all of this.",1,[[],["connection",3]]],[11,"set_pragma","","Set the value of the pragma on the main database. Returns …",1,[[["str",15]],["sqlresult",6]]],[11,"prepare_maybe_cached","","Get a cached or uncached statement based on a flag.",1,[[["bool",15],["str",15]],[["sqlresult",6],["maybecached",4]]]],[11,"execute_all","","Execute all the provided statements.",1,[[],["sqlresult",6]]],[11,"execute_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",1,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"execute_named_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",1,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"query_one","","Execute a query that returns a single result column, and …",1,[[["str",15]],[["sqlresult",6],["fromsql",8]]]],[11,"try_query_one","","Execute a query that returns 0 or 1 result columns, …",1,[[["bool",15],["str",15]],[["option",4],["sqlresult",6]]]],[11,"query_row_and_then_named","","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> …",1,[[["bool",15],["str",15]],["result",4]]],[11,"query_rows_and_then_named","","Helper for when you\'d like to get a Vec of all the rows …",1,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_and_then_named_cached","","Helper for when you\'d like to get a Vec of all the rows …",1,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_into","","Like <code>query_rows_and_then_named</code>, but works if you want a …",1,[[["str",15]],["result",4]]],[11,"query_rows_into_cached","","Same as <code>query_rows_into</code>, but caches the stmt if possible.",1,[[["str",15]],["result",4]]],[11,"try_query_row","","Like <code>query_row_and_then_named</code> but returns None instead of …",1,[[["bool",15],["str",15]],[["option",4],["result",4]]]],[11,"unchecked_transaction","","",1,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[11,"unchecked_transaction_imm","","Begin <code>unchecked_transaction</code> with …",1,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[3,"UncheckedTransaction","","rusqlite, in an attempt to save us from ourselves, needs …",null,null],[12,"conn","","",2,null],[12,"started_at","","",2,null],[12,"finished","","",2,null],[11,"new","","Begin a new unchecked transaction. Cannot be nested, but …",2,[[["connection",3],["transactionbehavior",4]],["sqlresult",6]]],[11,"commit","","Consumes and commits an unchecked transaction.",2,[[],["sqlresult",6]]],[11,"rollback","","Consumes and rolls back an unchecked transaction.",2,[[],["sqlresult",6]]],[11,"rollback_","","",2,[[],["sqlresult",6]]],[11,"finish_","","",2,[[],["sqlresult",6]]],[5,"query_rows_and_then_named","","",null,[[["str",15],["bool",15],["connection",3]],["result",4]]],[0,"each_chunk","sql_support","",null,null],[5,"default_max_variable_number","sql_support::each_chunk","Returns SQLITE_LIMIT_VARIABLE_NUMBER as read from an …",null,[[],["usize",15]]],[5,"each_chunk","","Helper for the case where you have a <code>&[impl ToSql]</code> of …",null,[[],["result",4]]],[5,"each_chunk_mapped","","A version of <code>each_chunk</code> for the case when the conversion …",null,[[],["result",4]]],[5,"each_sized_chunk","","",null,[[["usize",15]],["result",4]]],[5,"each_sized_chunk_mapped","","Utility to help perform batched updates, inserts, …",null,[[["usize",15]],["result",4]]],[0,"interrupt","sql_support","",null,null],[3,"SqlInterruptHandle","sql_support::interrupt","A Sync+Send type which can be used allow someone to …",null,null],[12,"db_handle","","",3,null],[12,"interrupt_counter","","",3,null],[11,"new","","",3,[[["arc",3],["atomicusize",3],["interrupthandle",3]],["sqlinterrupthandle",3]]],[11,"interrupt","","",3,[[]]],[3,"SqlInterruptScope","","A helper that can be used to determine if an interrupt …",null,null],[12,"start_value","","",4,null],[12,"ptr","","",4,null],[11,"new","","",4,[[["arc",3],["atomicusize",3]]]],[11,"err_if_interrupted","","Add this as an inherent method to reduce the amount of …",4,[[],[["result",4],["interrupted",3]]]],[0,"maybe_cached","sql_support","",null,null],[4,"MaybeCached","sql_support::maybe_cached","MaybeCached is a type that can be used to help abstract …",null,null],[13,"Uncached","","",5,null],[13,"Cached","","",5,null],[11,"prepare","","",5,[[["bool",15],["connection",3],["str",15]],[["result",6],["maybecached",4]]]],[0,"query_plan","sql_support","",null,null],[3,"QueryPlanStep","sql_support::query_plan","",null,null],[12,"node_id","","",6,null],[12,"parent_id","","",6,null],[12,"aux","","",6,null],[12,"detail","","",6,null],[3,"QueryPlan","","",null,null],[12,"query","","",7,null],[12,"plan","","",7,null],[11,"new","","",7,[[["str",15],["connection",3]],["sqlresult",6]]],[11,"print_pretty_tree","","",7,[[["formatter",3]],["result",6]]],[11,"print_tree","","",7,[[["formatter",3],["queryplanstep",3],["bool",15],["str",15]],["result",6]]],[5,"maybe_log_plan","","Log a query plan if the <code>log_query_plans</code> feature is …",null,[[["str",15],["connection",3]]]],[0,"repeat","sql_support","",null,null],[3,"RepeatDisplay","sql_support::repeat","Helper type for printing repeated strings more …",null,null],[12,"count","","",8,null],[12,"sep","","",8,null],[12,"fmt_one","","",8,null],[5,"repeat_display","","Construct a RepeatDisplay that will repeatedly call …",null,[[["usize",15],["str",15]],["repeatdisplay",3]]],[5,"repeat_sql_vars","","Returns a value that formats as <code>count</code> instances of <code>?</code> …",null,[[["usize",15]]]],[5,"repeat_sql_values","","Returns a value that formats as <code>count</code> instances of <code>(?)</code> …",null,[[["usize",15]]]],[5,"repeat_multi_values","","Returns a value that formats as <code>num_values</code> instances of …",null,[[["usize",15]]]],[3,"Conn","sql_support","",null,null],[12,"0","","",0,null],[8,"ConnExt","","This trait exists so that we can use these helpers on …",null,null],[10,"conn","","The method you need to implement to opt in to all of this.",1,[[],["connection",3]]],[11,"set_pragma","sql_support::conn_ext","Set the value of the pragma on the main database. Returns …",1,[[["str",15]],["sqlresult",6]]],[11,"prepare_maybe_cached","","Get a cached or uncached statement based on a flag.",1,[[["bool",15],["str",15]],[["sqlresult",6],["maybecached",4]]]],[11,"execute_all","","Execute all the provided statements.",1,[[],["sqlresult",6]]],[11,"execute_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",1,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"execute_named_cached","","Equivalent to <code>Connection::execute_named</code> but caches the …",1,[[["str",15]],[["usize",15],["sqlresult",6]]]],[11,"query_one","","Execute a query that returns a single result column, and …",1,[[["str",15]],[["sqlresult",6],["fromsql",8]]]],[11,"try_query_one","","Execute a query that returns 0 or 1 result columns, …",1,[[["bool",15],["str",15]],[["option",4],["sqlresult",6]]]],[11,"query_row_and_then_named","","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> …",1,[[["bool",15],["str",15]],["result",4]]],[11,"query_rows_and_then_named","","Helper for when you\'d like to get a Vec of all the rows …",1,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_and_then_named_cached","","Helper for when you\'d like to get a Vec of all the rows …",1,[[["str",15]],[["vec",3],["result",4]]]],[11,"query_rows_into","","Like <code>query_rows_and_then_named</code>, but works if you want a …",1,[[["str",15]],["result",4]]],[11,"query_rows_into_cached","","Same as <code>query_rows_into</code>, but caches the stmt if possible.",1,[[["str",15]],["result",4]]],[11,"try_query_row","","Like <code>query_row_and_then_named</code> but returns None instead of …",1,[[["bool",15],["str",15]],[["option",4],["result",4]]]],[11,"unchecked_transaction","","",1,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[11,"unchecked_transaction_imm","","Begin <code>unchecked_transaction</code> with …",1,[[],[["sqlresult",6],["uncheckedtransaction",3]]]],[3,"UncheckedTransaction","sql_support","rusqlite, in an attempt to save us from ourselves, needs …",null,null],[12,"conn","","",2,null],[12,"started_at","","",2,null],[12,"finished","","",2,null],[5,"default_max_variable_number","","Returns SQLITE_LIMIT_VARIABLE_NUMBER as read from an …",null,[[],["usize",15]]],[5,"each_chunk","","Helper for the case where you have a <code>&[impl ToSql]</code> of …",null,[[],["result",4]]],[5,"each_chunk_mapped","","A version of <code>each_chunk</code> for the case when the conversion …",null,[[],["result",4]]],[5,"each_sized_chunk","","",null,[[["usize",15]],["result",4]]],[5,"each_sized_chunk_mapped","","Utility to help perform batched updates, inserts, …",null,[[["usize",15]],["result",4]]],[3,"SqlInterruptHandle","","A Sync+Send type which can be used allow someone to …",null,null],[12,"db_handle","","",3,null],[12,"interrupt_counter","","",3,null],[3,"SqlInterruptScope","","A helper that can be used to determine if an interrupt …",null,null],[12,"start_value","","",4,null],[12,"ptr","","",4,null],[4,"MaybeCached","","MaybeCached is a type that can be used to help abstract …",null,null],[13,"Uncached","","",5,null],[13,"Cached","","",5,null],[3,"QueryPlanStep","","",null,null],[12,"node_id","","",6,null],[12,"parent_id","","",6,null],[12,"aux","","",6,null],[12,"detail","","",6,null],[3,"QueryPlan","","",null,null],[12,"query","","",7,null],[12,"plan","","",7,null],[5,"maybe_log_plan","","Log a query plan if the <code>log_query_plans</code> feature is …",null,[[["str",15],["connection",3]]]],[3,"RepeatDisplay","","Helper type for printing repeated strings more …",null,null],[12,"count","","",8,null],[12,"sep","","",8,null],[12,"fmt_one","","",8,null],[5,"repeat_display","","Construct a RepeatDisplay that will repeatedly call …",null,[[["usize",15],["str",15]],["repeatdisplay",3]]],[5,"repeat_sql_vars","","Returns a value that formats as <code>count</code> instances of <code>?</code> …",null,[[["usize",15]]]],[5,"repeat_sql_values","","Returns a value that formats as <code>count</code> instances of <code>(?)</code> …",null,[[["usize",15]]]],[5,"repeat_multi_values","","Returns a value that formats as <code>num_values</code> instances of …",null,[[["usize",15]]]],[5,"escape_string_for_pragma","","In PRAGMA foo=\'bar\', <code>\'bar\'</code> must be a constant string (it …",null,[[["str",15]],["string",3]]],[11,"from","sql_support::conn_ext","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","sql_support::interrupt","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","sql_support::maybe_cached","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","sql_support::query_plan","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"get_hash","","",6,[[],["u64",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"from","sql_support::repeat","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"conn","sql_support::conn_ext","",2,[[],["connection",3]]],[11,"drop","","",2,[[]]],[11,"from","sql_support::maybe_cached","",5,[[["statement",3]]]],[11,"from","","",5,[[["cachedstatement",3]]]],[11,"clone","sql_support::query_plan","",6,[[],["queryplanstep",3]]],[11,"clone","","",7,[[],["queryplan",3]]],[11,"clone","sql_support::repeat","",8,[[],["repeatdisplay",3]]],[11,"eq","sql_support::query_plan","",6,[[["queryplanstep",3]],["bool",15]]],[11,"ne","","",6,[[["queryplanstep",3]],["bool",15]]],[11,"eq","","",7,[[["queryplan",3]],["bool",15]]],[11,"ne","","",7,[[["queryplan",3]],["bool",15]]],[11,"deref","sql_support::conn_ext","",2,[[],["connection",3]]],[11,"deref","sql_support::maybe_cached","",5,[[],["statement",3]]],[11,"deref_mut","","",5,[[],["statement",3]]],[11,"fmt","sql_support::interrupt","",4,[[["formatter",3]],["result",6]]],[11,"fmt","sql_support::query_plan","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","sql_support::repeat","",8,[[["formatter",3]],["result",6]]],[11,"fmt","sql_support::query_plan","",7,[[["formatter",3]],["result",6]]],[11,"fmt","sql_support::repeat","",8,[[["formatter",3]],["result",6]]],[11,"hash","sql_support::query_plan","",6,[[]]],[11,"hash","","",7,[[]]],[11,"ffi_default","sql_support::interrupt","",3,[[]]],[11,"into_ffi_value","","",3,[[]]],[11,"was_interrupted","","",4,[[],["bool",15]]]],"p":[[3,"Conn"],[8,"ConnExt"],[3,"UncheckedTransaction"],[3,"SqlInterruptHandle"],[3,"SqlInterruptScope"],[4,"MaybeCached"],[3,"QueryPlanStep"],[3,"QueryPlan"],[3,"RepeatDisplay"]]},\
"sync15":{"doc":"","i":[[0,"bso_record","sync15","",null,null],[0,"as_json","sync15::bso_record","",null,null],[5,"serialize","sync15::bso_record::as_json","",null,[[],["result",4]]],[5,"deserialize","","",null,[[],["result",4]]],[3,"Payload","sync15::bso_record","Represents the decrypted payload in a Bso. Provides a …",null,null],[12,"id","","",0,null],[12,"deleted","","",0,null],[12,"data","","",0,null],[3,"BsoRecord","","",null,null],[12,"id","","",1,null],[12,"collection","","",1,null],[12,"modified","","",1,null],[12,"sortindex","","",1,null],[12,"ttl","","",1,null],[12,"payload","","",1,null],[11,"map_payload","","",1,[[],["bsorecord",3]]],[11,"with_payload","","",1,[[],["bsorecord",3]]],[11,"new_record","","",1,[[["string",3]],["bsorecord",3]]],[11,"try_map_payload","","",1,[[],[["result",4],["bsorecord",3]]]],[11,"map_payload_or","","",1,[[],[["option",4],["bsorecord",3]]]],[11,"into_timestamped_payload","","",1,[[]]],[11,"transpose","","Helper to improve ergonomics for handling records that …",1,[[],[["option",4],["bsorecord",3]]]],[11,"transpose","","",1,[[],[["result",4],["bsorecord",3]]]],[11,"from_payload","","",1,[[["payload",3]]]],[6,"EncryptedBso","","",null,null],[6,"CleartextBso","","",null,null],[3,"EncryptedPayload","","",null,null],[12,"iv","","",2,null],[12,"hmac","","",2,null],[12,"ciphertext","","",2,null],[3,"EMPTY_ENCRYPTED_PAYLOAD_SIZE","","",null,null],[12,"__private_field","","",3,null],[11,"serialized_len","","",2,[[],["usize",15]]],[11,"decrypt_and_parse_payload","","",2,[[["keybundle",3]],["result",6]]],[11,"from_cleartext_payload","","",2,[[["keybundle",3]],["result",6]]],[11,"decrypt","","",1,[[["keybundle",3]],[["cleartextbso",6],["result",6]]]],[11,"decrypt_as","","",1,[[["keybundle",3]],[["result",6],["bsorecord",3]]]],[11,"decrypt","","",4,[[["keybundle",3]],[["cleartextbso",6],["result",6]]]],[11,"decrypt_as","","",4,[[["keybundle",3]],[["result",6],["bsorecord",3]]]],[11,"encrypt","","",1,[[["keybundle",3]],[["result",6],["encryptedbso",6]]]],[11,"into_record","","",1,[[],[["result",6],["bsorecord",3]]]],[11,"encrypt","","",5,[[["keybundle",3]],[["result",6],["encryptedbso",6]]]],[11,"into_record","","",5,[[],[["result",6],["bsorecord",3]]]],[0,"changeset","sync15","",null,null],[6,"IncomingChangeset","sync15::changeset","",null,null],[6,"OutgoingChangeset","","",null,null],[3,"RecordChangeset","","",null,null],[12,"changes","","",6,null],[12,"timestamp","","For GETs, the last sync timestamp that should be …",6,null],[12,"collection","","",6,null],[5,"encrypt_outgoing","","",null,[[["keybundle",3],["outgoingchangeset",6]],[["vec",3],["result",6]]]],[5,"fetch_incoming","","",null,[[["sync15storageclient",3],["collstate",3],["collectionrequest",3]],[["result",6],["incomingchangeset",6]]]],[3,"CollectionUpdate","","",null,null],[12,"client","","",7,null],[12,"state","","",7,null],[12,"collection","","",7,null],[12,"xius","","",7,null],[12,"to_update","","",7,null],[12,"fully_atomic","","",7,null],[11,"new","","",7,[[["collstate",3],["servertimestamp",3],["sync15storageclient",3],["bool",15],["str",15],["vec",3],["cow",4],["encryptedbso",6]],["collectionupdate",3]]],[11,"new_from_changeset","","",7,[[["collstate",3],["outgoingchangeset",6],["sync15storageclient",3],["bool",15]],[["result",6],["collectionupdate",3]]]],[11,"upload","","Returns a list of the IDs that failed if …",7,[[],[["uploadinfo",3],["result",6]]]],[0,"client","sync15","",null,null],[4,"Sync15ClientResponse","sync15::client","A response from a GET request on a Sync15StorageClient, …",null,null],[13,"Success","","",8,null],[12,"status","sync15::client::Sync15ClientResponse","",9,null],[12,"record","","",9,null],[12,"last_modified","","",9,null],[12,"route","","",9,null],[13,"Error","sync15::client","",8,null],[5,"parse_seconds","","",null,[[["str",15]],[["u32",15],["option",4]]]],[11,"from_response","","",8,[[["response",3],["arc",3]],["result",6]]],[11,"create_storage_error","","",8,[[],["errorkind",4]]],[3,"Sync15StorageClientInit","","",null,null],[12,"key_id","","",10,null],[12,"access_token","","",10,null],[12,"tokenserver_url","","",10,null],[8,"SetupStorageClient","","A trait containing the methods required to run through …",null,null],[10,"fetch_info_configuration","","",11,[[],[["result",6],["sync15clientresponse",4]]]],[10,"fetch_info_collections","","",11,[[],[["result",6],["sync15clientresponse",4]]]],[10,"fetch_meta_global","","",11,[[],[["sync15clientresponse",4],["result",6]]]],[10,"fetch_crypto_keys","","",11,[[],[["result",6],["sync15clientresponse",4]]]],[10,"put_meta_global","","",11,[[["metaglobalrecord",3],["servertimestamp",3]],[["result",6],["servertimestamp",3]]]],[10,"put_crypto_keys","","",11,[[["encryptedbso",6],["servertimestamp",3]],["result",6]]],[10,"wipe_all_remote","","",11,[[],["result",6]]],[3,"BackoffState","","",null,null],[12,"backoff_secs","","",12,null],[12,"retry_after_secs","","",12,null],[6,"BackoffListener","","",null,null],[5,"new_backoff_listener","","",null,[[],[["arc",3],["backoffstate",3]]]],[11,"note_backoff","","",12,[[["u32",15]]]],[11,"note_retry_after","","",12,[[["u32",15]]]],[11,"get_backoff_secs","","",12,[[],["u32",15]]],[11,"get_retry_after_secs","","",12,[[],["u32",15]]],[11,"get_required_wait","","",12,[[["bool",15]],[["option",4],["duration",3]]]],[11,"reset","","",12,[[]]],[3,"Sync15StorageClient","","",null,null],[12,"tsc","","",13,null],[12,"backoff","","",13,null],[11,"new","","",13,[[["sync15storageclientinit",3]],[["sync15storageclient",3],["result",6]]]],[11,"get_encrypted_records","","",13,[[["collectionrequest",3]],[["result",6],["sync15clientresponse",4]]]],[11,"authorized","","",13,[[["request",3]],[["request",3],["result",6]]]],[11,"build_request","","",13,[[["url",3],["method",4]],[["request",3],["result",6]]]],[11,"relative_storage_request","","",13,[[["method",4]],[["sync15clientresponse",4],["result",6]]]],[11,"exec_request","","",13,[[["request",3],["bool",15]],[["sync15clientresponse",4],["result",6]]]],[11,"collection_request","","",13,[[["collectionrequest",3],["method",4]],[["sync15clientresponse",4],["result",6]]]],[11,"new_post_queue","","",13,[[["postresponsehandler",8],["servertimestamp",3],["infoconfiguration",3],["str",15]],[["postqueue",3],["result",6]]]],[11,"put","","",13,[[["servertimestamp",3]],[["result",6],["servertimestamp",3]]]],[11,"hashed_uid","","",13,[[],[["result",6],["string",3]]]],[11,"wipe_remote_engine","","",13,[[["str",15]],["result",6]]],[3,"PostWrapper","","",null,null],[12,"client","","",14,null],[12,"coll","","",14,null],[0,"clients","sync15","",null,null],[0,"engine","sync15::clients","",null,null],[17,"COLLECTION_NAME","sync15::clients::engine","",null,null],[3,"Driver","","The driver for the clients engine. Internal; split out …",null,null],[12,"command_processor","","",15,null],[12,"interruptee","","",15,null],[12,"config","","",15,null],[12,"recent_clients","","",15,null],[11,"new","","",15,[[["interruptee",8],["commandprocessor",8],["infoconfiguration",3]],["driver",3]]],[11,"note_recent_client","","",15,[[["clientrecord",3]]]],[11,"sync","","",15,[[["bool",15],["incomingchangeset",6]],[["result",6],["outgoingchangeset",6]]]],[11,"current_client_record","","Builds a fresh client record for this device.",15,[[],["clientrecord",3]]],[11,"max_record_payload_size","","",15,[[],["usize",15]]],[11,"memcache_max_record_payload_size","","Collections stored in memcached (\\\"tabs\\\", \\\"clients\\\" or …",15,[[],["usize",15]]],[3,"Engine","","",null,null],[12,"command_processor","","",16,null],[12,"interruptee","","",16,null],[12,"recent_clients","","",16,null],[11,"new","","Creates a new clients engine that delegates to the given …",16,[[["interruptee",8],["commandprocessor",8]],["engine",3]]],[11,"sync","","Syncs the clients collection. This works a little …",16,[[["sync15storageclient",3],["keybundle",3],["globalstate",3],["bool",15]],["result",6]]],[11,"fetch_incoming","","",16,[[["sync15storageclient",3],["collstate",3]],[["result",6],["incomingchangeset",6]]]],[11,"local_client_id","","",16,[[],["string",3]]],[11,"get_client_data","","",16,[[],["clientdata",3]]],[0,"record","sync15::clients","",null,null],[3,"ClientRecord","sync15::clients::record","The serialized form of a client record.",null,null],[12,"id","","",17,null],[12,"name","","",17,null],[12,"typ","","",17,null],[12,"commands","","",17,null],[12,"fxa_device_id","","",17,null],[12,"version","","<code>version</code>, <code>protocols</code>, <code>formfactor</code>, <code>os</code>, <code>appPackage</code>, …",17,null],[12,"protocols","","",17,null],[12,"form_factor","","",17,null],[12,"os","","",17,null],[12,"app_package","","",17,null],[12,"application","","",17,null],[12,"device","","The model of the device, like \\\"iPhone\\\" or \\\"iPod touch\\\" on …",17,null],[12,"ttl","","",17,null],[3,"CommandRecord","","The serialized form of a client command.",null,null],[12,"name","","The command name. This is a string, not an enum, because …",18,null],[12,"args","","Extra, command-specific arguments. Note that we must send …",18,null],[12,"flow_id","","Some commands, like repair, send a \\\"flow ID\\\" that other …",18,null],[11,"as_command","","Converts a serialized command into one that we can apply. …",18,[[],[["option",4],["command",4]]]],[0,"ser","sync15::clients","",null,null],[3,"WriteCount","sync15::clients::ser","A writer that counts the number of bytes it\'s asked to …",null,null],[12,"0","","",19,null],[11,"len","","",19,[[],["usize",15]]],[5,"compute_serialized_size","","Returns the size of the given value, in bytes, when …",null,[[],[["result",6],["usize",15]]]],[5,"shrink_to_fit","","Truncates <code>list</code> to fit within <code>payload_size_max_bytes</code> when …",null,[[["usize",15],["vec",3]],["result",6]]],[3,"Engine","sync15::clients","",null,null],[12,"command_processor","","",16,null],[12,"interruptee","","",16,null],[12,"recent_clients","","",16,null],[3,"ClientData","","Argument to Store::prepare_for_sync. See comment there …",null,null],[12,"local_client_id","","",20,null],[12,"recent_clients","","",20,null],[4,"DeviceType","","The type of a client. Please keep these variants in sync …",null,null],[13,"Desktop","","",21,null],[13,"Mobile","","",21,null],[13,"Tablet","","",21,null],[13,"VR","","",21,null],[13,"TV","","",21,null],[3,"RemoteClient","","Information about a remote client in the clients …",null,null],[12,"fxa_device_id","","",22,null],[12,"device_name","","",22,null],[12,"device_type","","",22,null],[17,"CLIENTS_TTL","","",null,null],[17,"CLIENTS_TTL_REFRESH","","",null,null],[8,"CommandProcessor","","A command processor applies incoming commands like wipes …",null,null],[10,"settings","","",23,[[],["settings",3]]],[10,"fetch_outgoing_commands","","Fetches commands to send to other clients. An error …",23,[[],[["hashset",3],["result",6]]]],[10,"apply_incoming_command","","Applies a command sent to this client from another …",23,[[["command",4]],[["commandstatus",4],["result",6]]]],[4,"CommandStatus","","Indicates if a command was applied successfully, ignored, …",null,null],[13,"Applied","","",24,null],[13,"Ignored","","",24,null],[13,"Unsupported","","",24,null],[3,"Settings","","Information about this device to include in its client …",null,null],[12,"fxa_device_id","","The FxA device ID of this client, also used as this …",25,null],[12,"device_name","","The name of this client. This should match the client\'s …",25,null],[12,"device_type","","The type of this client: mobile, tablet, desktop, or …",25,null],[4,"Command","","",null,null],[13,"WipeAll","","Erases all local data.",26,null],[13,"Wipe","","Erases all local data for a specific engine.",26,null],[13,"ResetAll","","Resets local sync state for all engines.",26,null],[13,"Reset","","Resets local sync state for a specific engine.",26,null],[0,"coll_state","sync15","",null,null],[3,"CollSyncIds","sync15::coll_state","",null,null],[12,"global","","",27,null],[12,"coll","","",27,null],[4,"EngineSyncAssociation","","Defines how an engine is associated with a particular set …",null,null],[13,"Disconnected","","This store is disconnected (although it may be connected …",28,null],[13,"Connected","","Sync is connected, and has the following sync IDs.",28,null],[3,"CollState","","Holds state for a collection. In general, only the …",null,null],[12,"config","","",29,null],[12,"last_modified","","",29,null],[12,"key","","",29,null],[4,"LocalCollState","","",null,null],[13,"Unknown","","The state is unknown, with the EngineSyncAssociation the …",30,null],[12,"assoc","sync15::coll_state::LocalCollState","",31,null],[13,"Declined","sync15::coll_state","The engine has been declined. This is a \\\"terminal\\\" state.",30,null],[13,"NoSuchCollection","","There\'s no such collection in meta/global. We could …",30,null],[13,"SyncIdChanged","","Either the global or collection sync ID has changed - we …",30,null],[12,"ids","sync15::coll_state::LocalCollState","",32,null],[13,"Ready","sync15::coll_state","The collection is ready to sync.",30,null],[12,"key","sync15::coll_state::LocalCollState","",33,null],[3,"LocalCollStateMachine","sync15::coll_state","",null,null],[12,"global_state","","",34,null],[12,"root_key","","",34,null],[11,"advance","","",34,[[["localcollstate",4],["syncengine",8]],[["result",6],["localcollstate",4]]]],[11,"run_and_run_as_farst_as_you_can","","",34,[[["syncengine",8]],[["option",4],["result",6]]]],[11,"get_state","","",34,[[["globalstate",3],["keybundle",3],["syncengine",8]],[["option",4],["result",6]]]],[0,"collection_keys","sync15","",null,null],[3,"CollectionKeys","sync15::collection_keys","",null,null],[12,"timestamp","","",35,null],[12,"default","","",35,null],[12,"collections","","",35,null],[11,"new_random","","",35,[[],[["result",6],["collectionkeys",3]]]],[11,"from_encrypted_bso","","",35,[[["keybundle",3],["encryptedbso",6]],[["result",6],["collectionkeys",3]]]],[11,"to_encrypted_bso","","",35,[[["keybundle",3]],[["encryptedbso",6],["result",6]]]],[11,"key_for_collection","","",35,[[["str",15]],["keybundle",3]]],[0,"error","sync15","",null,null],[4,"ErrorResponse","sync15::error","This enum is to discriminate <code>StorageHttpError</code>, and not …",null,null],[13,"NotFound","","",36,null],[12,"route","sync15::error::ErrorResponse","",37,null],[13,"Unauthorized","sync15::error","",36,null],[12,"route","sync15::error::ErrorResponse","",38,null],[13,"PreconditionFailed","sync15::error","",36,null],[12,"route","sync15::error::ErrorResponse","",39,null],[13,"ServerError","sync15::error","",36,null],[12,"route","sync15::error::ErrorResponse","",40,null],[12,"status","","",40,null],[13,"RequestFailed","sync15::error","",36,null],[12,"route","sync15::error::ErrorResponse","",41,null],[12,"status","","",41,null],[4,"ErrorKind","sync15::error","",null,null],[13,"BadKeyLength","","",42,null],[13,"HmacMismatch","","",42,null],[13,"TokenserverHttpError","","",42,null],[13,"StorageHttpError","","",42,null],[13,"BackoffError","","",42,null],[13,"RecordTooLargeError","","",42,null],[13,"RecordUploadFailed","","",42,null],[13,"StorageResetError","","Used for things like a node reassignment or an unexpected …",42,null],[13,"UnacceptableUrl","","",42,null],[13,"MissingServerTimestamp","","",42,null],[13,"ServerBatchProblem","","",42,null],[13,"SetupRace","","",42,null],[13,"ClientUpgradeRequired","","",42,null],[13,"SetupRequired","","",42,null],[13,"StoreError","","",42,null],[13,"CryptoError","","",42,null],[13,"Base64Decode","","",42,null],[13,"JsonError","","",42,null],[13,"BadCleartextUtf8","","",42,null],[13,"RequestError","","",42,null],[13,"UnexpectedStatus","","",42,null],[13,"HawkError","","",42,null],[13,"MalformedUrl","","",42,null],[13,"Interrupted","","",42,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",43,null],[12,"backtrace","","",43,null],[11,"new","","",43,[[["errorkind",4]]]],[11,"get_backtrace","","",43,[[],[["mutex",3],["option",4]]]],[3,"Error","","",null,null],[12,"0","","",44,null],[11,"kind","","",44,[[],["errorkind",4]]],[11,"backtrace","","",44,[[],[["mutex",3],["option",4]]]],[11,"get_backoff","","",44,[[],[["option",4],["systemtime",3]]]],[0,"key_bundle","sync15","",null,null],[3,"KeyBundle","sync15::key_bundle","",null,null],[12,"enc_key","","",45,null],[12,"mac_key","","",45,null],[11,"new","","Construct a key bundle from the already-decoded encrypt …",45,[[["vec",3],["u8",15]],[["result",6],["keybundle",3]]]],[11,"new_random","","",45,[[],[["result",6],["keybundle",3]]]],[11,"from_ksync_bytes","","",45,[[],[["result",6],["keybundle",3]]]],[11,"from_ksync_base64","","",45,[[["str",15]],[["result",6],["keybundle",3]]]],[11,"from_base64","","",45,[[["str",15]],[["result",6],["keybundle",3]]]],[11,"encryption_key","","",45,[[]]],[11,"hmac_key","","",45,[[]]],[11,"to_b64_array","","",45,[[]]],[11,"decrypt","","Decrypt the provided ciphertext with the given iv, and …",45,[[["str",15]],[["string",3],["result",6]]]],[11,"encrypt_bytes_with_iv","","Encrypt using the provided IV.",45,[[],["result",6]]],[11,"encrypt_bytes_rand_iv","","Generate a random iv and encrypt with it. Return both the …",45,[[],["result",6]]],[11,"encrypt_with_iv","","",45,[[["str",15]],["result",6]]],[11,"encrypt_rand_iv","","",45,[[["str",15]],["result",6]]],[0,"migrate_state","sync15","",null,null],[5,"extract_v1_state","sync15::migrate_state","Given a string persisted as our old GlobalState V1 …",null,[[["string",3],["str",15],["option",4]]]],[0,"record_types","sync15","",null,null],[3,"MetaGlobalEngine","sync15::record_types","",null,null],[12,"version","","",46,null],[12,"sync_id","","",46,null],[3,"MetaGlobalRecord","","",null,null],[12,"sync_id","","",47,null],[12,"storage_version","","",47,null],[12,"engines","","",47,null],[12,"declined","","",47,null],[3,"CryptoKeysRecord","","",null,null],[12,"id","","",48,null],[12,"collection","","",48,null],[12,"default","","",48,null],[12,"collections","","",48,null],[0,"request","sync15","",null,null],[3,"CollectionRequest","sync15::request","",null,null],[12,"collection","","",49,null],[12,"full","","",49,null],[12,"ids","","",49,null],[12,"limit","","",49,null],[12,"older","","",49,null],[12,"newer","","",49,null],[12,"order","","",49,null],[12,"commit","","",49,null],[12,"batch","","",49,null],[4,"RequestOrder","","",null,null],[13,"Oldest","","",50,null],[13,"Newest","","",50,null],[13,"Index","","",50,null],[3,"LimitTracker","","Manages a pair of (byte, count) limits for a PostQueue, …",null,null],[12,"max_bytes","","",51,null],[12,"max_records","","",51,null],[12,"cur_bytes","","",51,null],[12,"cur_records","","",51,null],[11,"new","","",51,[[["usize",15]],["limittracker",3]]],[11,"clear","","",51,[[]]],[11,"can_add_record","","",51,[[["usize",15]],["bool",15]]],[11,"can_never_add","","",51,[[["usize",15]],["bool",15]]],[11,"record_added","","",51,[[["usize",15]]]],[3,"InfoConfiguration","","",null,null],[12,"max_request_bytes","","The maximum size in bytes of the overall HTTP request …",52,null],[12,"max_post_records","","The maximum number of records that can be uploaded to a …",52,null],[12,"max_post_bytes","","The maximum combined size in bytes of the record payloads …",52,null],[12,"max_total_records","","The maximum total number of records that can be uploaded …",52,null],[12,"max_total_bytes","","The maximum total combined size in bytes of the record …",52,null],[12,"max_record_payload_bytes","","The maximum size of an individual BSO payload, in bytes.",52,null],[5,"default_max_request_bytes","","",null,[[],["usize",15]]],[5,"default_max_record_payload_bytes","","",null,[[],["usize",15]]],[3,"InfoCollections","","",null,null],[12,"0","","",53,null],[11,"new","","",53,[[["hashmap",3],["string",3],["servertimestamp",3]],["infocollections",3]]],[3,"UploadResult","","",null,null],[12,"batch","","",54,null],[12,"failed","","Maps record id => why failed",54,null],[12,"success","","Vec of ids",54,null],[6,"PostResponse","","",null,null],[4,"BatchState","","",null,null],[13,"Unsupported","","",55,null],[13,"NoBatch","","",55,null],[13,"InBatch","","",55,null],[3,"PostQueue","","",null,null],[12,"poster","","",56,null],[12,"on_response","","",56,null],[12,"post_limits","","",56,null],[12,"batch_limits","","",56,null],[12,"max_payload_bytes","","",56,null],[12,"max_request_bytes","","",56,null],[12,"queued","","",56,null],[12,"batch","","",56,null],[12,"last_modified","","",56,null],[8,"BatchPoster","","",null,null],[10,"post","","Note: Last argument (reference to the batch poster) is …",57,[[["postqueue",3],["vec",3],["servertimestamp",3],["u8",15],["string",3],["option",4],["bool",15]],[["result",6],["sync15clientresponse",4]]]],[8,"PostResponseHandler","","",null,null],[10,"handle_response","","",58,[[["bool",15],["sync15clientresponse",4],["uploadresult",3]],["result",6]]],[3,"NormalResponseHandler","","",null,null],[12,"failed_ids","","",59,null],[12,"successful_ids","","",59,null],[12,"allow_failed","","",59,null],[12,"pending_failed","","",59,null],[12,"pending_success","","",59,null],[11,"new","","",59,[[["bool",15]],["normalresponsehandler",3]]],[11,"new","","",56,[[["infoconfiguration",3],["servertimestamp",3]],["postqueue",3]]],[11,"in_batch","","",56,[[],["bool",15]]],[11,"enqueue","","",56,[[["encryptedbso",6]],[["result",6],["bool",15]]]],[11,"flush","","",56,[[["bool",15]],["result",6]]],[3,"UploadInfo","","",null,null],[12,"successful_ids","","",60,null],[12,"failed_ids","","",60,null],[12,"modified_timestamp","","",60,null],[11,"completed_upload_info","","",56,[[],["uploadinfo",3]]],[0,"state","sync15","",null,null],[17,"STORAGE_VERSION","sync15::state","",null,null],[17,"DEFAULT_ENGINES","","Maps names to storage versions for engines to include in …",null,null],[17,"DEFAULT_DECLINED","","",null,null],[4,"PersistedGlobalState","","State that we require the app to persist to storage for …",null,null],[13,"V2","","V1 was when we persisted the entire GlobalState, keys and …",61,null],[12,"declined","sync15::state::PersistedGlobalState","",62,null],[3,"EngineChangesNeeded","sync15::state","",null,null],[12,"local_resets","","",63,null],[12,"remote_wipes","","",63,null],[3,"RemoteEngineState","","",null,null],[12,"info_collections","","",64,null],[12,"declined","","",64,null],[3,"EngineStateInput","","",null,null],[12,"local_declined","","",65,null],[12,"remote","","",65,null],[12,"user_changes","","",65,null],[3,"EngineStateOutput","","",null,null],[12,"declined","","",66,null],[12,"changes_needed","","",66,null],[5,"compute_engine_states","","",null,[[["enginestateinput",3]],["enginestateoutput",3]]],[11,"set_declined","","",61,[[["vec",3],["string",3]]]],[11,"get_declined","","",61,[[]]],[3,"GlobalState","","Holds global Sync state, including server upload limits, …",null,null],[12,"config","","",67,null],[12,"collections","","",67,null],[12,"global","","",67,null],[12,"global_timestamp","","",67,null],[12,"keys","","",67,null],[5,"new_global","","Creates a fresh <code>meta/global</code> record, using the default …",null,[[["persistedglobalstate",4]],["metaglobalrecord",3]]],[5,"fixup_meta_global","","",null,[[["metaglobalrecord",3]],["bool",15]]],[3,"SetupStateMachine","","",null,null],[12,"client","","",68,null],[12,"root_key","","",68,null],[12,"pgs","","",68,null],[12,"allowed_states","","",68,null],[12,"sequence","","",68,null],[12,"engine_updates","","",68,null],[12,"interruptee","","",68,null],[12,"changes_needed","","",68,null],[11,"for_full_sync","","Creates a state machine for a \\\"classic\\\" Sync 1.5 client …",68,[[["interruptee",8],["persistedglobalstate",4],["option",4],["setupstorageclient",8],["keybundle",3],["hashmap",3]],["setupstatemachine",3]]],[11,"for_fast_sync","","Creates a state machine for a fast sync, which only uses …",68,[[["interruptee",8],["persistedglobalstate",4],["option",4],["setupstorageclient",8],["keybundle",3],["hashmap",3]],["setupstatemachine",3]]],[11,"for_readonly_sync","","Creates a state machine for a read-only sync, where the …",68,[[["interruptee",8],["persistedglobalstate",4],["setupstorageclient",8],["keybundle",3]],["setupstatemachine",3]]],[11,"with_allowed_states","","",68,[[["persistedglobalstate",4],["vec",3],["setupstorageclient",8],["keybundle",3],["str",15],["interruptee",8],["option",4],["hashmap",3]],["setupstatemachine",3]]],[11,"advance","","",68,[[["setupstate",4]],[["setupstate",4],["result",6]]]],[11,"run_to_ready","","Runs through the state machine to the ready state.",68,[[["option",4],["globalstate",3]],[["result",6],["globalstate",3]]]],[4,"SetupState","","States in the remote setup process. TODO(lina): Add link …",null,null],[13,"Initial","","",69,null],[13,"InitialWithConfig","","",69,null],[12,"config","sync15::state::SetupState","",70,null],[13,"InitialWithInfo","sync15::state","",69,null],[12,"config","sync15::state::SetupState","",71,null],[12,"collections","","",71,null],[13,"InitialWithMetaGlobal","sync15::state","",69,null],[12,"config","sync15::state::SetupState","",72,null],[12,"collections","","",72,null],[12,"global","","",72,null],[12,"global_timestamp","","",72,null],[13,"WithPreviousState","sync15::state","",69,null],[12,"old_state","sync15::state::SetupState","",73,null],[13,"Ready","sync15::state","",69,null],[12,"state","sync15::state::SetupState","",74,null],[13,"FreshStartRequired","sync15::state","",69,null],[12,"config","sync15::state::SetupState","",75,null],[11,"label","sync15::state","",69,[[],["str",15]]],[5,"is_same_timestamp","","Whether we should skip fetching an item. Used when we …",null,[[["infocollections",3],["str",15],["servertimestamp",3]],["bool",15]]],[0,"status","sync15","",null,null],[4,"ServiceStatus","sync15::status","The general status of sync - should probably be moved to …",null,null],[13,"Ok","","Everything is fine.",76,null],[13,"NetworkError","","Some general network issue.",76,null],[13,"ServiceError","","Some apparent issue with the servers.",76,null],[13,"AuthenticationError","","Some external FxA action needs to be taken.",76,null],[13,"BackedOff","","We declined to do anything for backoff or rate-limiting …",76,null],[13,"Interrupted","","We were interrupted.",76,null],[13,"OtherError","","Something else - you need to check the logs for more …",76,null],[11,"from_err","","",76,[[["error",3]],["servicestatus",4]]],[3,"SyncResult","","The result of a sync request. This too is from the \\\"sync …",null,null],[12,"service_status","","The general health.",77,null],[12,"declined","","The set of declined engines, if we know them.",77,null],[12,"result","","The result of the sync.",77,null],[12,"engine_results","","The result for each engine. Note that we expect the <code>String</code>…",77,null],[12,"telemetry","","",77,null],[12,"next_sync_after","","",77,null],[5,"advance_backoff","","",null,[[["result",4],["systemtime",3]],["systemtime",3]]],[11,"set_sync_after","","",77,[[["duration",3]]]],[0,"sync","sync15","",null,null],[6,"IncomingChangeset","sync15::sync","",null,null],[8,"SyncEngine","","A \\\"sync engine\\\" is a thing that knows how to sync. It\'s …",null,null],[10,"collection_name","","",78,[[],[["cow",4],["str",15]]]],[11,"prepare_for_sync","","Prepares the engine for syncing. The tabs engine …",78,[[["fn",8]],[["result",4],["error",3]]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",78,[[["str",15]],[["result",4],["error",3]]]],[10,"apply_incoming","","<code>inbound</code> is a vector to support the case where …",78,[[["global",3],["vec",3],["recordchangeset",3],["engine",3]],[["error",3],["recordchangeset",3],["result",4]]]],[10,"sync_finished","","",78,[[["vec",3],["global",3],["guid",3],["servertimestamp",3]],[["result",4],["error",3]]]],[10,"get_collection_requests","","The engine is responsible for building the collection …",78,[[["servertimestamp",3]],[["result",4],["error",3],["vec",3]]]],[10,"get_sync_assoc","","Get persisted sync IDs. If they don\'t match the global …",78,[[],[["result",4],["enginesyncassociation",4],["error",3]]]],[10,"reset","","Reset the engine (and associated store) without wiping …",78,[[["enginesyncassociation",4]],[["result",4],["error",3]]]],[10,"wipe","","",78,[[],[["result",4],["error",3]]]],[5,"synchronize","","",null,[[["sync15storageclient",3],["keybundle",3],["engine",3],["globalstate",3],["bool",15],["interruptee",8],["syncengine",8]],[["result",4],["error",3]]]],[5,"synchronize_with_clients_engine","","",null,[[["keybundle",3],["engine",3],["option",4],["bool",15],["sync15storageclient",3],["engine",3],["globalstate",3],["interruptee",8],["syncengine",8]],[["result",4],["error",3]]]],[0,"sync_multiple","sync15","",null,null],[3,"ClientInfo","sync15::sync_multiple","Info about the client to use. We reuse the client unless …",null,null],[12,"client_init","","",79,null],[12,"client","","",79,null],[11,"new","","",79,[[["sync15storageclientinit",3]],[["result",4],["error",3]]]],[3,"MemoryCachedState","","Info we want callers to engine <em>in memory</em> for us so that …",null,null],[12,"last_client_info","","",80,null],[12,"last_global_state","","",80,null],[12,"next_sync_after","","",80,null],[12,"next_client_refresh_after","","",80,null],[11,"clear_sensitive_info","","",80,[[]]],[11,"get_next_sync_after","","",80,[[],[["option",4],["systemtime",3]]]],[11,"should_refresh_client","","",80,[[],["bool",15]]],[11,"note_client_refresh","","",80,[[]]],[5,"sync_multiple","","Sync multiple engines",null,[[["memorycachedstate",3],["sync15storageclientinit",3],["keybundle",3],["interruptee",8],["option",4],["option",4],["syncrequestinfo",3]],["syncresult",3]]],[5,"sync_multiple_with_command_processor","","Like <code>sync_multiple</code>, but specifies an optional command …",null,[[["memorycachedstate",3],["keybundle",3],["option",4],["option",4],["sync15storageclientinit",3],["interruptee",8],["option",4],["commandprocessor",8],["syncrequestinfo",3]],["syncresult",3]]],[3,"SyncRequestInfo","","This is essentially a bag of information that the sync …",null,null],[12,"engines_to_state_change","","",81,null],[12,"is_user_action","","",81,null],[3,"SyncMultipleDriver","","",null,null],[12,"command_processor","","",82,null],[12,"engines","","",82,null],[12,"storage_init","","",82,null],[12,"root_sync_key","","",82,null],[12,"interruptee","","",82,null],[12,"backoff","","",82,null],[12,"engines_to_state_change","","",82,null],[12,"result","","",82,null],[12,"persisted_global_state","","",82,null],[12,"mem_cached_state","","",82,null],[12,"ignore_soft_backoff","","",82,null],[12,"saw_auth_error","","",82,null],[11,"sync","","The actual worker for sync_multiple.",82,[[],[["result",4],["error",3]]]],[11,"was_interrupted","","",82,[[],["bool",15]]],[11,"sync_engines","","",82,[[["clientinfo",3],["engine",3],["option",4],["globalstate",3]],["synctelemetry",3]]],[11,"run_state_machine","","",82,[[["persistedglobalstate",4],["clientinfo",3]],[["error",3],["result",4],["globalstate",3]]]],[11,"wipe_or_reset_engines","","",82,[[["enginechangesneeded",3],["sync15storageclient",3]],[["result",4],["error",3]]]],[11,"prepare_client_info","","",82,[[],[["result",4],["error",3],["clientinfo",3]]]],[11,"prepare_persisted_state","","",82,[[],["persistedglobalstate",4]]],[0,"telemetry","sync15","Note: this mostly just reexports the things from …",null,null],[3,"Event","sync15::telemetry","A generic \\\"Event\\\" - suitable for all kinds of pings …",null,null],[12,"object","","",83,null],[12,"method","","",83,null],[12,"value","","",83,null],[12,"extra","","",83,null],[4,"SyncFailure","","A Sync failure.",null,null],[13,"Shutdown","","",84,null],[13,"Other","","",84,null],[12,"error","sync15::telemetry::SyncFailure","",85,null],[13,"Unexpected","sync15::telemetry","",84,null],[12,"error","sync15::telemetry::SyncFailure","",86,null],[13,"Auth","sync15::telemetry","",84,null],[12,"from","sync15::telemetry::SyncFailure","",87,null],[13,"Http","sync15::telemetry","",84,null],[12,"code","sync15::telemetry::SyncFailure","",88,null],[3,"EngineIncoming","sync15::telemetry","Incoming record for an engine\'s sync",null,null],[12,"applied","","",89,null],[12,"failed","","",89,null],[12,"new_failed","","",89,null],[12,"reconciled","","",89,null],[3,"EngineOutgoing","","Outgoing record for an engine\'s sync",null,null],[12,"sent","","",90,null],[12,"failed","","",90,null],[3,"Engine","","One engine\'s sync.",null,null],[12,"name","","",91,null],[12,"when_took","","",91,null],[12,"incoming","","",91,null],[12,"outgoing","","",91,null],[12,"failure","","",91,null],[12,"validation","","",91,null],[3,"Validation","","",null,null],[12,"version","","",92,null],[12,"problems","","",92,null],[12,"failure","","",92,null],[3,"Problem","","",null,null],[12,"name","","",93,null],[12,"count","","",93,null],[3,"SyncTelemetry","","A single sync. May have many engines, may have its own …",null,null],[12,"when_took","","",94,null],[12,"engines","","",94,null],[12,"failure","","",94,null],[3,"SyncTelemetryPing","","The Sync ping payload, as documented at …",null,null],[12,"version","","",95,null],[12,"uid","","",95,null],[12,"events","","",95,null],[12,"syncs","","",95,null],[0,"token","sync15","",null,null],[17,"RETRY_AFTER_DEFAULT_MS","sync15::token","",null,null],[3,"TokenserverToken","","",null,null],[12,"id","","",96,null],[12,"key","","",96,null],[12,"api_endpoint","","",96,null],[12,"uid","","",96,null],[12,"duration","","",96,null],[12,"hashed_fxa_uid","","",96,null],[3,"TokenFetchResult","","",null,null],[12,"token","","",97,null],[12,"server_timestamp","","",97,null],[8,"TokenFetcher","","",null,null],[10,"fetch_token","","",98,[[],[["result",6],["tokenfetchresult",3]]]],[10,"now","","",98,[[],["systemtime",3]]],[3,"TokenServerFetcher","","",null,null],[12,"server_url","","",99,null],[12,"access_token","","",99,null],[12,"key_id","","",99,null],[5,"fixup_server_url","","",null,[[["url",3]],["url",3]]],[11,"new","","",99,[[["url",3],["string",3]],["tokenserverfetcher",3]]],[3,"TokenContext","","",null,null],[12,"token","","",100,null],[12,"credentials","","",100,null],[12,"server_timestamp","","",100,null],[12,"valid_until","","",100,null],[11,"new","","",100,[[["credentials",3],["servertimestamp",3],["systemtime",3],["tokenservertoken",3]]]],[11,"is_valid","","",100,[[["systemtime",3]],["bool",15]]],[11,"authorization","","",100,[[["request",3]],[["string",3],["result",6]]]],[4,"TokenState","","",null,null],[13,"NoToken","","",101,null],[13,"Token","","",101,null],[13,"Failed","","",101,null],[13,"Backoff","","",101,null],[13,"NodeReassigned","","",101,null],[3,"TokenProviderImpl","","The generic TokenProvider implementation - long lived and …",null,null],[12,"fetcher","","",102,null],[12,"current_state","","",102,null],[11,"new","","",102,[[]]],[11,"fetch_context","","",102,[[],[["result",6],["tokencontext",3]]]],[11,"fetch_token","","",102,[[["option",4],["str",15]],["tokenstate",4]]],[11,"advance_state","","",102,[[["tokenstate",4]],[["option",4],["tokenstate",4]]]],[11,"with_token","","",102,[[],["result",6]]],[11,"hashed_uid","","",102,[[],[["string",3],["result",6]]]],[11,"authorization","","",102,[[["request",3]],[["string",3],["result",6]]]],[11,"api_endpoint","","",102,[[],[["string",3],["result",6]]]],[3,"TokenProvider","","",null,null],[12,"imp","","",103,null],[11,"new","","",103,[[["url",3],["string",3]],["result",6]]],[11,"hashed_uid","","",103,[[],[["string",3],["result",6]]]],[11,"authorization","","",103,[[["request",3]],[["string",3],["result",6]]]],[11,"api_endpoint","","",103,[[],[["string",3],["result",6]]]],[0,"util","sync15","",null,null],[3,"ServerTimestamp","sync15::util","Typesafe way to manage server timestamps without …",null,null],[12,"0","","",104,null],[5,"atomic_update_max","","Finds the maximum of the current value and the argument …",null,[[["u32",15],["atomicu32",3]]]],[5,"set_union","","",null,[[["hashset",3]],[["string",3],["hashset",3]]]],[5,"set_difference","","",null,[[["hashset",3]],[["string",3],["hashset",3]]]],[5,"set_intersection","","",null,[[["hashset",3]],[["string",3],["hashset",3]]]],[5,"partition_by_value","","",null,[[["hashmap",3]]]],[3,"BsoRecord","sync15","",null,null],[12,"id","","",1,null],[12,"collection","","",1,null],[12,"modified","","",1,null],[12,"sortindex","","",1,null],[12,"ttl","","",1,null],[12,"payload","","",1,null],[6,"CleartextBso","","",null,null],[6,"EncryptedBso","","",null,null],[3,"EncryptedPayload","","",null,null],[12,"iv","","",2,null],[12,"hmac","","",2,null],[12,"ciphertext","","",2,null],[3,"Payload","","Represents the decrypted payload in a Bso. Provides a …",null,null],[12,"id","","",0,null],[12,"deleted","","",0,null],[12,"data","","",0,null],[6,"IncomingChangeset","","",null,null],[6,"OutgoingChangeset","","",null,null],[3,"RecordChangeset","","",null,null],[12,"changes","","",6,null],[12,"timestamp","","For GETs, the last sync timestamp that should be …",6,null],[12,"collection","","",6,null],[8,"SetupStorageClient","","A trait containing the methods required to run through …",null,null],[10,"fetch_info_configuration","","",11,[[],[["result",6],["sync15clientresponse",4]]]],[10,"fetch_info_collections","","",11,[[],[["result",6],["sync15clientresponse",4]]]],[10,"fetch_meta_global","","",11,[[],[["sync15clientresponse",4],["result",6]]]],[10,"fetch_crypto_keys","","",11,[[],[["result",6],["sync15clientresponse",4]]]],[10,"put_meta_global","","",11,[[["metaglobalrecord",3],["servertimestamp",3]],[["result",6],["servertimestamp",3]]]],[10,"put_crypto_keys","","",11,[[["encryptedbso",6],["servertimestamp",3]],["result",6]]],[10,"wipe_all_remote","","",11,[[],["result",6]]],[4,"Sync15ClientResponse","","A response from a GET request on a Sync15StorageClient, …",null,null],[13,"Success","","",8,null],[12,"status","sync15::Sync15ClientResponse","",9,null],[12,"record","","",9,null],[12,"last_modified","","",9,null],[12,"route","","",9,null],[13,"Error","sync15","",8,null],[3,"Sync15StorageClient","","",null,null],[12,"tsc","","",13,null],[12,"backoff","","",13,null],[3,"Sync15StorageClientInit","","",null,null],[12,"key_id","","",10,null],[12,"access_token","","",10,null],[12,"tokenserver_url","","",10,null],[3,"CollState","","Holds state for a collection. In general, only the …",null,null],[12,"config","","",29,null],[12,"last_modified","","",29,null],[12,"key","","",29,null],[3,"CollSyncIds","","",null,null],[12,"global","","",27,null],[12,"coll","","",27,null],[4,"EngineSyncAssociation","","Defines how an engine is associated with a particular set …",null,null],[13,"Disconnected","","This store is disconnected (although it may be connected …",28,null],[13,"Connected","","Sync is connected, and has the following sync IDs.",28,null],[3,"CollectionKeys","","",null,null],[12,"timestamp","","",35,null],[12,"default","","",35,null],[12,"collections","","",35,null],[3,"Error","","",null,null],[12,"0","","",44,null],[4,"ErrorKind","","",null,null],[13,"BadKeyLength","","",42,null],[13,"HmacMismatch","","",42,null],[13,"TokenserverHttpError","","",42,null],[13,"StorageHttpError","","",42,null],[13,"BackoffError","","",42,null],[13,"RecordTooLargeError","","",42,null],[13,"RecordUploadFailed","","",42,null],[13,"StorageResetError","","Used for things like a node reassignment or an unexpected …",42,null],[13,"UnacceptableUrl","","",42,null],[13,"MissingServerTimestamp","","",42,null],[13,"ServerBatchProblem","","",42,null],[13,"SetupRace","","",42,null],[13,"ClientUpgradeRequired","","",42,null],[13,"SetupRequired","","",42,null],[13,"StoreError","","",42,null],[13,"CryptoError","","",42,null],[13,"Base64Decode","","",42,null],[13,"JsonError","","",42,null],[13,"BadCleartextUtf8","","",42,null],[13,"RequestError","","",42,null],[13,"UnexpectedStatus","","",42,null],[13,"HawkError","","",42,null],[13,"MalformedUrl","","",42,null],[13,"Interrupted","","",42,null],[6,"Result","","",null,null],[3,"KeyBundle","","",null,null],[12,"enc_key","","",45,null],[12,"mac_key","","",45,null],[5,"extract_v1_state","","Given a string persisted as our old GlobalState V1 …",null,[[["string",3],["str",15],["option",4]]]],[3,"CollectionRequest","","",null,null],[12,"collection","","",49,null],[12,"full","","",49,null],[12,"ids","","",49,null],[12,"limit","","",49,null],[12,"older","","",49,null],[12,"newer","","",49,null],[12,"order","","",49,null],[12,"commit","","",49,null],[12,"batch","","",49,null],[3,"GlobalState","","Holds global Sync state, including server upload limits, …",null,null],[12,"config","","",67,null],[12,"collections","","",67,null],[12,"global","","",67,null],[12,"global_timestamp","","",67,null],[12,"keys","","",67,null],[3,"SetupStateMachine","","",null,null],[12,"client","","",68,null],[12,"root_key","","",68,null],[12,"pgs","","",68,null],[12,"allowed_states","","",68,null],[12,"sequence","","",68,null],[12,"engine_updates","","",68,null],[12,"interruptee","","",68,null],[12,"changes_needed","","",68,null],[4,"ServiceStatus","","The general status of sync - should probably be moved to …",null,null],[13,"Ok","","Everything is fine.",76,null],[13,"NetworkError","","Some general network issue.",76,null],[13,"ServiceError","","Some apparent issue with the servers.",76,null],[13,"AuthenticationError","","Some external FxA action needs to be taken.",76,null],[13,"BackedOff","","We declined to do anything for backoff or rate-limiting …",76,null],[13,"Interrupted","","We were interrupted.",76,null],[13,"OtherError","","Something else - you need to check the logs for more …",76,null],[3,"SyncResult","","The result of a sync request. This too is from the \\\"sync …",null,null],[12,"service_status","","The general health.",77,null],[12,"declined","","The set of declined engines, if we know them.",77,null],[12,"result","","The result of the sync.",77,null],[12,"engine_results","","The result for each engine. Note that we expect the <code>String</code>…",77,null],[12,"telemetry","","",77,null],[12,"next_sync_after","","",77,null],[5,"synchronize","","",null,[[["sync15storageclient",3],["keybundle",3],["engine",3],["globalstate",3],["bool",15],["interruptee",8],["syncengine",8]],[["result",4],["error",3]]]],[8,"SyncEngine","","A \\\"sync engine\\\" is a thing that knows how to sync. It\'s …",null,null],[10,"collection_name","","",78,[[],[["cow",4],["str",15]]]],[11,"prepare_for_sync","","Prepares the engine for syncing. The tabs engine …",78,[[["fn",8]],[["result",4],["error",3]]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",78,[[["str",15]],[["result",4],["error",3]]]],[10,"apply_incoming","","<code>inbound</code> is a vector to support the case where …",78,[[["global",3],["vec",3],["recordchangeset",3],["engine",3]],[["error",3],["recordchangeset",3],["result",4]]]],[10,"sync_finished","","",78,[[["vec",3],["global",3],["guid",3],["servertimestamp",3]],[["result",4],["error",3]]]],[10,"get_collection_requests","","The engine is responsible for building the collection …",78,[[["servertimestamp",3]],[["result",4],["error",3],["vec",3]]]],[10,"get_sync_assoc","","Get persisted sync IDs. If they don\'t match the global …",78,[[],[["result",4],["enginesyncassociation",4],["error",3]]]],[10,"reset","","Reset the engine (and associated store) without wiping …",78,[[["enginesyncassociation",4]],[["result",4],["error",3]]]],[10,"wipe","","",78,[[],[["result",4],["error",3]]]],[5,"sync_multiple","","Sync multiple engines",null,[[["memorycachedstate",3],["sync15storageclientinit",3],["keybundle",3],["interruptee",8],["option",4],["option",4],["syncrequestinfo",3]],["syncresult",3]]],[5,"sync_multiple_with_command_processor","","Like <code>sync_multiple</code>, but specifies an optional command …",null,[[["memorycachedstate",3],["keybundle",3],["option",4],["option",4],["sync15storageclientinit",3],["interruptee",8],["option",4],["commandprocessor",8],["syncrequestinfo",3]],["syncresult",3]]],[3,"MemoryCachedState","","Info we want callers to engine <em>in memory</em> for us so that …",null,null],[12,"last_client_info","","",80,null],[12,"last_global_state","","",80,null],[12,"next_sync_after","","",80,null],[12,"next_client_refresh_after","","",80,null],[3,"SyncRequestInfo","","This is essentially a bag of information that the sync …",null,null],[12,"engines_to_state_change","","",81,null],[12,"is_user_action","","",81,null],[3,"ServerTimestamp","","Typesafe way to manage server timestamps without …",null,null],[12,"0","","",104,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","sync15::bso_record","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","sync15","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","sync15::changeset","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","sync15::client","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"get_hash","","",10,[[],["u64",15]]],[11,"vzip","","",10,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","sync15::clients::engine","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","sync15::clients::record","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"get_hash","","",17,[[],["u64",15]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"get_hash","","",18,[[],["u64",15]]],[11,"vzip","","",18,[[]]],[11,"from","sync15::clients::ser","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","sync15::clients","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"get_hash","","",21,[[],["u64",15]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"get_hash","","",22,[[],["u64",15]]],[11,"vzip","","",22,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"get_hash","","",24,[[],["u64",15]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"get_hash","","",25,[[],["u64",15]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"get_hash","","",26,[[],["u64",15]]],[11,"vzip","","",26,[[]]],[11,"from","sync15","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","sync15::coll_state","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","sync15::collection_keys","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","sync15::error","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","sync15::key_bundle","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"get_hash","","",45,[[],["u64",15]]],[11,"vzip","","",45,[[]]],[11,"from","sync15::record_types","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","sync15","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","sync15::request","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"get_hash","","",50,[[],["u64",15]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"get_hash","","",55,[[],["u64",15]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","sync15::state","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","sync15::status","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","sync15::sync_multiple","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","sync15::telemetry","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","sync15::token","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","sync15","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"ffi_default","sync15::telemetry","",95,[[]]],[11,"into_ffi_value","","",95,[[]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::clients","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::request","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::clients","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::telemetry","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15::request","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","sync15","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","sync15::request","",50,[[]]],[11,"hash","sync15::clients","",21,[[]]],[11,"hash","","",22,[[]]],[11,"partial_cmp","sync15::request","",50,[[["requestorder",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","sync15","",104,[[["servertimestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",104,[[["servertimestamp",3]],["bool",15]]],[11,"le","","",104,[[["servertimestamp",3]],["bool",15]]],[11,"gt","","",104,[[["servertimestamp",3]],["bool",15]]],[11,"ge","","",104,[[["servertimestamp",3]],["bool",15]]],[11,"serialize","sync15::telemetry","",95,[[],["result",4]]],[11,"serialize","sync15::clients","",21,[[],["result",4]]],[11,"serialize","sync15::telemetry","",89,[[],["result",4]]],[11,"serialize","","",90,[[],["result",4]]],[11,"serialize","sync15","",0,[[],["result",4]]],[11,"serialize","sync15::telemetry","",83,[[],["result",4]]],[11,"serialize","","",92,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",94,[[],["result",4]]],[11,"serialize","","",93,[[],["result",4]]],[11,"serialize","","",84,[[],["result",4]]],[11,"serialize","sync15","",104,[[],["result",4]]],[11,"default","sync15::telemetry","",92,[[],["validation",3]]],[11,"default","","",89,[[],["engineincoming",3]]],[11,"default","","",93,[[],["problem",3]]],[11,"default","","",90,[[],["engineoutgoing",3]]],[11,"default","sync15","",104,[[],["servertimestamp",3]]],[11,"default","sync15::telemetry","",94,[[],["synctelemetry",3]]],[11,"default","","",95,[[],["synctelemetryping",3]]],[11,"clone","sync15::clients","",21,[[],["devicetype",4]]],[11,"clone","sync15","",6,[[],["recordchangeset",3]]],[11,"clone","","",49,[[],["collectionrequest",3]]],[11,"clone","","",0,[[],["payload",3]]],[11,"clone","sync15::request","",50,[[],["requestorder",4]]],[11,"clone","sync15","",27,[[],["collsyncids",3]]],[11,"clone","sync15::clients","",22,[[],["remoteclient",3]]],[11,"clone","","",20,[[],["clientdata",3]]],[11,"clone","sync15","",104,[[],["servertimestamp",3]]],[11,"clone","","",28,[[],["enginesyncassociation",4]]],[11,"cmp","sync15::request","",50,[[["requestorder",4]],["ordering",4]]],[11,"deserialize","sync15","",0,[[],[["result",4],["payload",3]]]],[11,"deserialize","","",104,[[],[["result",4],["servertimestamp",3]]]],[11,"deserialize","sync15::clients","",21,[[],[["result",4],["devicetype",4]]]],[11,"eq","sync15","",27,[[["collsyncids",3]],["bool",15]]],[11,"ne","","",27,[[["collsyncids",3]],["bool",15]]],[11,"eq","","",0,[[["payload",3]],["bool",15]]],[11,"ne","","",0,[[["payload",3]],["bool",15]]],[11,"eq","sync15::request","",50,[[["requestorder",4]],["bool",15]]],[11,"eq","sync15","",49,[[["collectionrequest",3]],["bool",15]]],[11,"ne","","",49,[[["collectionrequest",3]],["bool",15]]],[11,"eq","","",28,[[["enginesyncassociation",4]],["bool",15]]],[11,"ne","","",28,[[["enginesyncassociation",4]],["bool",15]]],[11,"eq","","",104,[[["servertimestamp",3]],["bool",15]]],[11,"ne","","",104,[[["servertimestamp",3]],["bool",15]]],[11,"eq","sync15::clients","",21,[[["devicetype",4]],["bool",15]]],[11,"eq","","",22,[[["remoteclient",3]],["bool",15]]],[11,"ne","","",22,[[["remoteclient",3]],["bool",15]]],[11,"from_str","sync15","",104,[[["str",15]],[["servertimestamp",3],["result",4]]]],[11,"fetch_info_configuration","sync15::client","",13,[[],[["result",6],["sync15clientresponse",4]]]],[11,"fetch_info_collections","","",13,[[],[["result",6],["sync15clientresponse",4]]]],[11,"fetch_meta_global","","",13,[[],[["sync15clientresponse",4],["result",6]]]],[11,"fetch_crypto_keys","","",13,[[],[["result",6],["sync15clientresponse",4]]]],[11,"put_meta_global","","",13,[[["metaglobalrecord",3],["servertimestamp",3]],[["result",6],["servertimestamp",3]]]],[11,"put_crypto_keys","","",13,[[["encryptedbso",6],["servertimestamp",3]],["result",6]]],[11,"wipe_all_remote","","",13,[[],["result",6]]],[11,"post","","",14,[[["postqueue",3],["vec",3],["servertimestamp",3],["u8",15],["string",3],["option",4],["bool",15]],[["result",6],["sync15clientresponse",4]]]],[11,"handle_response","sync15::request","",59,[[["bool",15],["sync15clientresponse",4],["uploadresult",3]],["result",6]]],[11,"fetch_token","sync15::token","",99,[[],[["result",6],["tokenfetchresult",3]]]],[11,"now","","",99,[[],["systemtime",3]]],[11,"from","sync15::clients::record","",18,[[["command",4]],["commandrecord",3]]],[11,"from","sync15::clients","",22,[[["clientrecord",3]],["remoteclient",3]]],[11,"from","sync15::error","",42,[[["error",3]]]],[11,"from","","",42,[[["error",3]]]],[11,"from","","",42,[[["decodeerror",4]]]],[11,"from","","",42,[[["error",3]]]],[11,"from","","",42,[[["fromutf8error",3]]]],[11,"from","","",42,[[["error",4]]]],[11,"from","","",42,[[["unexpectedstatus",3]]]],[11,"from","","",42,[[["error",4]]]],[11,"from","","",42,[[["parseerror",4]]]],[11,"from","","",42,[[["interrupted",3]]]],[11,"from","","",44,[[["errorkind",4]],["error",3]]],[11,"from","","",44,[[["error",3]]]],[11,"from","","",44,[[["decodeerror",4]]]],[11,"from","","",44,[[["error",3]]]],[11,"from","","",44,[[["fromutf8error",3]]]],[11,"from","","",44,[[["error",4]]]],[11,"from","","",44,[[["unexpectedstatus",3]]]],[11,"from","","",44,[[["parseerror",4]]]],[11,"from","","",44,[[["error",3]]]],[11,"from","","",44,[[["interrupted",3]]]],[11,"from","","",44,[[["error",4]]]],[11,"from","","",42,[[["unacceptablebaseurl",3]],["errorkind",4]]],[11,"from","","",44,[[["unacceptablebaseurl",3]]]],[11,"from","sync15::telemetry","",84,[[["error",3]],["syncfailure",4]]],[11,"clone","sync15::bso_record","",1,[[],["bsorecord",3]]],[11,"clone","","",2,[[],["encryptedpayload",3]]],[11,"clone","sync15::changeset","",7,[[],["collectionupdate",3]]],[11,"clone","sync15::client","",8,[[],["sync15clientresponse",4]]],[11,"clone","","",10,[[],["sync15storageclientinit",3]]],[11,"clone","sync15::clients::record","",17,[[],["clientrecord",3]]],[11,"clone","","",18,[[],["commandrecord",3]]],[11,"clone","sync15::clients::ser","",19,[[],["writecount",3]]],[11,"clone","sync15::clients","",24,[[],["commandstatus",4]]],[11,"clone","","",25,[[],["settings",3]]],[11,"clone","","",26,[[],["command",4]]],[11,"clone","sync15::coll_state","",29,[[],["collstate",3]]],[11,"clone","sync15::collection_keys","",35,[[],["collectionkeys",3]]],[11,"clone","sync15::error","",36,[[],["errorresponse",4]]],[11,"clone","sync15::key_bundle","",45,[[],["keybundle",3]]],[11,"clone","sync15::record_types","",46,[[],["metaglobalengine",3]]],[11,"clone","","",47,[[],["metaglobalrecord",3]]],[11,"clone","","",48,[[],["cryptokeysrecord",3]]],[11,"clone","sync15::request","",51,[[],["limittracker",3]]],[11,"clone","","",52,[[],["infoconfiguration",3]]],[11,"clone","","",53,[[],["infocollections",3]]],[11,"clone","","",54,[[],["uploadresult",3]]],[11,"clone","","",55,[[],["batchstate",4]]],[11,"clone","","",59,[[],["normalresponsehandler",3]]],[11,"clone","","",60,[[],["uploadinfo",3]]],[11,"clone","sync15::state","",63,[[],["enginechangesneeded",3]]],[11,"clone","","",64,[[],["remoteenginestate",3]]],[11,"clone","","",65,[[],["enginestateinput",3]]],[11,"clone","","",66,[[],["enginestateoutput",3]]],[11,"clone","","",67,[[],["globalstate",3]]],[11,"clone","sync15::status","",76,[[],["servicestatus",4]]],[11,"clone","sync15::token","",96,[[],["tokenservertoken",3]]],[11,"default","sync15::client","",12,[[],["backoffstate",3]]],[11,"default","sync15::clients::ser","",19,[[],["writecount",3]]],[11,"default","sync15::request","",52,[[],["infoconfiguration",3]]],[11,"default","","",53,[[],["infocollections",3]]],[11,"default","sync15::state","",61,[[],["persistedglobalstate",4]]],[11,"default","","",63,[[],["enginechangesneeded",3]]],[11,"default","","",64,[[],["remoteenginestate",3]]],[11,"default","","",65,[[],["enginestateinput",3]]],[11,"default","","",66,[[],["enginestateoutput",3]]],[11,"default","sync15::sync_multiple","",80,[[],["memorycachedstate",3]]],[11,"default","","",81,[[],["syncrequestinfo",3]]],[11,"cmp","sync15::client","",10,[[["sync15storageclientinit",3]],["ordering",4]]],[11,"cmp","sync15::clients","",26,[[["command",4]],["ordering",4]]],[11,"cmp","sync15::request","",55,[[["batchstate",4]],["ordering",4]]],[11,"eq","sync15::bso_record","",1,[[["bsorecord",3]],["bool",15]]],[11,"ne","","",1,[[["bsorecord",3]],["bool",15]]],[11,"eq","sync15::client","",10,[[["sync15storageclientinit",3]],["bool",15]]],[11,"ne","","",10,[[["sync15storageclientinit",3]],["bool",15]]],[11,"eq","sync15::clients::record","",17,[[["clientrecord",3]],["bool",15]]],[11,"ne","","",17,[[["clientrecord",3]],["bool",15]]],[11,"eq","","",18,[[["commandrecord",3]],["bool",15]]],[11,"ne","","",18,[[["commandrecord",3]],["bool",15]]],[11,"eq","sync15::clients","",24,[[["commandstatus",4]],["bool",15]]],[11,"eq","","",25,[[["settings",3]],["bool",15]]],[11,"ne","","",25,[[["settings",3]],["bool",15]]],[11,"eq","","",26,[[["command",4]],["bool",15]]],[11,"ne","","",26,[[["command",4]],["bool",15]]],[11,"eq","sync15::collection_keys","",35,[[["collectionkeys",3]],["bool",15]]],[11,"ne","","",35,[[["collectionkeys",3]],["bool",15]]],[11,"eq","sync15::key_bundle","",45,[[["keybundle",3]],["bool",15]]],[11,"ne","","",45,[[["keybundle",3]],["bool",15]]],[11,"eq","sync15::record_types","",48,[[["cryptokeysrecord",3]],["bool",15]]],[11,"ne","","",48,[[["cryptokeysrecord",3]],["bool",15]]],[11,"eq","sync15::request","",55,[[["batchstate",4]],["bool",15]]],[11,"ne","","",55,[[["batchstate",4]],["bool",15]]],[11,"eq","sync15::state","",63,[[["enginechangesneeded",3]],["bool",15]]],[11,"ne","","",63,[[["enginechangesneeded",3]],["bool",15]]],[11,"eq","","",64,[[["remoteenginestate",3]],["bool",15]]],[11,"ne","","",64,[[["remoteenginestate",3]],["bool",15]]],[11,"eq","","",65,[[["enginestateinput",3]],["bool",15]]],[11,"ne","","",65,[[["enginestateinput",3]],["bool",15]]],[11,"eq","","",66,[[["enginestateoutput",3]],["bool",15]]],[11,"ne","","",66,[[["enginestateoutput",3]],["bool",15]]],[11,"eq","sync15::status","",76,[[["servicestatus",4]],["bool",15]]],[11,"eq","sync15::token","",96,[[["tokenservertoken",3]],["bool",15]]],[11,"ne","","",96,[[["tokenservertoken",3]],["bool",15]]],[11,"partial_cmp","sync15::client","",10,[[["sync15storageclientinit",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["sync15storageclientinit",3]],["bool",15]]],[11,"le","","",10,[[["sync15storageclientinit",3]],["bool",15]]],[11,"gt","","",10,[[["sync15storageclientinit",3]],["bool",15]]],[11,"ge","","",10,[[["sync15storageclientinit",3]],["bool",15]]],[11,"partial_cmp","sync15::clients","",26,[[["command",4]],[["option",4],["ordering",4]]]],[11,"lt","","",26,[[["command",4]],["bool",15]]],[11,"le","","",26,[[["command",4]],["bool",15]]],[11,"gt","","",26,[[["command",4]],["bool",15]]],[11,"ge","","",26,[[["command",4]],["bool",15]]],[11,"partial_cmp","sync15::request","",55,[[["batchstate",4]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["batchstate",4]],["bool",15]]],[11,"le","","",55,[[["batchstate",4]],["bool",15]]],[11,"gt","","",55,[[["batchstate",4]],["bool",15]]],[11,"ge","","",55,[[["batchstate",4]],["bool",15]]],[11,"deref","sync15::bso_record","",1,[[]]],[11,"deref","","",3,[[],["usize",15]]],[11,"deref","sync15::request","",53,[[],["hashmap",3]]],[11,"deref_mut","sync15::bso_record","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::changeset","",7,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::client","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::clients::record","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::clients","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::coll_state","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::collection_keys","",35,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::error","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::key_bundle","",45,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::record_types","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::request","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::state","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::status","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::sync_multiple","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::token","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","sync15::error","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"hash","sync15::client","",10,[[]]],[11,"hash","sync15::clients::record","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","sync15::clients","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","sync15::key_bundle","",45,[[]]],[11,"hash","sync15::request","",55,[[]]],[11,"source","sync15::error","",42,[[],[["option",4],["error",8]]]],[11,"write","sync15::clients::ser","",19,[[],[["usize",15],["result",6]]]],[11,"flush","","",19,[[],["result",6]]],[11,"initialize","sync15::bso_record","",3,[[]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","sync15::clients::record","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","sync15::record_types","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","sync15::request","",52,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","sync15::state","",61,[[],["result",4]]],[11,"deserialize","sync15::bso_record","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","sync15::clients::record","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","sync15::record_types","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","sync15::request","",52,[[],["result",4]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","sync15::state","",61,[[],["result",4]]],[11,"deserialize","sync15::token","",96,[[],["result",4]]],[11,"new_tombstone","sync15","",0,[[],["payload",3]]],[11,"new_tombstone_with_ttl","","",0,[[["u32",15]],["payload",3]]],[11,"with_sortindex","","",0,[[["i32",15]],["payload",3]]],[11,"with_auto_field","","\\\"Auto\\\" fields are fields like \'sortindex\' and \'ttl\', …",0,[[["option",4],["str",15]],["payload",3]]],[11,"take_auto_field","","",0,[[["str",15]],["option",4]]],[11,"id","","",0,[[],["str",15]]],[11,"is_tombstone","","",0,[[],["bool",15]]],[11,"from_json","","",0,[[["value",4]],[["result",4],["error",3],["payload",3]]]],[11,"into_record","","Deserializes the BSO payload into a specific record type <code>T</code>…",0,[[],[["error",3],["result",4]]]],[11,"from_record","","",0,[[],[["result",4],["error",3],["payload",3]]]],[11,"into_json_string","","",0,[[],["string",3]]],[11,"from_payload","sync15::bso_record","",5,[[["payload",3]]]],[11,"new","sync15","",6,[[["servertimestamp",3]],["recordchangeset",3]]],[11,"try_from_str","sync15::clients","",21,[[],[["option",4],["devicetype",4]]]],[11,"as_str","","",21,[[],["str",15]]],[11,"new","sync15","",49,[[],["collectionrequest",3]]],[11,"ids","","",49,[[],["collectionrequest",3]]],[11,"full","","",49,[[],["collectionrequest",3]]],[11,"older_than","","",49,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"newer_than","","",49,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"sort_by","","",49,[[["requestorder",4]],["collectionrequest",3]]],[11,"limit","","",49,[[["usize",15]],["collectionrequest",3]]],[11,"batch","","",49,[[["string",3],["option",4]],["collectionrequest",3]]],[11,"commit","","",49,[[["bool",15]],["collectionrequest",3]]],[11,"build_url","","",49,[[["url",3]],[["result",4],["unacceptablebaseurl",3],["url",3]]]],[11,"as_str","sync15::request","",50,[[],["str",15]]],[11,"new","sync15::telemetry","",83,[[["str",15]],["event",3]]],[11,"value","","",83,[[["str",15]],["event",3]]],[11,"extra","","",83,[[["str",15],["string",3]],["event",3]]],[11,"new","","",89,[[],["engineincoming",3]]],[11,"applied","","Increment the value of <code>applied</code> by <code>n</code>.",89,[[["u32",15]]]],[11,"failed","","Increment the value of <code>failed</code> by <code>n</code>.",89,[[["u32",15]]]],[11,"new_failed","","Increment the value of <code>new_failed</code> by <code>n</code>.",89,[[["u32",15]]]],[11,"reconciled","","Increment the value of <code>reconciled</code> by <code>n</code>.",89,[[["u32",15]]]],[11,"get_applied","","Get the value of <code>applied</code>. Mostly useful for testing.",89,[[],["u32",15]]],[11,"get_failed","","Get the value of <code>failed</code>. Mostly useful for testing.",89,[[],["u32",15]]],[11,"get_new_failed","","Get the value of <code>new_failed</code>. Mostly useful for testing.",89,[[],["u32",15]]],[11,"get_reconciled","","Get the value of <code>reconciled</code>. Mostly useful for testing.",89,[[],["u32",15]]],[11,"new","","",90,[[],["engineoutgoing",3]]],[11,"sent","","",90,[[["usize",15]]]],[11,"failed","","",90,[[["usize",15]]]],[11,"new","","",91,[[],["engine",3]]],[11,"incoming","","",91,[[["engineincoming",3]]]],[11,"outgoing","","",91,[[["engineoutgoing",3]]]],[11,"failure","","",91,[[]]],[11,"validation","","",91,[[["validation",3]]]],[11,"with_version","","",92,[[["u32",15]],["validation",3]]],[11,"problem","","",92,[[["usize",15],["str",15]],["validation",3]]],[11,"new","","",94,[[],["synctelemetry",3]]],[11,"engine","","",94,[[["engine",3]]]],[11,"failure","","",94,[[["syncfailure",4]]]],[11,"finished","","",94,[[]]],[11,"new","","",95,[[],["synctelemetryping",3]]],[11,"uid","","",95,[[["string",3]]]],[11,"sync","","",95,[[["synctelemetry",3]]]],[11,"event","","",95,[[["event",3]]]],[11,"from_float_seconds","sync15","",104,[[["f64",15]],["servertimestamp",3]]],[11,"from_millis","","",104,[[["i64",15]],["servertimestamp",3]]],[18,"EPOCH","","",104,null],[11,"duration_since","","Returns None if <code>other</code> is later than <code>self</code> (Duration may …",104,[[["servertimestamp",3]],[["option",4],["duration",3]]]],[11,"as_millis","","Get the milliseconds for the timestamp.",104,[[],["i64",15]]]],"p":[[3,"Payload"],[3,"BsoRecord"],[3,"EncryptedPayload"],[3,"EMPTY_ENCRYPTED_PAYLOAD_SIZE"],[6,"EncryptedBso"],[6,"CleartextBso"],[3,"RecordChangeset"],[3,"CollectionUpdate"],[4,"Sync15ClientResponse"],[13,"Success"],[3,"Sync15StorageClientInit"],[8,"SetupStorageClient"],[3,"BackoffState"],[3,"Sync15StorageClient"],[3,"PostWrapper"],[3,"Driver"],[3,"Engine"],[3,"ClientRecord"],[3,"CommandRecord"],[3,"WriteCount"],[3,"ClientData"],[4,"DeviceType"],[3,"RemoteClient"],[8,"CommandProcessor"],[4,"CommandStatus"],[3,"Settings"],[4,"Command"],[3,"CollSyncIds"],[4,"EngineSyncAssociation"],[3,"CollState"],[4,"LocalCollState"],[13,"Unknown"],[13,"SyncIdChanged"],[13,"Ready"],[3,"LocalCollStateMachine"],[3,"CollectionKeys"],[4,"ErrorResponse"],[13,"NotFound"],[13,"Unauthorized"],[13,"PreconditionFailed"],[13,"ServerError"],[13,"RequestFailed"],[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[3,"KeyBundle"],[3,"MetaGlobalEngine"],[3,"MetaGlobalRecord"],[3,"CryptoKeysRecord"],[3,"CollectionRequest"],[4,"RequestOrder"],[3,"LimitTracker"],[3,"InfoConfiguration"],[3,"InfoCollections"],[3,"UploadResult"],[4,"BatchState"],[3,"PostQueue"],[8,"BatchPoster"],[8,"PostResponseHandler"],[3,"NormalResponseHandler"],[3,"UploadInfo"],[4,"PersistedGlobalState"],[13,"V2"],[3,"EngineChangesNeeded"],[3,"RemoteEngineState"],[3,"EngineStateInput"],[3,"EngineStateOutput"],[3,"GlobalState"],[3,"SetupStateMachine"],[4,"SetupState"],[13,"InitialWithConfig"],[13,"InitialWithInfo"],[13,"InitialWithMetaGlobal"],[13,"WithPreviousState"],[13,"Ready"],[13,"FreshStartRequired"],[4,"ServiceStatus"],[3,"SyncResult"],[8,"SyncEngine"],[3,"ClientInfo"],[3,"MemoryCachedState"],[3,"SyncRequestInfo"],[3,"SyncMultipleDriver"],[3,"Event"],[4,"SyncFailure"],[13,"Other"],[13,"Unexpected"],[13,"Auth"],[13,"Http"],[3,"EngineIncoming"],[3,"EngineOutgoing"],[3,"Engine"],[3,"Validation"],[3,"Problem"],[3,"SyncTelemetry"],[3,"SyncTelemetryPing"],[3,"TokenserverToken"],[3,"TokenFetchResult"],[8,"TokenFetcher"],[3,"TokenServerFetcher"],[3,"TokenContext"],[4,"TokenState"],[3,"TokenProviderImpl"],[3,"TokenProvider"],[3,"ServerTimestamp"]]},\
"sync15_traits":{"doc":"sync15-traitsThe sync15-traits support component is a …","i":[[0,"bridged_engine","sync15_traits","",null,null],[8,"BridgedEngine","sync15_traits::bridged_engine","A BridgedEngine acts as a bridge between …",null,null],[16,"Error","","The type returned for errors.",0,null],[10,"last_sync","","Returns the last sync time, in milliseconds, for this …",0,[[],[["i64",15],["result",4]]]],[10,"set_last_sync","","Sets the last sync time, in milliseconds. This is called …",0,[[["i64",15]],["result",4]]],[10,"sync_id","","Returns the sync ID for this engine\'s collection. This is …",0,[[],[["result",4],["option",4]]]],[10,"reset_sync_id","","Resets the sync ID for this engine\'s collection, …",0,[[],[["result",4],["string",3]]]],[10,"ensure_current_sync_id","","Ensures that the locally stored sync ID for this engine\'s …",0,[[["str",15]],[["result",4],["string",3]]]],[10,"sync_started","","Indicates that the engine is about to start syncing. This …",0,[[],["result",4]]],[10,"store_incoming","","Stages a batch of incoming Sync records. This is called …",0,[[],["result",4]]],[10,"apply","","Applies all staged records, reconciling changes on both …",0,[[],[["result",4],["applyresults",3]]]],[10,"set_uploaded","","Indicates that the given record IDs were uploaded …",0,[[["i64",15]],["result",4]]],[10,"sync_finished","","Indicates that all records have been uploaded. At this …",0,[[],["result",4]]],[10,"reset","","Resets all local Sync state, including any change flags, …",0,[[],["result",4]]],[10,"wipe","","Erases all local user data for this collection, and any …",0,[[],["result",4]]],[3,"ApplyResults","","",null,null],[12,"envelopes","","List of records",1,null],[12,"num_reconciled","","The number of incoming records whose contents were merged …",1,null],[11,"new","","",1,[[["vec",3],["outgoingenvelope",3]]]],[3,"IncomingEnvelope","","An envelope for an incoming item, passed to …",null,null],[12,"id","","",2,null],[12,"modified","","",2,null],[12,"sortindex","","",2,null],[12,"ttl","","",2,null],[12,"cleartext","","",2,null],[11,"payload","","Parses and returns the record payload from this envelope. …",2,[[],[["result",4],["payload",3],["payloaderror",4]]]],[3,"OutgoingEnvelope","","An envelope for an outgoing item, returned from …",null,null],[12,"id","","",3,null],[12,"cleartext","","",3,null],[12,"sortindex","","",3,null],[12,"ttl","","",3,null],[4,"PayloadError","","An error that indicates a payload is invalid.",null,null],[13,"Invalid","","The payload contains invalid JSON.",4,null],[13,"MismatchedId","","The ID of the BSO in the envelope doesn\'t match the ID in …",4,null],[12,"envelope","sync15_traits::bridged_engine::PayloadError","",5,null],[12,"payload","","",5,null],[0,"changeset","sync15_traits","",null,null],[3,"RecordChangeset","sync15_traits::changeset","",null,null],[12,"changes","","",6,null],[12,"timestamp","","For GETs, the last sync timestamp that should be …",6,null],[12,"collection","","",6,null],[6,"IncomingChangeset","","",null,null],[6,"OutgoingChangeset","","",null,null],[11,"new","","",6,[[["servertimestamp",3]],["recordchangeset",3]]],[0,"client","sync15_traits","This module has to be here because of some hard-to-avoid …",null,null],[3,"ClientData","sync15_traits::client","Argument to Store::prepare_for_sync. See comment there …",null,null],[12,"local_client_id","","",7,null],[12,"recent_clients","","",7,null],[3,"RemoteClient","","Information about a remote client in the clients …",null,null],[12,"fxa_device_id","","",8,null],[12,"device_name","","",8,null],[12,"device_type","","",8,null],[4,"DeviceType","","The type of a client. Please keep these variants in sync …",null,null],[13,"Desktop","","",9,null],[13,"Mobile","","",9,null],[13,"Tablet","","",9,null],[13,"VR","","",9,null],[13,"TV","","",9,null],[11,"try_from_str","","",9,[[],[["devicetype",4],["option",4]]]],[11,"as_str","","",9,[[],["str",15]]],[0,"engine","sync15_traits","",null,null],[3,"CollSyncIds","sync15_traits::engine","",null,null],[12,"global","","",10,null],[12,"coll","","",10,null],[4,"EngineSyncAssociation","","Defines how an engine is associated with a particular set …",null,null],[13,"Disconnected","","This store is disconnected (although it may be connected …",11,null],[13,"Connected","","Sync is connected, and has the following sync IDs.",11,null],[8,"SyncEngine","","A \\\"sync engine\\\" is a thing that knows how to sync. It\'s …",null,null],[10,"collection_name","","",12,[[],[["cow",4],["str",15]]]],[11,"prepare_for_sync","","Prepares the engine for syncing. The tabs engine …",12,[[["fn",8]],["result",6]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",12,[[["str",15]],["result",6]]],[10,"apply_incoming","","<code>inbound</code> is a vector to support the case where …",12,[[["engine",3],["incomingchangeset",6],["vec",3]],[["outgoingchangeset",6],["result",6]]]],[10,"sync_finished","","",12,[[["servertimestamp",3],["vec",3],["guid",3]],["result",6]]],[10,"get_collection_requests","","The engine is responsible for building the collection …",12,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[10,"get_sync_assoc","","Get persisted sync IDs. If they don\'t match the global …",12,[[],[["result",6],["enginesyncassociation",4]]]],[10,"reset","","Reset the engine (and associated store) without wiping …",12,[[["enginesyncassociation",4]],["result",6]]],[10,"wipe","","",12,[[],["result",6]]],[0,"payload","sync15_traits","",null,null],[3,"Payload","sync15_traits::payload","Represents the decrypted payload in a Bso. Provides a …",null,null],[12,"id","","",13,null],[12,"deleted","","",13,null],[12,"data","","",13,null],[11,"new_tombstone","","",13,[[],["payload",3]]],[11,"new_tombstone_with_ttl","","",13,[[["u32",15]],["payload",3]]],[11,"with_sortindex","","",13,[[["i32",15]],["payload",3]]],[11,"with_auto_field","","\\\"Auto\\\" fields are fields like \'sortindex\' and \'ttl\', …",13,[[["option",4],["jsonvalue",4],["into",8],["str",15]],["payload",3]]],[11,"take_auto_field","","",13,[[["str",15]],["option",4]]],[11,"id","","",13,[[],["str",15]]],[11,"is_tombstone","","",13,[[],["bool",15]]],[11,"from_json","","",13,[[["jsonvalue",4]],[["result",4],["payload",3],["error",3]]]],[11,"into_record","","Deserializes the BSO payload into a specific record type <code>T</code>…",13,[[],[["result",4],["error",3]]]],[11,"from_record","","",13,[[["serialize",8]],[["result",4],["payload",3],["error",3]]]],[11,"into_json_string","","",13,[[],["string",3]]],[0,"request","sync15_traits","",null,null],[3,"CollectionRequest","sync15_traits::request","",null,null],[12,"collection","","",14,null],[12,"full","","",14,null],[12,"ids","","",14,null],[12,"limit","","",14,null],[12,"older","","",14,null],[12,"newer","","",14,null],[12,"order","","",14,null],[12,"commit","","",14,null],[12,"batch","","",14,null],[11,"new","","",14,[[],["collectionrequest",3]]],[11,"ids","","",14,[[],["collectionrequest",3]]],[11,"full","","",14,[[],["collectionrequest",3]]],[11,"older_than","","",14,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"newer_than","","",14,[[["servertimestamp",3]],["collectionrequest",3]]],[11,"sort_by","","",14,[[["requestorder",4]],["collectionrequest",3]]],[11,"limit","","",14,[[["usize",15]],["collectionrequest",3]]],[11,"batch","","",14,[[["option",4],["string",3]],["collectionrequest",3]]],[11,"commit","","",14,[[["bool",15]],["collectionrequest",3]]],[11,"build_query","","",14,[[["serializer",3]]]],[11,"build_url","","",14,[[["url",3]],[["url",3],["result",4],["unacceptablebaseurl",3]]]],[3,"UnacceptableBaseUrl","","",null,null],[12,"0","","",15,null],[4,"RequestOrder","","",null,null],[13,"Oldest","","",16,null],[13,"Newest","","",16,null],[13,"Index","","",16,null],[11,"as_str","","",16,[[],["str",15]]],[0,"server_timestamp","sync15_traits","",null,null],[3,"ServerTimestamp","sync15_traits::server_timestamp","Typesafe way to manage server timestamps without …",null,null],[12,"0","","",17,null],[11,"from_float_seconds","","",17,[[["f64",15]]]],[11,"from_millis","","",17,[[["i64",15]]]],[18,"EPOCH","","",17,null],[11,"duration_since","","Returns None if <code>other</code> is later than <code>self</code> (Duration may …",17,[[["servertimestamp",3]],[["option",4],["duration",3]]]],[11,"as_millis","","Get the milliseconds for the timestamp.",17,[[],["i64",15]]],[0,"telemetry","sync15_traits","Manage recording sync telemetry. Assumes some external …",null,null],[3,"WhenTook","sync15_traits::telemetry","What we record for \'when\' and \'took\' in a telemetry …",null,null],[12,"when","","",18,null],[12,"took","","",18,null],[4,"Stopwatch","","What we track while recording \'when\' and \'took. It …",null,null],[13,"Started","","",19,null],[13,"Finished","","",19,null],[11,"new","","",19,[[]]],[11,"finished","","",19,[[]]],[3,"Event","","A generic \\\"Event\\\" - suitable for all kinds of pings …",null,null],[12,"object","","",20,null],[12,"method","","",20,null],[12,"value","","",20,null],[12,"extra","","",20,null],[11,"new","","",20,[[["str",15]]]],[11,"value","","",20,[[["str",15]]]],[11,"extra","","",20,[[["str",15],["string",3]]]],[4,"SyncFailure","","A Sync failure.",null,null],[13,"Shutdown","","",21,null],[13,"Other","","",21,null],[12,"error","sync15_traits::telemetry::SyncFailure","",22,null],[13,"Unexpected","sync15_traits::telemetry","",21,null],[12,"error","sync15_traits::telemetry::SyncFailure","",23,null],[13,"Auth","sync15_traits::telemetry","",21,null],[12,"from","sync15_traits::telemetry::SyncFailure","",24,null],[13,"Http","sync15_traits::telemetry","",21,null],[12,"code","sync15_traits::telemetry::SyncFailure","",25,null],[3,"EngineIncoming","sync15_traits::telemetry","Incoming record for an engine\'s sync",null,null],[12,"applied","","",26,null],[12,"failed","","",26,null],[12,"new_failed","","",26,null],[12,"reconciled","","",26,null],[11,"new","","",26,[[]]],[11,"is_empty","","",26,[[["option",4]],["bool",15]]],[11,"applied","","Increment the value of <code>applied</code> by <code>n</code>.",26,[[["u32",15]]]],[11,"failed","","Increment the value of <code>failed</code> by <code>n</code>.",26,[[["u32",15]]]],[11,"new_failed","","Increment the value of <code>new_failed</code> by <code>n</code>.",26,[[["u32",15]]]],[11,"reconciled","","Increment the value of <code>reconciled</code> by <code>n</code>.",26,[[["u32",15]]]],[11,"get_applied","","Get the value of <code>applied</code>. Mostly useful for testing.",26,[[],["u32",15]]],[11,"get_failed","","Get the value of <code>failed</code>. Mostly useful for testing.",26,[[],["u32",15]]],[11,"get_new_failed","","Get the value of <code>new_failed</code>. Mostly useful for testing.",26,[[],["u32",15]]],[11,"get_reconciled","","Get the value of <code>reconciled</code>. Mostly useful for testing.",26,[[],["u32",15]]],[3,"EngineOutgoing","","Outgoing record for an engine\'s sync",null,null],[12,"sent","","",27,null],[12,"failed","","",27,null],[11,"new","","",27,[[]]],[11,"sent","","",27,[[["usize",15]]]],[11,"failed","","",27,[[["usize",15]]]],[3,"Engine","","One engine\'s sync.",null,null],[12,"name","","",28,null],[12,"when_took","","",28,null],[12,"incoming","","",28,null],[12,"outgoing","","",28,null],[12,"failure","","",28,null],[12,"validation","","",28,null],[11,"new","","",28,[[]]],[11,"incoming","","",28,[[["engineincoming",3]]]],[11,"outgoing","","",28,[[["engineoutgoing",3]]]],[11,"failure","","",28,[[]]],[11,"validation","","",28,[[["validation",3]]]],[11,"finished","","",28,[[]]],[3,"Validation","","",null,null],[12,"version","","",29,null],[12,"problems","","",29,null],[12,"failure","","",29,null],[11,"with_version","","",29,[[["u32",15]],["validation",3]]],[11,"problem","","",29,[[["usize",15],["str",15]]]],[3,"Problem","","",null,null],[12,"name","","",30,null],[12,"count","","",30,null],[3,"SyncTelemetry","","A single sync. May have many engines, may have its own …",null,null],[12,"when_took","","",31,null],[12,"engines","","",31,null],[12,"failure","","",31,null],[11,"new","","",31,[[]]],[11,"engine","","",31,[[["engine",3]]]],[11,"failure","","",31,[[["syncfailure",4]]]],[11,"finished","","",31,[[]]],[3,"SyncTelemetryPing","","The Sync ping payload, as documented at …",null,null],[12,"version","","",32,null],[12,"uid","","",32,null],[12,"events","","",32,null],[12,"syncs","","",32,null],[11,"new","","",32,[[]]],[11,"uid","","",32,[[["string",3]]]],[11,"sync","","",32,[[["synctelemetry",3]]]],[11,"event","","",32,[[["event",3]]]],[6,"IncomingChangeset","sync15_traits","",null,null],[6,"OutgoingChangeset","","",null,null],[3,"RecordChangeset","","",null,null],[12,"changes","","",6,null],[12,"timestamp","","For GETs, the last sync timestamp that should be …",6,null],[12,"collection","","",6,null],[3,"CollSyncIds","","",null,null],[12,"global","","",10,null],[12,"coll","","",10,null],[4,"EngineSyncAssociation","","Defines how an engine is associated with a particular set …",null,null],[13,"Disconnected","","This store is disconnected (although it may be connected …",11,null],[13,"Connected","","Sync is connected, and has the following sync IDs.",11,null],[8,"SyncEngine","","A \\\"sync engine\\\" is a thing that knows how to sync. It\'s …",null,null],[10,"collection_name","","",12,[[],[["cow",4],["str",15]]]],[11,"prepare_for_sync","sync15_traits::engine","Prepares the engine for syncing. The tabs engine …",12,[[["fn",8]],["result",6]]],[11,"set_local_encryption_key","","Tells the engine what the local encryption key is for the …",12,[[["str",15]],["result",6]]],[10,"apply_incoming","sync15_traits","<code>inbound</code> is a vector to support the case where …",12,[[["engine",3],["incomingchangeset",6],["vec",3]],[["outgoingchangeset",6],["result",6]]]],[10,"sync_finished","","",12,[[["servertimestamp",3],["vec",3],["guid",3]],["result",6]]],[10,"get_collection_requests","","The engine is responsible for building the collection …",12,[[["servertimestamp",3]],[["vec",3],["result",6]]]],[10,"get_sync_assoc","","Get persisted sync IDs. If they don\'t match the global …",12,[[],[["result",6],["enginesyncassociation",4]]]],[10,"reset","","Reset the engine (and associated store) without wiping …",12,[[["enginesyncassociation",4]],["result",6]]],[10,"wipe","","",12,[[],["result",6]]],[3,"Payload","","Represents the decrypted payload in a Bso. Provides a …",null,null],[12,"id","","",13,null],[12,"deleted","","",13,null],[12,"data","","",13,null],[3,"ServerTimestamp","","Typesafe way to manage server timestamps without …",null,null],[12,"0","","",17,null],[3,"Guid","","This is a type intended to be used to represent the guids …",null,null],[12,"0","","",33,null],[5,"skip_if_default","","",null,[[],["bool",15]]],[11,"from","sync15_traits::bridged_engine","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","sync15_traits::changeset","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","sync15_traits::client","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"get_hash","","",8,[[],["u64",15]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"get_hash","","",9,[[],["u64",15]]],[11,"vzip","","",9,[[]]],[11,"from","sync15_traits::engine","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","sync15_traits::payload","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","sync15_traits::request","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"get_hash","","",16,[[],["u64",15]]],[11,"vzip","","",16,[[]]],[11,"from","sync15_traits::server_timestamp","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","sync15_traits::telemetry","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","sync15_traits","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"get_hash","","",33,[[],["u64",15]]],[11,"vzip","","",33,[[]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref","","",33,[[],["str",15]]],[11,"column_result","","",33,[[["valueref",4]],[["result",4],["fromsqlerror",4],["guid",3]]]],[11,"hash","","",33,[[]]],[11,"partial_cmp","","",33,[[["guid",3]],[["option",4],["ordering",4]]]],[11,"serialize","","",33,[[],["result",4]]],[11,"from","","",33,[[["str",15]],["guid",3]]],[11,"from","","",33,[[],["guid",3]]],[11,"from","","",33,[[["str",15]],["guid",3]]],[11,"from","","",33,[[["string",3]],["guid",3]]],[11,"from","","",33,[[["u8",15],["vec",3],["global",3]],["guid",3]]],[11,"as_ref","","",33,[[],["str",15]]],[11,"as_ref","","",33,[[]]],[11,"default","","Create a default guid by calling <code>Guid::empty()</code>",33,[[],["guid",3]]],[11,"clone","","",33,[[],["guid",3]]],[11,"to_sql","","",33,[[],[["result",4],["error",4],["tosqloutput",4]]]],[11,"cmp","","",33,[[["guid",3]],["ordering",4]]],[11,"deserialize","","",33,[[],[["result",4],["guid",3]]]],[11,"eq","","",33,[[["str",15]],["bool",15]]],[11,"eq","","",33,[[],["bool",15]]],[11,"eq","","",33,[[],["bool",15]]],[11,"eq","","",33,[[["string",3]],["bool",15]]],[11,"eq","","",33,[[["str",15]],["bool",15]]],[11,"eq","","",33,[[["guid",3]],["bool",15]]],[11,"eq","","",33,[[["vec",3]],["bool",15]]],[11,"from","sync15_traits::bridged_engine","",1,[[["vec",3],["outgoingenvelope",3]]]],[11,"from","","",3,[[["payload",3]]]],[11,"from","","",4,[[["error",3]],["payloaderror",4]]],[11,"clone","","",1,[[],["applyresults",3]]],[11,"clone","","",2,[[],["incomingenvelope",3]]],[11,"clone","","",3,[[],["outgoingenvelope",3]]],[11,"clone","sync15_traits::changeset","",6,[[],["recordchangeset",3]]],[11,"clone","sync15_traits::client","",7,[[],["clientdata",3]]],[11,"clone","","",8,[[],["remoteclient",3]]],[11,"clone","","",9,[[],["devicetype",4]]],[11,"clone","sync15_traits::engine","",10,[[],["collsyncids",3]]],[11,"clone","","",11,[[],["enginesyncassociation",4]]],[11,"clone","sync15_traits::payload","",13,[[],["payload",3]]],[11,"clone","sync15_traits::request","",14,[[],["collectionrequest",3]]],[11,"clone","","",16,[[],["requestorder",4]]],[11,"clone","sync15_traits::server_timestamp","",17,[[],["servertimestamp",3]]],[11,"default","sync15_traits::bridged_engine","",1,[[],["applyresults",3]]],[11,"default","sync15_traits::server_timestamp","",17,[[],["servertimestamp",3]]],[11,"default","sync15_traits::telemetry","",19,[[]]],[11,"default","","",26,[[],["engineincoming",3]]],[11,"default","","",27,[[],["engineoutgoing",3]]],[11,"default","","",29,[[],["validation",3]]],[11,"default","","",30,[[],["problem",3]]],[11,"default","","",31,[[],["synctelemetry",3]]],[11,"default","","",32,[[],["synctelemetryping",3]]],[11,"cmp","sync15_traits::request","",16,[[["requestorder",4]],["ordering",4]]],[11,"eq","sync15_traits::client","",8,[[["remoteclient",3]],["bool",15]]],[11,"ne","","",8,[[["remoteclient",3]],["bool",15]]],[11,"eq","","",9,[[["devicetype",4]],["bool",15]]],[11,"eq","sync15_traits::engine","",10,[[["collsyncids",3]],["bool",15]]],[11,"ne","","",10,[[["collsyncids",3]],["bool",15]]],[11,"eq","","",11,[[["enginesyncassociation",4]],["bool",15]]],[11,"ne","","",11,[[["enginesyncassociation",4]],["bool",15]]],[11,"eq","sync15_traits::payload","",13,[[["payload",3]],["bool",15]]],[11,"ne","","",13,[[["payload",3]],["bool",15]]],[11,"eq","sync15_traits::request","",14,[[["collectionrequest",3]],["bool",15]]],[11,"ne","","",14,[[["collectionrequest",3]],["bool",15]]],[11,"eq","","",16,[[["requestorder",4]],["bool",15]]],[11,"eq","sync15_traits::server_timestamp","",17,[[["servertimestamp",3]],["bool",15]]],[11,"ne","","",17,[[["servertimestamp",3]],["bool",15]]],[11,"partial_cmp","sync15_traits::request","",16,[[["requestorder",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","sync15_traits::server_timestamp","",17,[[["servertimestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["servertimestamp",3]],["bool",15]]],[11,"le","","",17,[[["servertimestamp",3]],["bool",15]]],[11,"gt","","",17,[[["servertimestamp",3]],["bool",15]]],[11,"ge","","",17,[[["servertimestamp",3]],["bool",15]]],[11,"fmt","sync15_traits::bridged_engine","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::changeset","",6,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::client","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::engine","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::payload","",13,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::request","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::server_timestamp","",17,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::telemetry","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::bridged_engine","",4,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::request","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","sync15_traits::server_timestamp","",17,[[["formatter",3]],["result",6]]],[11,"hash","sync15_traits::client","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","sync15_traits::request","",16,[[]]],[11,"from_str","sync15_traits::server_timestamp","",17,[[["str",15]],["result",4]]],[11,"serialize","sync15_traits::bridged_engine","",3,[[],["result",4]]],[11,"serialize","sync15_traits::client","",9,[[],["result",4]]],[11,"serialize","sync15_traits::payload","",13,[[],["result",4]]],[11,"serialize","sync15_traits::server_timestamp","",17,[[["serializer",8]],["result",4]]],[11,"serialize","sync15_traits::telemetry","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"deserialize","sync15_traits::bridged_engine","",2,[[],["result",4]]],[11,"deserialize","sync15_traits::client","",9,[[],["result",4]]],[11,"deserialize","sync15_traits::payload","",13,[[],["result",4]]],[11,"deserialize","sync15_traits::server_timestamp","",17,[[["deserializer",8]],["result",4]]],[11,"ffi_default","sync15_traits::telemetry","",32,[[]]],[11,"into_ffi_value","","",32,[[]]],[11,"new","sync15_traits","Create a guid from a <code>str</code>.",33,[[["str",15]],["guid",3]]],[11,"empty","","Create an empty guid. Usable as a constant.",33,[[],["guid",3]]],[11,"random","","Create a random guid (of 12 base64url characters). …",33,[[],["guid",3]]],[11,"from_string","","Convert <code>b</code> into a <code>Guid</code>.",33,[[["string",3]],["guid",3]]],[11,"from_slice","","Convert <code>b</code> into a <code>Guid</code>.",33,[[],["guid",3]]],[11,"from_vec","","Convert <code>v</code> to a <code>Guid</code>, consuming it.",33,[[["u8",15],["vec",3],["global",3]],["guid",3]]],[11,"as_bytes","","Get the data backing this <code>Guid</code> as a <code>&[u8]</code>.",33,[[]]],[11,"as_str","","Get the data backing this <code>Guid</code> as a <code>&str</code>.",33,[[],["str",15]]],[11,"into_string","","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …",33,[[],["string",3]]],[11,"is_valid_for_sync_server","","Returns true for Guids that are deemed valid by the sync …",33,[[],["bool",15]]],[11,"is_valid_for_places","","Returns true for Guids that are valid places guids, and …",33,[[],["bool",15]]],[11,"is_valid_places_byte","","Returns true if the byte <code>b</code> is a valid base64url byte.",33,[[["u8",15]],["bool",15]]]],"p":[[8,"BridgedEngine"],[3,"ApplyResults"],[3,"IncomingEnvelope"],[3,"OutgoingEnvelope"],[4,"PayloadError"],[13,"MismatchedId"],[3,"RecordChangeset"],[3,"ClientData"],[3,"RemoteClient"],[4,"DeviceType"],[3,"CollSyncIds"],[4,"EngineSyncAssociation"],[8,"SyncEngine"],[3,"Payload"],[3,"CollectionRequest"],[3,"UnacceptableBaseUrl"],[4,"RequestOrder"],[3,"ServerTimestamp"],[3,"WhenTook"],[4,"Stopwatch"],[3,"Event"],[4,"SyncFailure"],[13,"Other"],[13,"Unexpected"],[13,"Auth"],[13,"Http"],[3,"EngineIncoming"],[3,"EngineOutgoing"],[3,"Engine"],[3,"Validation"],[3,"Problem"],[3,"SyncTelemetry"],[3,"SyncTelemetryPing"],[3,"Guid"]]},\
"sync_guid":{"doc":"","i":[[0,"serde_support","sync_guid","",null,null],[3,"GuidVisitor","sync_guid::serde_support","",null,null],[0,"rusqlite_support","sync_guid","",null,null],[3,"Guid","","This is a type intended to be used to represent the guids …",null,null],[12,"0","","",0,null],[4,"Repr","","",null,null],[13,"Fast","","",1,null],[13,"Slow","","",1,null],[3,"FastGuid","","Invariants:",null,null],[12,"len","","",2,null],[12,"data","","",2,null],[17,"MAX_FAST_GUID_LEN","","",null,null],[11,"from_slice","","",2,[[]]],[11,"as_str","","",2,[[],["str",15]]],[11,"len","","",2,[[],["usize",15]]],[11,"bytes","","",2,[[]]],[5,"can_use_fast","","",null,[[],["bool",15]]],[11,"new","","Create a guid from a <code>str</code>.",0,[[["str",15]]]],[11,"empty","","Create an empty guid. Usable as a constant.",0,[[]]],[11,"random","","Create a random guid (of 12 base64url characters). …",0,[[]]],[11,"from_string","","Convert <code>b</code> into a <code>Guid</code>.",0,[[["string",3]]]],[11,"from_slice","","Convert <code>b</code> into a <code>Guid</code>.",0,[[]]],[11,"from_vec","","Convert <code>v</code> to a <code>Guid</code>, consuming it.",0,[[["vec",3],["u8",15]]]],[11,"as_bytes","","Get the data backing this <code>Guid</code> as a <code>&[u8]</code>.",0,[[]]],[11,"as_str","","Get the data backing this <code>Guid</code> as a <code>&str</code>.",0,[[],["str",15]]],[11,"into_string","","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …",0,[[],["string",3]]],[11,"is_valid_for_sync_server","","Returns true for Guids that are deemed valid by the sync …",0,[[],["bool",15]]],[11,"is_valid_for_places","","Returns true for Guids that are valid places guids, and …",0,[[],["bool",15]]],[11,"is_valid_places_byte","","Returns true if the byte <code>b</code> is a valid base64url byte.",0,[[["u8",15]],["bool",15]]],[11,"new_slow","","",0,[[["vec",3],["u8",15]]]],[17,"BASE64URL_BYTES","","",null,null],[11,"from","sync_guid::serde_support","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"vzip","","",3,[[]]],[11,"from","sync_guid","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"get_hash","","",0,[[],["u64",15]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"as_ref","","",0,[[],["str",15]]],[11,"as_ref","","",0,[[]]],[11,"from","","",0,[[["str",15]],["guid",3]]],[11,"from","","",0,[[["str",15]],["guid",3]]],[11,"from","","",0,[[],["guid",3]]],[11,"from","","",0,[[["string",3]],["guid",3]]],[11,"from","","",0,[[["vec",3],["u8",15]],["guid",3]]],[11,"clone","","",0,[[],["guid",3]]],[11,"clone","","",1,[[],["repr",4]]],[11,"clone","","",2,[[],["fastguid",3]]],[11,"default","","Create a default guid by calling <code>Guid::empty()</code>",0,[[]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",0,[[["str",15]],["bool",15]]],[11,"eq","","",0,[[["str",15]],["bool",15]]],[11,"eq","","",0,[[["string",3]],["bool",15]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",0,[[["vec",3]],["bool",15]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"deref","","",0,[[],["str",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"expecting","sync_guid::serde_support","",3,[[["formatter",3]],["result",6]]],[11,"visit_str","","",3,[[["str",15]],[["error",8],["result",4]]]],[11,"serialize","sync_guid","",0,[[["serializer",8]],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"column_result","","",0,[[["valueref",4]],["fromsqlresult",6]]],[11,"to_sql","","",0,[[],[["result",6],["tosqloutput",4]]]]],"p":[[3,"Guid"],[4,"Repr"],[3,"FastGuid"],[3,"GuidVisitor"]]},\
"sync_manager":{"doc":"","i":[[0,"error","sync_manager","",null,null],[4,"ErrorKind","sync_manager::error","",null,null],[13,"UnknownEngine","","",0,null],[13,"UnsupportedFeature","","",0,null],[13,"ConnectionClosed","","",0,null],[13,"InvalidHandle","","",0,null],[13,"ProtobufDecodeError","","",0,null],[13,"Sync15Error","","",0,null],[13,"UrlParseError","","",0,null],[13,"InterruptedError","","",0,null],[13,"JsonError","","",0,null],[13,"LoginsError","","",0,null],[13,"PlacesError","","",0,null],[13,"AnyhowError","","",0,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",1,null],[12,"backtrace","","",1,null],[11,"new","","",1,[[["errorkind",4]]]],[11,"get_backtrace","","",1,[[],[["option",4],["mutex",3]]]],[3,"Error","","",null,null],[12,"0","","",2,null],[11,"kind","","",2,[[],["errorkind",4]]],[11,"backtrace","","",2,[[],[["option",4],["mutex",3]]]],[0,"ffi","sync_manager","",null,null],[0,"error_codes","sync_manager::ffi","",null,null],[17,"UNEXPECTED","sync_manager::ffi::error_codes","",null,null],[17,"UNSUPPORTED_ENGINE","","We were asked to sync an engine, but we either don\'t know …",null,null],[17,"ENGINE_NOT_OPEN","","We were asked to sync an engine which is not open (i.e. …",null,null],[5,"get_code","sync_manager::ffi","",null,[[["error",3]],["errorcode",3]]],[0,"manager","sync_manager","",null,null],[17,"LOGINS_ENGINE","sync_manager::manager","",null,null],[17,"HISTORY_ENGINE","","",null,null],[17,"BOOKMARKS_ENGINE","","",null,null],[17,"TABS_ENGINE","","",null,null],[17,"DEVICE_TYPE_DESKTOP","","",null,null],[17,"DEVICE_TYPE_MOBILE","","",null,null],[17,"DEVICE_TYPE_TABLET","","",null,null],[17,"DEVICE_TYPE_VR","","",null,null],[17,"DEVICE_TYPE_TV","","",null,null],[3,"SyncManager","","",null,null],[12,"mem_cached_state","","",3,null],[12,"places","","",3,null],[12,"logins","","",3,null],[12,"tabs","","",3,null],[11,"new","","",3,[[]]],[11,"set_places","","",3,[[["arc",3],["placesapi",3]]]],[11,"set_logins","","",3,[[["mutex",3],["arc",3]]]],[11,"set_tabs","","",3,[[["arc",3],["mutex",3]]]],[11,"autofill_engine","","",3,[[["str",15]],[["result",6],["option",4]]]],[11,"wipe","","",3,[[["str",15]],["result",6]]],[11,"wipe_all","","",3,[[],["result",6]]],[11,"reset","","",3,[[["str",15]],["result",6]]],[11,"reset_all","","",3,[[],["result",6]]],[11,"disconnect","","",3,[[]]],[11,"sync","","",3,[[["syncparams",3]],[["result",6],["syncresult",3]]]],[11,"do_sync","","",3,[[["syncparams",3]],[["result",6],["syncresult",3]]]],[5,"backoff_in_effect","","",null,[[["option",4],["systemtime",3],["syncparams",3]],["bool",15]]],[5,"system_time_to_millis","","",null,[[["option",4],["systemtime",3]],[["i64",15],["option",4]]]],[5,"should_sync","","",null,[[["syncparams",3],["str",15]],["bool",15]]],[5,"check_engine_list","","",null,[[],["result",6]]],[3,"SyncClient","","",null,null],[12,"0","","",4,null],[11,"new","","",4,[[["settings",3]],["syncclient",3]]],[0,"msg_types","sync_manager","",null,null],[3,"SyncParams","sync_manager::msg_types","",null,null],[12,"engines_to_sync","","",5,null],[12,"sync_all_engines","","",5,null],[12,"reason","","",5,null],[12,"engines_to_change_state","","",5,null],[12,"persisted_state","","",5,null],[12,"acct_key_id","","These conceptually are a nested type, but exposing them …",5,null],[12,"acct_access_token","","",5,null],[12,"acct_tokenserver_url","","",5,null],[12,"acct_sync_key","","",5,null],[12,"fxa_device_id","","",5,null],[12,"device_name","","",5,null],[12,"device_type","","",5,null],[12,"local_encryption_keys","","",5,null],[11,"reason","","Returns the enum value of <code>reason</code>, or the default if the …",5,[[],["syncreason",4]]],[11,"set_reason","","Sets <code>reason</code> to the provided enum value.",5,[[["syncreason",4]]]],[11,"persisted_state","","Returns the value of <code>persisted_state</code>, or the default …",5,[[],["str",15]]],[11,"device_type","","Returns the enum value of <code>device_type</code>, or the default if …",5,[[],["devicetype",4]]],[11,"set_device_type","","Sets <code>device_type</code> to the provided enum value.",5,[[["devicetype",4]]]],[3,"SyncResult","","",null,null],[12,"status","","",6,null],[12,"results","","empty string used for \'no error\'",6,null],[12,"declined","","",6,null],[12,"have_declined","","false if we didn\'t manage to check declined.",6,null],[12,"next_sync_allowed_at","","",6,null],[12,"persisted_state","","",6,null],[12,"telemetry_json","","",6,null],[11,"status","","Returns the enum value of <code>status</code>, or the default if the …",6,[[],["servicestatus",4]]],[11,"set_status","","Sets <code>status</code> to the provided enum value.",6,[[["servicestatus",4]]]],[11,"next_sync_allowed_at","","Returns the value of <code>next_sync_allowed_at</code>, or the default …",6,[[],["i64",15]]],[11,"telemetry_json","","Returns the value of <code>telemetry_json</code>, or the default value …",6,[[],["str",15]]],[4,"SyncReason","","",null,null],[13,"Scheduled","","",7,null],[13,"User","","",7,null],[13,"PreSleep","","",7,null],[13,"Startup","","",7,null],[13,"EnabledChange","","",7,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>SyncReason</code>.",7,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>SyncReason</code>, or <code>None</code> if <code>value</code> is not …",7,[[["i32",15]],[["option",4],["syncreason",4]]]],[4,"DeviceType","","",null,null],[13,"Desktop","","",8,null],[13,"Mobile","","",8,null],[13,"Tablet","","",8,null],[13,"Vr","","",8,null],[13,"Tv","","",8,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>DeviceType</code>.",8,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>DeviceType</code>, or <code>None</code> if <code>value</code> is not …",8,[[["i32",15]],[["devicetype",4],["option",4]]]],[4,"ServiceStatus","","",null,null],[13,"Ok","","",9,null],[13,"NetworkError","","",9,null],[13,"ServiceError","","",9,null],[13,"AuthError","","",9,null],[13,"BackedOff","","",9,null],[13,"OtherError","","",9,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>ServiceStatus</code>.",9,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>ServiceStatus</code>, or <code>None</code> if <code>value</code> is …",9,[[["i32",15]],[["option",4],["servicestatus",4]]]],[3,"MANAGER","sync_manager","",null,null],[12,"__private_field","","",10,null],[5,"set_places","","",null,[[["arc",3],["placesapi",3]]]],[5,"set_logins","","",null,[[["mutex",3],["arc",3]]]],[5,"set_tabs","","",null,[[["arc",3],["mutex",3]]]],[5,"disconnect","","",null,[[]]],[5,"wipe","","",null,[[["str",15]],["result",6]]],[5,"wipe_all","","",null,[[],["result",6]]],[5,"reset","","",null,[[["str",15]],["result",6]]],[5,"reset_all","","",null,[[],["result",6]]],[5,"sync","","",null,[[["syncparams",3]],[["syncresult",3],["result",6]]]],[11,"from","sync_manager::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","sync_manager::manager","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","sync_manager::msg_types","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"get_hash","","",8,[[],["u64",15]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"get_hash","","",9,[[],["u64",15]]],[11,"vzip","","",9,[[]]],[11,"from","sync_manager","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","sync_manager::error","",0,[[["handleerror",4]]]],[11,"from","","",0,[[["decodeerror",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["interrupted",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",2,[[["errorkind",4]],["error",3]]],[11,"from","","",2,[[["handleerror",4]]]],[11,"from","","",2,[[["decodeerror",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["parseerror",4]]]],[11,"from","","",2,[[["interrupted",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","sync_manager::msg_types","",9,[[["servicestatus",4]]]],[11,"clone","","",5,[[],["syncparams",3]]],[11,"clone","","",6,[[],["syncresult",3]]],[11,"clone","","",7,[[],["syncreason",4]]],[11,"clone","","",8,[[],["devicetype",4]]],[11,"clone","","",9,[[],["servicestatus",4]]],[11,"default","","",5,[[],["syncparams",3]]],[11,"default","","",6,[[],["syncresult",3]]],[11,"default","","",7,[[],["syncreason",4]]],[11,"default","","",8,[[],["devicetype",4]]],[11,"default","","",9,[[],["servicestatus",4]]],[11,"cmp","","",7,[[["syncreason",4]],["ordering",4]]],[11,"cmp","","",8,[[["devicetype",4]],["ordering",4]]],[11,"cmp","","",9,[[["servicestatus",4]],["ordering",4]]],[11,"eq","","",5,[[["syncparams",3]],["bool",15]]],[11,"ne","","",5,[[["syncparams",3]],["bool",15]]],[11,"eq","","",6,[[["syncresult",3]],["bool",15]]],[11,"ne","","",6,[[["syncresult",3]],["bool",15]]],[11,"eq","","",7,[[["syncreason",4]],["bool",15]]],[11,"eq","","",8,[[["devicetype",4]],["bool",15]]],[11,"eq","","",9,[[["servicestatus",4]],["bool",15]]],[11,"partial_cmp","","",7,[[["syncreason",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",8,[[["devicetype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["servicestatus",4]],[["option",4],["ordering",4]]]],[11,"deref","sync_manager","",10,[[],["mutex",3]]],[11,"fmt","sync_manager::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","sync_manager::msg_types","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","sync_manager::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","sync_manager::msg_types","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"source","sync_manager::error","",0,[[],[["option",4],["error",8]]]],[11,"ffi_default","sync_manager::msg_types","",6,[[]]],[11,"into_ffi_value","","",6,[[]]],[11,"ffi_default","","",5,[[]]],[11,"into_ffi_value","","",5,[[]]],[11,"initialize","sync_manager","",10,[[]]],[11,"settings","sync_manager::manager","",4,[[],["settings",3]]],[11,"apply_incoming_command","","",4,[[["command",4]],[["result",6],["commandstatus",4]]]],[11,"fetch_outgoing_commands","","",4,[[],[["hashset",3],["result",6]]]],[11,"encode_raw","sync_manager::msg_types","",5,[[]]],[11,"merge_field","","",5,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",5,[[],["usize",15]]],[11,"clear","","",5,[[]]],[11,"encode_raw","","",6,[[]]],[11,"merge_field","","",6,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",6,[[],["usize",15]]],[11,"clear","","",6,[[]]]],"p":[[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[3,"SyncManager"],[3,"SyncClient"],[3,"SyncParams"],[3,"SyncResult"],[4,"SyncReason"],[4,"DeviceType"],[4,"ServiceStatus"],[3,"MANAGER"]]},\
"sync_manager_ffi":{"doc":"","i":[[5,"sync_manager_set_places","sync_manager_ffi","",null,[[["externerror",3],["u64",15]]]],[5,"sync_manager_set_logins","","",null,[[["externerror",3],["u64",15]]]],[5,"sync_manager_set_tabs","","",null,[[["externerror",3],["u64",15]]]],[5,"sync_manager_disconnect","","",null,[[["externerror",3]]]],[5,"get_buffer","","",null,[[["i32",15]]]],[5,"sync_manager_sync","","SafetyReads pointer, thus unsafe.",null,[[["externerror",3],["i32",15]],["bytebuffer",3]]],[5,"sync_manager_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"sync_manager_destroy_bytebuffer","","",null,[[["bytebuffer",3]]]]],"p":[]},\
"tabs":{"doc":"","i":[[0,"error","tabs","",null,null],[4,"ErrorKind","tabs::error","",null,null],[13,"SyncAdapterError","","",0,null],[13,"JsonError","","",0,null],[13,"UrlParseError","","",0,null],[13,"ProtobufDecodeError","","",0,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",1,null],[12,"backtrace","","",1,null],[11,"new","","",1,[[["errorkind",4]]]],[11,"get_backtrace","","",1,[[],[["option",4],["mutex",3]]]],[3,"Error","","",null,null],[12,"0","","",2,null],[11,"kind","","",2,[[],["errorkind",4]]],[11,"backtrace","","",2,[[],[["option",4],["mutex",3]]]],[0,"ffi","tabs","",null,null],[0,"error_codes","tabs::ffi","",null,null],[17,"UNEXPECTED","tabs::ffi::error_codes","An unexpected error occurred which likely cannot be …",null,null],[17,"AUTH_INVALID","","Indicates the FxA credentials are invalid, and should be …",null,null],[17,"NETWORK","","A request to the sync server failed.",null,null],[5,"get_code","tabs::ffi","",null,[[["error",3]],["errorcode",3]]],[0,"storage","tabs","",null,null],[17,"URI_LENGTH_MAX","tabs::storage","",null,null],[17,"TAB_ENTRIES_LIMIT","","",null,null],[3,"RemoteTab","","",null,null],[12,"title","","",3,null],[12,"url_history","","",3,null],[12,"icon","","",3,null],[12,"last_used","","",3,null],[3,"ClientRemoteTabs","","",null,null],[12,"client_id","","",4,null],[12,"client_name","","",4,null],[12,"device_type","","",4,null],[12,"remote_tabs","","",4,null],[3,"TabsStorage","","",null,null],[12,"local_tabs","","",5,null],[12,"remote_tabs","","",5,null],[11,"new","","",5,[[]]],[11,"update_local_state","","",5,[[["remotetab",3],["vec",3]]]],[11,"prepare_local_tabs_for_upload","","",5,[[],[["option",4],["vec",3]]]],[11,"get_remote_tabs","","",5,[[],[["option",4],["vec",3]]]],[11,"replace_remote_tabs","","",5,[[["vec",3],["clientremotetabs",3]]]],[11,"wipe_remote_tabs","","",5,[[]]],[11,"wipe_local_tabs","","",5,[[]]],[5,"is_url_syncable","","",null,[[["str",15]],["bool",15]]],[0,"sync","tabs","",null,null],[0,"engine","tabs::sync","",null,null],[17,"TTL_1_YEAR","tabs::sync::engine","",null,null],[11,"from_record_tab","tabs::storage","",3,[[["tabsrecordtab",3]]]],[11,"to_record_tab","","",3,[[],["tabsrecordtab",3]]],[11,"from_record_with_remote_client","","",4,[[["string",3],["remoteclient",3],["tabsrecord",3]]]],[11,"from_record","","",4,[[["string",3],["tabsrecord",3]]]],[11,"to_record","","",4,[[],["tabsrecord",3]]],[3,"TabsEngine","tabs::sync::engine","",null,null],[12,"storage","","",6,null],[12,"remote_clients","","",6,null],[12,"last_sync","","",6,null],[12,"sync_store_assoc","","",6,null],[12,"local_id","","",6,null],[11,"new","","",6,[[["tabsstorage",3]]]],[0,"record","tabs::sync","",null,null],[3,"TabsRecordTab","tabs::sync::record","",null,null],[12,"title","","",7,null],[12,"url_history","","",7,null],[12,"icon","","",7,null],[12,"last_used","","",7,null],[3,"TabsRecord","","",null,null],[12,"id","","",8,null],[12,"client_name","","",8,null],[12,"tabs","","",8,null],[12,"ttl","","",8,null],[11,"from_payload","","",8,[[["payload",3]],["result",6]]],[0,"store","tabs::sync","",null,null],[3,"TabsStore","tabs::sync::store","",null,null],[12,"storage","","",9,null],[12,"mem_cached_state","","",9,null],[11,"new","","",9,[[]]],[11,"update_local_state","","",9,[[["remotetab",3],["vec",3]]]],[11,"remote_tabs","","",9,[[],[["option",4],["vec",3]]]],[11,"sync","","A convenience wrapper around sync_multiple.",9,[[["sync15storageclientinit",3],["keybundle",3],["str",15]],[["synctelemetryping",3],["result",6]]]],[0,"msg_types","tabs","",null,null],[3,"ClientTabs","tabs::msg_types","",null,null],[12,"client_id","","",10,null],[12,"remote_tabs","","",10,null],[3,"ClientsTabs","","",null,null],[12,"clients_tabs","","",11,null],[3,"RemoteTab","","",null,null],[12,"title","","",12,null],[12,"url_history","","",12,null],[12,"icon","","",12,null],[12,"last_used","","",12,null],[11,"icon","","Returns the value of <code>icon</code>, or the default value if <code>icon</code> …",12,[[],["str",15]]],[3,"RemoteTabs","","",null,null],[12,"remote_tabs","","",13,null],[3,"ClientRemoteTabs","tabs","",null,null],[12,"client_id","","",4,null],[12,"client_name","","",4,null],[12,"device_type","","",4,null],[12,"remote_tabs","","",4,null],[3,"RemoteTab","","",null,null],[12,"title","","",3,null],[12,"url_history","","",3,null],[12,"icon","","",3,null],[12,"last_used","","",3,null],[3,"TabsEngine","","",null,null],[12,"storage","","",6,null],[12,"remote_clients","","",6,null],[12,"last_sync","","",6,null],[12,"sync_store_assoc","","",6,null],[12,"local_id","","",6,null],[3,"TabsStore","","",null,null],[12,"storage","","",9,null],[12,"mem_cached_state","","",9,null],[4,"DeviceType","","The type of a client. Please keep these variants in sync …",null,null],[13,"Desktop","","",14,null],[13,"Mobile","","",14,null],[13,"Tablet","","",14,null],[13,"VR","","",14,null],[13,"TV","","",14,null],[11,"from","tabs::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","tabs::storage","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","tabs::sync::engine","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","tabs::sync::record","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"get_hash","","",8,[[],["u64",15]]],[11,"vzip","","",8,[[]]],[11,"from","tabs::sync::store","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","tabs::msg_types","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","tabs","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"get_hash","","",14,[[],["u64",15]]],[11,"vzip","","",14,[[]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",14,[[]]],[11,"serialize","","",14,[[],["result",4]]],[11,"clone","","",14,[[],["devicetype",4]]],[11,"deserialize","","",14,[[],[["result",4],["devicetype",4]]]],[11,"eq","","",14,[[["devicetype",4]],["bool",15]]],[11,"from","tabs::error","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["decodeerror",3]]]],[11,"from","","",2,[[["errorkind",4]],["error",3]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["parseerror",4]]]],[11,"from","","",2,[[["decodeerror",3]]]],[11,"from","tabs::msg_types","",11,[[["vec",3],["clientremotetabs",3]]]],[11,"from","","",10,[[["clientremotetabs",3]]]],[11,"from","","",12,[[["remotetab",3]]]],[11,"from","tabs::storage","",3,[[["remotetab",3]]]],[11,"clone","","",3,[[],["remotetab",3]]],[11,"clone","","",4,[[],["clientremotetabs",3]]],[11,"clone","tabs::sync::record","",7,[[],["tabsrecordtab",3]]],[11,"clone","","",8,[[],["tabsrecord",3]]],[11,"clone","tabs::msg_types","",10,[[],["clienttabs",3]]],[11,"clone","","",11,[[],["clientstabs",3]]],[11,"clone","","",12,[[],["remotetab",3]]],[11,"clone","","",13,[[],["remotetabs",3]]],[11,"default","tabs::storage","",5,[[]]],[11,"default","tabs::sync::record","",7,[[],["tabsrecordtab",3]]],[11,"default","tabs::sync::store","",9,[[]]],[11,"default","tabs::msg_types","",10,[[],["clienttabs",3]]],[11,"default","","",11,[[],["clientstabs",3]]],[11,"default","","",12,[[],["remotetab",3]]],[11,"default","","",13,[[],["remotetabs",3]]],[11,"eq","tabs::storage","",3,[[["remotetab",3]],["bool",15]]],[11,"ne","","",3,[[["remotetab",3]],["bool",15]]],[11,"eq","tabs::sync::record","",7,[[["tabsrecordtab",3]],["bool",15]]],[11,"ne","","",7,[[["tabsrecordtab",3]],["bool",15]]],[11,"eq","","",8,[[["tabsrecord",3]],["bool",15]]],[11,"ne","","",8,[[["tabsrecord",3]],["bool",15]]],[11,"eq","tabs::msg_types","",10,[[["clienttabs",3]],["bool",15]]],[11,"ne","","",10,[[["clienttabs",3]],["bool",15]]],[11,"eq","","",11,[[["clientstabs",3]],["bool",15]]],[11,"ne","","",11,[[["clientstabs",3]],["bool",15]]],[11,"eq","","",12,[[["remotetab",3]],["bool",15]]],[11,"ne","","",12,[[["remotetab",3]],["bool",15]]],[11,"eq","","",13,[[["remotetabs",3]],["bool",15]]],[11,"ne","","",13,[[["remotetabs",3]],["bool",15]]],[11,"fmt","tabs::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tabs::storage","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","tabs::sync::record","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tabs::msg_types","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tabs::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","tabs::sync::record","",7,[[]]],[11,"hash","","",8,[[]]],[11,"source","tabs::error","",0,[[],[["option",4],["error",8]]]],[11,"ffi_default","tabs::msg_types","",11,[[]]],[11,"into_ffi_value","","",11,[[]]],[11,"serialize","tabs::storage","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","tabs::sync::record","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"deserialize","tabs::storage","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","tabs::sync::record","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"collection_name","tabs::sync::engine","",6,[[],[["str",15],["cow",4]]]],[11,"prepare_for_sync","","",6,[[["fn",8]],["result",6]]],[11,"apply_incoming","","",6,[[["engine",3],["vec",3],["incomingchangeset",6]],[["result",6],["outgoingchangeset",6]]]],[11,"sync_finished","","",6,[[["guid",3],["servertimestamp",3],["vec",3]],["result",6]]],[11,"get_collection_requests","","",6,[[["servertimestamp",3]],[["result",6],["vec",3]]]],[11,"get_sync_assoc","","",6,[[],[["enginesyncassociation",4],["result",6]]]],[11,"reset","","",6,[[["enginesyncassociation",4]],["result",6]]],[11,"wipe","","",6,[[],["result",6]]],[11,"encode_raw","tabs::msg_types","",10,[[]]],[11,"merge_field","","",10,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",10,[[],["usize",15]]],[11,"clear","","",10,[[]]],[11,"encode_raw","","",11,[[]]],[11,"merge_field","","",11,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",11,[[],["usize",15]]],[11,"clear","","",11,[[]]],[11,"encode_raw","","",12,[[]]],[11,"merge_field","","",12,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",12,[[],["usize",15]]],[11,"clear","","",12,[[]]],[11,"encode_raw","","",13,[[]]],[11,"merge_field","","",13,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",13,[[],["usize",15]]],[11,"clear","","",13,[[]]],[11,"try_from_str","tabs","",14,[[],[["devicetype",4],["option",4]]]],[11,"as_str","","",14,[[],["str",15]]]],"p":[[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[3,"RemoteTab"],[3,"ClientRemoteTabs"],[3,"TabsStorage"],[3,"TabsEngine"],[3,"TabsRecordTab"],[3,"TabsRecord"],[3,"TabsStore"],[3,"ClientTabs"],[3,"ClientsTabs"],[3,"RemoteTab"],[3,"RemoteTabs"],[4,"DeviceType"]]},\
"tabs_ffi":{"doc":"","i":[[3,"STORES","tabs_ffi","",null,null],[12,"__private_field","","",0,null],[5,"parse_url","","",null,[[["str",15]],[["result",6],["url",3]]]],[5,"remote_tabs_new","","",null,[[["externerror",3]],["u64",15]]],[5,"remote_tabs_sync","","",null,[[["externerror",3],["ffistr",3],["u64",15]]]],[5,"remote_tabs_update_local","","SafetyDeref pointer, thus unsafe",null,[[["externerror",3],["ffistr",3],["u64",15]]]],[5,"remote_tabs_get_all","","",null,[[["externerror",3],["u64",15]],["bytebuffer",3]]],[5,"remote_tabs_destroy_string","","Public destructor for strings managed by the other side …",null,[[]]],[5,"remote_tabs_destroy_bytebuffer","","",null,[[["bytebuffer",3]]]],[5,"remote_tabs_destroy","","",null,[[["externerror",3],["u64",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"deref","","",0,[[],["concurrenthandlemap",3]]],[11,"initialize","","",0,[[]]]],"p":[[3,"STORES"]]},\
"types":{"doc":"","i":[[3,"Timestamp","types","",null,null],[12,"0","","",0,null],[11,"now","","",0,[[]]],[11,"duration_since","","Returns None if <code>other</code> is later than <code>self</code> (Duration may …",0,[[["timestamp",3]],[["option",4],["duration",3]]]],[11,"checked_sub","","",0,[[["duration",3]],[["option",4],["timestamp",3]]]],[11,"as_millis","","",0,[[],["u64",15]]],[18,"EARLIEST","","In desktop sync, bookmarks are clamped to Jan 23, 1993 …",0,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"get_hash","","",0,[[],["u64",15]]],[11,"from","","",0,[[["systemtime",3]]]],[11,"from","","",0,[[["u64",15]]]],[11,"clone","","",0,[[],["timestamp",3]]],[11,"default","","",0,[[],["timestamp",3]]],[11,"cmp","","",0,[[["timestamp",3]],["ordering",4]]],[11,"eq","","",0,[[["timestamp",3]],["bool",15]]],[11,"ne","","",0,[[["timestamp",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["timestamp",3]],["bool",15]]],[11,"le","","",0,[[["timestamp",3]],["bool",15]]],[11,"gt","","",0,[[["timestamp",3]],["bool",15]]],[11,"ge","","",0,[[["timestamp",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"column_result","","",0,[[["valueref",4]],["fromsqlresult",6]]],[11,"to_sql","","",0,[[],[["rusqliteresult",6],["tosqloutput",4]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Timestamp"]]},\
"viaduct":{"doc":"","i":[[0,"headers","viaduct","",null,null],[0,"name","viaduct::headers","",null,null],[3,"HeaderName","viaduct::headers::name","Represents a header name that we know to be both valid …",null,null],[12,"0","","",0,null],[3,"InvalidHeaderName","","Indicates an invalid header name. Note that we only emit …",null,null],[12,"0","","",1,null],[11,"name","","",1,[[],["str",15]]],[5,"validate_header","","",null,[[["str",15],["cow",4]],[["invalidheadername",3],["result",4],["headername",3]]]],[11,"new","","Create a new header. In general you likely want to use …",0,[[["into",8],["cow",4]],[["result",4],["invalidheadername",3]]]],[11,"as_str","","",0,[[],["str",15]]],[5,"invalid_header_name","","",null,[[["str",15],["cow",4]],["invalidheadername",3]]],[7,"VALID_HEADER_LUT","","",null,null],[0,"consts","viaduct::headers","",null,null],[17,"ACCEPT_ENCODING","viaduct::headers::consts","",null,null],[17,"ACCEPT","","",null,null],[17,"AUTHORIZATION","","",null,null],[17,"CONTENT_TYPE","","",null,null],[17,"ETAG","","",null,null],[17,"IF_NONE_MATCH","","",null,null],[17,"USER_AGENT","","",null,null],[17,"RETRY_AFTER","","",null,null],[17,"X_IF_UNMODIFIED_SINCE","","",null,null],[17,"X_KEYID","","",null,null],[17,"X_LAST_MODIFIED","","",null,null],[17,"X_TIMESTAMP","","",null,null],[17,"X_WEAVE_NEXT_OFFSET","","",null,null],[17,"X_WEAVE_RECORDS","","",null,null],[17,"X_WEAVE_TIMESTAMP","","",null,null],[17,"X_WEAVE_BACKOFF","","",null,null],[17,"_ALL","","",null,null],[3,"Header","viaduct::headers","A single header. Headers have a name (case insensitive) …",null,null],[12,"name","","",2,null],[12,"value","","",2,null],[5,"trim_string","","",null,[[["into",8],["string",3],["str",15],["asref",8]],["string",3]]],[5,"is_valid_header_value","","",null,[[["str",15]],["bool",15]]],[11,"new","","",2,[[],[["error",4],["result",4]]]],[11,"new_unchecked","","",2,[[["headername",3]]]],[11,"name","","",2,[[],["headername",3]]],[11,"value","","",2,[[],["str",15]]],[11,"set_value","","",2,[[["str",15],["asref",8]],[["result",4],["error",4]]]],[3,"Headers","","A list of headers.",null,null],[12,"headers","","",3,null],[11,"new","","Initialize an empty list of headers.",3,[[]]],[11,"with_capacity","","Initialize an empty list of headers backed by a vector …",3,[[["usize",15]]]],[11,"into_vec","","Convert this list of headers to a Vec",3,[[],[["vec",3],["header",3]]]],[11,"len","","Returns the number of headers.",3,[[],["usize",15]]],[11,"is_empty","","Returns true if <code>len()</code> is zero.",3,[[],["bool",15]]],[11,"clear","","Clear this set of headers.",3,[[]]],[11,"insert","","Insert or update a new header.",3,[[],[["result",4],["error",4]]]],[11,"insert_if_missing","","Insert the provided header unless a header is already …",3,[[],[["result",4],["error",4]]]],[11,"insert_header","","Insert or update a header directly. Typically you will …",3,[[["header",3]]]],[11,"extend","","Add all the headers in the provided iterator to this list …",3,[[]]],[11,"try_extend","","Add all the headers in the provided iterator, unless any …",3,[[],["result",4]]],[11,"get_header","","Get the header object with the requested name. Usually, …",3,[[],[["header",3],["option",4]]]],[11,"get","","Get the value of the header with the provided name.",3,[[],[["option",4],["str",15]]]],[11,"get_as","","Get the value of the header with the provided name, and …",3,[[],[["option",4],["result",4]]]],[11,"try_get","","Get the value of the header with the provided name, and …",3,[[],["option",4]]],[11,"iter","","Get an iterator over the headers in no particular order.",3,[[]]],[0,"backend","viaduct","",null,null],[0,"ffi","viaduct::backend","",null,null],[0,"callback_holder","viaduct::backend::ffi","Module that manages get/set of the global fetch callback …",null,null],[7,"CALLBACK_PTR","viaduct::backend::ffi::callback_holder","Note: We only assign to this once.",null,null],[17,"STATIC_ASSERT_USIZE_EQ_FUNC_SIZE","","",null,null],[17,"STATIC_ASSERT_USIZE_EQ_OPT_FUNC_SIZE","","",null,null],[5,"get_callback","","Get the function pointer to the FetchCallback. Panics if …",null,[[],["option",4]]],[5,"set_callback","","Set the function pointer to the FetchCallback. Returns …",null,[[],["bool",15]]],[3,"FfiBackend","viaduct::backend::ffi","",null,null],[6,"FetchCallback","","Type of the callback we need callers on the other side of …",null,null],[5,"viaduct_alloc_bytebuffer","","Return a ByteBuffer of the requested size. This is used …",null,[[["i32",15]],["bytebuffer",3]]],[5,"viaduct_log_error","","",null,[[["ffistr",3]]]],[5,"viaduct_initialize","","",null,[[],["u8",15]]],[5,"viaduct_destroy_bytebuffer","","",null,[[["bytebuffer",3]]]],[5,"note_backend","viaduct::backend","",null,[[["str",15]]]],[8,"Backend","","",null,null],[10,"send","","",4,[[["request",3]],[["error",4],["result",4],["response",3]]]],[7,"BACKEND","","",null,null],[5,"set_backend","","",null,[[["backend",8]],[["result",4],["error",4]]]],[5,"get_backend","","",null,[[],["backend",8]]],[5,"send","","",null,[[["request",3]],[["error",4],["result",4],["response",3]]]],[5,"validate_request","","",null,[[["request",3]],[["result",4],["error",4]]]],[0,"error","viaduct","",null,null],[4,"Error","viaduct::error","",null,null],[13,"RequestHeaderError","","",5,null],[13,"BackendError","","",5,null],[13,"NetworkError","","",5,null],[13,"BackendNotInitialized","","",5,null],[13,"SetBackendError","","",5,null],[13,"UrlError","","Note: we return this if the server returns a bad URL with …",5,null],[13,"NonTlsUrl","","",5,null],[3,"UnexpectedStatus","","This error is returned as the <code>Err</code> result from […",null,null],[12,"status","","",6,null],[12,"method","","",6,null],[12,"url","","",6,null],[0,"settings","viaduct","",null,null],[3,"Settings","viaduct::settings","Note: reqwest allows these only to be specified …",null,null],[12,"read_timeout","","",7,null],[12,"connect_timeout","","",7,null],[12,"follow_redirects","","",7,null],[12,"use_caches","","",7,null],[17,"TIMEOUT_DURATION","","",null,null],[7,"GLOBAL_SETTINGS","","",null,null],[0,"header_names","viaduct","",null,null],[17,"ACCEPT_ENCODING","viaduct::header_names","",null,null],[17,"ACCEPT","","",null,null],[17,"AUTHORIZATION","","",null,null],[17,"CONTENT_TYPE","","",null,null],[17,"ETAG","","",null,null],[17,"IF_NONE_MATCH","","",null,null],[17,"USER_AGENT","","",null,null],[17,"RETRY_AFTER","","",null,null],[17,"X_IF_UNMODIFIED_SINCE","","",null,null],[17,"X_KEYID","","",null,null],[17,"X_LAST_MODIFIED","","",null,null],[17,"X_TIMESTAMP","","",null,null],[17,"X_WEAVE_NEXT_OFFSET","","",null,null],[17,"X_WEAVE_RECORDS","","",null,null],[17,"X_WEAVE_TIMESTAMP","","",null,null],[17,"X_WEAVE_BACKOFF","","",null,null],[0,"msg_types","viaduct","",null,null],[0,"request","viaduct::msg_types","",null,null],[4,"Method","viaduct::msg_types::request","",null,null],[13,"Get","","",8,null],[13,"Head","","",8,null],[13,"Post","","",8,null],[13,"Put","","",8,null],[13,"Delete","","",8,null],[13,"Connect","","",8,null],[13,"Options","","",8,null],[13,"Trace","","",8,null],[11,"is_valid","","Returns <code>true</code> if <code>value</code> is a variant of <code>Method</code>.",8,[[["i32",15]],["bool",15]]],[11,"from_i32","","Converts an <code>i32</code> to a <code>Method</code>, or <code>None</code> if <code>value</code> is not a …",8,[[["i32",15]],[["option",4],["method",4]]]],[3,"Request","viaduct::msg_types","",null,null],[12,"method","","",9,null],[12,"url","","",9,null],[12,"body","","",9,null],[12,"headers","","",9,null],[12,"follow_redirects","","",9,null],[12,"use_caches","","",9,null],[12,"connect_timeout_secs","","",9,null],[12,"read_timeout_secs","","",9,null],[11,"method","","Returns the enum value of <code>method</code>, or the default if the …",9,[[],["method",4]]],[11,"set_method","","Sets <code>method</code> to the provided enum value.",9,[[["method",4]]]],[11,"body","","Returns the value of <code>body</code>, or the default value if <code>body</code> …",9,[[]]],[3,"Response","","",null,null],[12,"exception_message","","If this is present, nothing else is.",10,null],[12,"url","","",10,null],[12,"status","","",10,null],[12,"body","","",10,null],[12,"headers","","",10,null],[11,"exception_message","","Returns the value of <code>exception_message</code>, or the default …",10,[[],["str",15]]],[11,"url","","Returns the value of <code>url</code>, or the default value if <code>url</code> is …",10,[[],["str",15]]],[11,"status","","Returns the value of <code>status</code>, or the default value if …",10,[[],["i32",15]]],[11,"body","","Returns the value of <code>body</code>, or the default value if <code>body</code> …",10,[[]]],[0,"status_codes","viaduct","A module containing constants for all HTTP status codes.",null,null],[5,"is_success_code","viaduct::status_codes","Is it a 2xx status?",null,[[["u16",15]],["bool",15]]],[5,"is_client_error_code","","Is it a 4xx error?",null,[[["u16",15]],["bool",15]]],[5,"is_server_error_code","","Is it a 5xx error?",null,[[["u16",15]],["bool",15]]],[17,"CONTINUE","","",null,null],[17,"SWITCHING_PROTOCOLS","","",null,null],[17,"OK","","",null,null],[17,"CREATED","","",null,null],[17,"ACCEPTED","","",null,null],[17,"NONAUTHORITATIVE_INFORMATION","","",null,null],[17,"NO_CONTENT","","",null,null],[17,"RESET_CONTENT","","",null,null],[17,"PARTIAL_CONTENT","","",null,null],[17,"MULTIPLE_CHOICES","","",null,null],[17,"MOVED_PERMANENTLY","","",null,null],[17,"FOUND","","",null,null],[17,"SEE_OTHER","","",null,null],[17,"NOT_MODIFIED","","",null,null],[17,"USE_PROXY","","",null,null],[17,"TEMPORARY_REDIRECT","","",null,null],[17,"BAD_REQUEST","","",null,null],[17,"UNAUTHORIZED","","",null,null],[17,"PAYMENT_REQUIRED","","",null,null],[17,"FORBIDDEN","","",null,null],[17,"NOT_FOUND","","",null,null],[17,"METHOD_NOT_ALLOWED","","",null,null],[17,"NOT_ACCEPTABLE","","",null,null],[17,"PROXY_AUTHENTICATION_REQUIRED","","",null,null],[17,"REQUEST_TIMEOUT","","",null,null],[17,"CONFLICT","","",null,null],[17,"GONE","","",null,null],[17,"LENGTH_REQUIRED","","",null,null],[17,"PRECONDITION_FAILED","","",null,null],[17,"REQUEST_ENTITY_TOO_LARGE","","",null,null],[17,"REQUEST_URI_TOO_LONG","","",null,null],[17,"UNSUPPORTED_MEDIA_TYPE","","",null,null],[17,"REQUESTED_RANGE_NOT_SATISFIABLE","","",null,null],[17,"EXPECTATION_FAILED","","",null,null],[17,"TOO_MANY_REQUESTS","","",null,null],[17,"INTERNAL_SERVER_ERROR","","",null,null],[17,"NOT_IMPLEMENTED","","",null,null],[17,"BAD_GATEWAY","","",null,null],[17,"SERVICE_UNAVAILABLE","","",null,null],[17,"GATEWAY_TIMEOUT","","",null,null],[17,"HTTP_VERSION_NOT_SUPPORTED","","",null,null],[5,"note_backend","viaduct","",null,[[["str",15]]]],[5,"set_backend","","",null,[[["backend",8]],[["result",4],["error",4]]]],[8,"Backend","","",null,null],[10,"send","","",4,[[["request",3]],[["error",4],["result",4],["response",3]]]],[3,"Header","","A single header. Headers have a name (case insensitive) …",null,null],[12,"name","","",2,null],[12,"value","","",2,null],[3,"HeaderName","","Represents a header name that we know to be both valid …",null,null],[12,"0","","",0,null],[3,"Headers","","A list of headers.",null,null],[12,"headers","","",3,null],[3,"InvalidHeaderName","","Indicates an invalid header name. Note that we only emit …",null,null],[12,"0","","",1,null],[4,"Method","","HTTP Methods.",null,null],[13,"Get","","",11,null],[13,"Head","","",11,null],[13,"Post","","",11,null],[13,"Put","","",11,null],[13,"Delete","","",11,null],[13,"Connect","","",11,null],[13,"Options","","",11,null],[13,"Trace","","",11,null],[11,"as_str","","",11,[[],["str",15]]],[3,"Request","","",null,null],[12,"method","","",12,null],[12,"url","","",12,null],[12,"headers","","",12,null],[12,"body","","",12,null],[11,"new","","Construct a new request to the given <code>url</code> using the given …",12,[[["method",4],["url",3]]]],[11,"send","","",12,[[],[["response",3],["error",4],["result",4]]]],[11,"get","","Alias for <code>Request::new(Method::Get, url)</code>, for convenience.",12,[[["url",3]]]],[11,"post","","Alias for <code>Request::new(Method::Post, url)</code>, for …",12,[[["url",3]]]],[11,"put","","Alias for <code>Request::new(Method::Put, url)</code>, for convenience.",12,[[["url",3]]]],[11,"delete","","Alias for <code>Request::new(Method::Delete, url)</code>, for …",12,[[["url",3]]]],[11,"query","","Append the provided query parameters to the URL",12,[[]]],[11,"set_query","","Set the query string of the URL. Note that …",12,[[["option",4],["into",8]]]],[11,"headers","","Add all the provided headers to the list of headers to …",12,[[]]],[11,"header","","Add the provided header to the list of headers to send …",12,[[],[["error",4],["result",4]]]],[11,"body","","Set this request\'s body.",12,[[]]],[11,"json","","Set body to the result of serializing <code>val</code>, and, unless it …",12,[[]]],[3,"Response","","A response from the server.",null,null],[12,"request_method","","The method used to request this response.",13,null],[12,"url","","The URL of this response.",13,null],[12,"status","","The HTTP Status code of this response.",13,null],[12,"headers","","The headers returned with this response.",13,null],[12,"body","","The body of the response. Note that responses with binary …",13,null],[11,"json","","Parse the body as JSON.",13,[[],[["error",3],["result",4]]]],[11,"text","","Get the body as a string. Assumes UTF-8 encoding. Any …",13,[[],[["cow",4],["str",15]]]],[11,"is_success","","Returns true if the status code is in the interval …",13,[[],["bool",15]]],[11,"is_server_error","","Returns true if the status code is in the interval …",13,[[],["bool",15]]],[11,"is_client_error","","Returns true if the status code is in the interval …",13,[[],["bool",15]]],[11,"require_success","","Returns an [<code>UnexpectedStatus</code>] error if <code>self.is_success()</code> …",13,[[],[["unexpectedstatus",3],["result",4]]]],[11,"from","viaduct::headers::name","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","viaduct::headers","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","viaduct::backend::ffi","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","viaduct::error","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","viaduct::settings","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","viaduct::msg_types::request","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","viaduct::msg_types","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","viaduct","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"send","viaduct::backend::ffi","",14,[[["request",3]],[["error",4],["result",4],["response",3]]]],[11,"as_ref","viaduct::headers::name","",0,[[],["str",15]]],[11,"as_ref","","",0,[[]]],[11,"from","","",0,[[["str",15]],["headername",3]]],[11,"from","","",0,[[["string",3]],["headername",3]]],[11,"from","","",0,[[["str",15],["cow",4]],["headername",3]]],[11,"from","viaduct::msg_types","",9,[[["request",3]]]],[11,"from","viaduct::error","",5,[[["parseerror",4]]]],[11,"into_iter","viaduct::headers","",3,[[]]],[11,"clone","viaduct::headers::name","",0,[[],["headername",3]]],[11,"clone","","",1,[[],["invalidheadername",3]]],[11,"clone","viaduct::headers","",2,[[],["header",3]]],[11,"clone","","",3,[[],["headers",3]]],[11,"clone","viaduct::error","",6,[[],["unexpectedstatus",3]]],[11,"clone","viaduct::msg_types","",9,[[],["request",3]]],[11,"clone","viaduct::msg_types::request","",8,[[],["method",4]]],[11,"clone","viaduct::msg_types","",10,[[],["response",3]]],[11,"clone","viaduct","",11,[[],["method",4]]],[11,"clone","","",12,[[],["request",3]]],[11,"clone","","",13,[[],["response",3]]],[11,"default","viaduct::headers","",3,[[],["headers",3]]],[11,"default","viaduct::msg_types","",9,[[],["request",3]]],[11,"default","viaduct::msg_types::request","",8,[[],["method",4]]],[11,"default","viaduct::msg_types","",10,[[],["response",3]]],[11,"cmp","viaduct::headers::name","",0,[[["headername",3]],["ordering",4]]],[11,"cmp","viaduct::headers","",2,[[["header",3]],["ordering",4]]],[11,"cmp","viaduct::msg_types::request","",8,[[["method",4]],["ordering",4]]],[11,"cmp","viaduct","",11,[[["method",4]],["ordering",4]]],[11,"eq","viaduct::headers::name","",0,[[["headername",3]],["bool",15]]],[11,"ne","","",0,[[["headername",3]],["bool",15]]],[11,"eq","","",1,[[["invalidheadername",3]],["bool",15]]],[11,"ne","","",1,[[["invalidheadername",3]],["bool",15]]],[11,"eq","","",0,[[["str",15]],["bool",15]]],[11,"eq","","",0,[[["str",15]],["bool",15]]],[11,"eq","","",0,[[["string",3]],["bool",15]]],[11,"eq","","",0,[[["string",3]],["bool",15]]],[11,"eq","","",0,[[["cow",4]],["bool",15]]],[11,"eq","viaduct::headers","",2,[[["header",3]],["bool",15]]],[11,"ne","","",2,[[["header",3]],["bool",15]]],[11,"eq","","",3,[[["headers",3]],["bool",15]]],[11,"ne","","",3,[[["headers",3]],["bool",15]]],[11,"eq","viaduct::error","",6,[[["unexpectedstatus",3]],["bool",15]]],[11,"ne","","",6,[[["unexpectedstatus",3]],["bool",15]]],[11,"eq","viaduct::settings","",7,[[["settings",3]],["bool",15]]],[11,"ne","","",7,[[["settings",3]],["bool",15]]],[11,"eq","viaduct::msg_types","",9,[[["request",3]],["bool",15]]],[11,"ne","","",9,[[["request",3]],["bool",15]]],[11,"eq","viaduct::msg_types::request","",8,[[["method",4]],["bool",15]]],[11,"eq","viaduct::msg_types","",10,[[["response",3]],["bool",15]]],[11,"ne","","",10,[[["response",3]],["bool",15]]],[11,"eq","viaduct","",11,[[["method",4]],["bool",15]]],[11,"eq","","",12,[[["request",3]],["bool",15]]],[11,"ne","","",12,[[["request",3]],["bool",15]]],[11,"eq","","",13,[[["response",3]],["bool",15]]],[11,"ne","","",13,[[["response",3]],["bool",15]]],[11,"partial_cmp","viaduct::headers::name","",0,[[["headername",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["headername",3]],["bool",15]]],[11,"le","","",0,[[["headername",3]],["bool",15]]],[11,"gt","","",0,[[["headername",3]],["bool",15]]],[11,"ge","","",0,[[["headername",3]],["bool",15]]],[11,"partial_cmp","viaduct::headers","",2,[[["header",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["header",3]],["bool",15]]],[11,"le","","",2,[[["header",3]],["bool",15]]],[11,"gt","","",2,[[["header",3]],["bool",15]]],[11,"ge","","",2,[[["header",3]],["bool",15]]],[11,"partial_cmp","viaduct::msg_types::request","",8,[[["method",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","viaduct","",11,[[["method",4]],[["option",4],["ordering",4]]]],[11,"deref","viaduct::headers::name","",0,[[],["str",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::headers","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::error","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::settings","",7,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::msg_types","",9,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::msg_types::request","",8,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::msg_types","",10,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::headers::name","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::headers","",2,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct::error","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","viaduct","",11,[[["formatter",3]],["result",6]]],[11,"hash","viaduct::headers::name","",0,[[]]],[11,"hash","viaduct::headers","",2,[[]]],[11,"hash","viaduct::msg_types::request","",8,[[]]],[11,"hash","viaduct","",11,[[]]],[11,"from_iter","viaduct::headers","",3,[[]]],[11,"source","viaduct::error","",5,[[],[["option",4],["error",8]]]],[11,"ffi_default","viaduct::msg_types","",9,[[]]],[11,"into_ffi_value","","",9,[[]]],[11,"encode_raw","","",9,[[]]],[11,"merge_field","","",9,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",9,[[],["usize",15]]],[11,"clear","","",9,[[]]],[11,"encode_raw","","",10,[[]]],[11,"merge_field","","",10,[[["u32",15],["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",10,[[],["usize",15]]],[11,"clear","","",10,[[]]]],"p":[[3,"HeaderName"],[3,"InvalidHeaderName"],[3,"Header"],[3,"Headers"],[8,"Backend"],[4,"Error"],[3,"UnexpectedStatus"],[3,"Settings"],[4,"Method"],[3,"Request"],[3,"Response"],[4,"Method"],[3,"Request"],[3,"Response"],[3,"FfiBackend"]]},\
"viaduct_reqwest":{"doc":"","i":[[3,"CLIENT","viaduct_reqwest","",null,null],[12,"__private_field","","",0,null],[5,"into_reqwest","","",null,[[["request",3]],[["result",4],["error",4],["request",3]]]],[3,"ReqwestBackend","","",null,null],[7,"INIT_REQWEST_BACKEND","","",null,null],[5,"use_reqwest_backend","","",null,[[]]],[5,"viaduct_detect_reqwest_backend","","A dummy symbol we include so that we can detect whether …",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"deref","","",0,[[],["client",3]]],[11,"send","","",1,[[["request",3]],[["response",3],["error",4],["result",4]]]],[11,"initialize","","",0,[[]]]],"p":[[3,"CLIENT"],[3,"ReqwestBackend"]]},\
"webext_storage":{"doc":"","i":[[0,"api","webext_storage","",null,null],[17,"SYNC_QUOTA_BYTES","webext_storage::api","",null,null],[17,"SYNC_QUOTA_BYTES_PER_ITEM","","",null,null],[17,"SYNC_MAX_ITEMS","","",null,null],[6,"JsonMap","","",null,null],[4,"StorageChangeOp","","",null,null],[13,"Clear","","",0,null],[13,"Set","","",0,null],[13,"SetWithoutQuota","","",0,null],[5,"get_from_db","","",null,[[["connection",3],["str",15]],[["result",6],["option",4]]]],[5,"save_to_db","","",null,[[["storagechangeop",4],["transaction",3],["str",15]],["result",6]]],[5,"remove_from_db","","",null,[[["transaction",3],["str",15]],["result",6]]],[3,"StorageValueChange","","",null,null],[12,"key","","",1,null],[12,"old_value","","",1,null],[12,"new_value","","",1,null],[3,"StorageChanges","","",null,null],[12,"changes","","",2,null],[11,"new","","",2,[[]]],[11,"with_capacity","","",2,[[["usize",15]]]],[11,"is_empty","","",2,[[],["bool",15]]],[11,"push","","",2,[[["storagevaluechange",3]]]],[5,"get_quota_size_of","","",null,[[["jsonvalue",4],["str",15]],["usize",15]]],[5,"set","","The implementation of <code>storage[.sync].set()</code>. On success …",null,[[["jsonvalue",4],["transaction",3],["str",15]],[["storagechanges",3],["result",6]]]],[5,"get_keys","","",null,[[["jsonvalue",4]],["vec",3]]],[5,"get","","The implementation of <code>storage[.sync].get()</code> - on success …",null,[[["connection",3],["jsonvalue",4],["str",15]],[["result",6],["jsonvalue",4]]]],[5,"remove","","The implementation of <code>storage[.sync].remove()</code>. On success …",null,[[["jsonvalue",4],["transaction",3],["str",15]],[["storagechanges",3],["result",6]]]],[5,"clear","","The implementation of <code>storage[.sync].clear()</code>. On success …",null,[[["transaction",3],["str",15]],[["storagechanges",3],["result",6]]]],[5,"get_bytes_in_use","","The implementation of <code>storage[.sync].getBytesInUse()</code>.",null,[[["connection",3],["jsonvalue",4],["str",15]],[["usize",15],["result",6]]]],[3,"UsageInfo","","Information about the usage of a single extension.",null,null],[12,"ext_id","","The extension id.",3,null],[12,"num_keys","","The number of keys the extension uses.",3,null],[12,"num_bytes","","The number of bytes used by the extension. This result is …",3,null],[5,"usage","","Exposes information about per-collection usage for the …",null,[[["connection",3]],[["result",6],["vec",3]]]],[0,"db","webext_storage","",null,null],[0,"sql_fns","webext_storage::db","",null,null],[5,"generate_guid","webext_storage::db::sql_fns","",null,[[["context",3]],[["result",6],["syncguid",3]]]],[3,"StorageDb","webext_storage::db","A <code>StorageDb</code> wraps a read-write SQLite connection, and …",null,null],[12,"writer","","",4,null],[12,"interrupt_counter","","",4,null],[11,"new","","Create a new, or fetch an already open, StorageDb backed …",4,[[],["result",6]]],[11,"new_named","","",4,[[["pathbuf",3]],["result",6]]],[11,"interrupt_handle","","Returns an interrupt handle for this database connection. …",4,[[],["sqlinterrupthandle",3]]],[11,"begin_interrupt_scope","","Creates an object that knows when it\'s been interrupted. …",4,[[],["sqlinterruptscope",3]]],[11,"close","","Closes the database connection. If there are any …",4,[[],["result",4]]],[5,"init_sql_connection","","",null,[[["connection",3],["bool",15]],["result",6]]],[5,"define_functions","","",null,[[["connection",3]],["result",6]]],[5,"put_meta","","",null,[[["connection",3],["tosql",8],["str",15]],["result",6]]],[5,"get_meta","","",null,[[["connection",3],["str",15]],[["result",6],["option",4]]]],[5,"delete_meta","","",null,[[["connection",3],["str",15]],["result",6]]],[5,"unurl_path","","<code>Path</code> is basically just a <code>str</code> with no validation, and so …",null,[[],["pathbuf",3]]],[5,"ensure_url_path","","If <code>p</code> is a file URL, return it, otherwise try and make it …",null,[[],[["result",6],["url",3]]]],[5,"normalize_path","","As best as possible, convert <code>p</code> into an absolute path, …",null,[[],[["pathbuf",3],["result",6]]]],[0,"error","webext_storage","",null,null],[4,"QuotaReason","webext_storage::error","",null,null],[13,"TotalBytes","","",5,null],[13,"ItemBytes","","",5,null],[13,"MaxItems","","",5,null],[4,"ErrorKind","","",null,null],[13,"QuotaError","","",6,null],[13,"JsonError","","",6,null],[13,"SqlError","","",6,null],[13,"ConnectionAlreadyOpen","","",6,null],[13,"InvalidConnectionType","","",6,null],[13,"IoError","","",6,null],[13,"InterruptedError","","",6,null],[13,"WrongApiForClose","","",6,null],[13,"IllegalDatabasePath","","",6,null],[13,"Utf8Error","","",6,null],[13,"DatabaseUpgradeError","","",6,null],[13,"UnsupportedDatabaseVersion","","",6,null],[13,"IncomingPayloadError","","",6,null],[6,"Result","","",null,null],[3,"ErrorData","","",null,null],[12,"kind","","",7,null],[12,"backtrace","","",7,null],[11,"new","","",7,[[["errorkind",4]]]],[11,"get_backtrace","","",7,[[],[["mutex",3],["option",4]]]],[3,"Error","","",null,null],[12,"0","","",8,null],[11,"kind","","",8,[[],["errorkind",4]]],[11,"backtrace","","",8,[[],[["mutex",3],["option",4]]]],[0,"ffi","webext_storage","",null,null],[0,"error_codes","webext_storage::ffi","",null,null],[17,"UNEXPECTED","webext_storage::ffi::error_codes","An unexpected error occurred which likely cannot be …",null,null],[17,"INVALID_JSON","","The application passed an invalid JSON string for a …",null,null],[17,"QUOTA_TOTAL_BYTES_EXCEEDED","","The total number of bytes stored in the database for this …",null,null],[17,"QUOTA_ITEM_BYTES_EXCEEDED","","A single key-value pair exceeds the allowed byte limit …",null,null],[17,"QUOTA_MAX_ITEMS_EXCEEDED","","The total number of key-value pairs stored for this …",null,null],[0,"migration","webext_storage","",null,null],[3,"LegacyRow","webext_storage::migration","",null,null],[12,"col_name","","",9,null],[12,"record","","",9,null],[11,"parse","","",9,[[],[["parsed",3],["option",4]]]],[3,"Parsed","","",null,null],[12,"ext_id","","",10,null],[12,"key","","",10,null],[12,"data","","",10,null],[5,"migrate","","",null,[[["transaction",3],["path",3]],[["migrationinfo",3],["result",6]]]],[5,"read_rows","","",null,[[["path",3]]]],[5,"do_insert","","Insert the extension and values. If there are multiple …",null,[[["vec",3],["transaction",3],["str",15]],[["usize",15],["result",6]]]],[3,"MigrationInfo","","",null,null],[12,"entries","","The number of entries (rows in the original table) we …",11,null],[12,"entries_successful","","The number of records we successfully migrated (equal to …",11,null],[12,"extensions","","The number of extensions (distinct extension ids) in the …",11,null],[12,"extensions_successful","","The number of extensions we successfully migrated",11,null],[12,"open_failure","","True iff we failed to open the source DB at all.",11,null],[11,"open_failure","","Returns a MigrationInfo indicating that we failed to read …",11,[[]]],[18,"META_KEY","","",11,null],[11,"store","","Store <code>self</code> in the provided database under <code>Self::META_KEY</code>.",11,[[["connection",3]],["result",6]]],[11,"take","","Get the MigrationInfo stored under <code>Self::META_KEY</code> (if …",11,[[["transaction",3]],[["result",6],["option",4]]]],[0,"schema","webext_storage","",null,null],[17,"VERSION","webext_storage::schema","",null,null],[17,"CREATE_SCHEMA_SQL","","",null,null],[17,"CREATE_SYNC_TEMP_TABLES_SQL","","",null,null],[5,"get_current_schema_version","","",null,[[["connection",3]],[["i64",15],["result",6]]]],[5,"init","","",null,[[["connection",3]],["result",6]]],[5,"create","","",null,[[["connection",3]],["result",6]]],[5,"upgrade","","",null,[[["connection",3],["i64",15]],["result",6]]],[5,"create_empty_sync_temp_tables","","",null,[[["connection",3]],["result",6]]],[0,"store","webext_storage","",null,null],[3,"Store","webext_storage::store","A store is used to access <code>storage.sync</code> data. It manages …",null,null],[12,"db","","",12,null],[11,"new","","Creates a store backed by a database at <code>db_path</code>. The path …",12,[[],["result",6]]],[11,"interrupt_handle","","Returns an interrupt handle for this store.",12,[[],["sqlinterrupthandle",3]]],[11,"set","","Sets one or more JSON key-value pairs for an extension …",12,[[["jsonvalue",4],["str",15]],[["storagechanges",3],["result",6]]]],[11,"usage","","Returns information about per-extension usage",12,[[],[["vec",3],["result",6]]]],[11,"get","","Returns the values for one or more keys <code>keys</code> can be:",12,[[["jsonvalue",4],["str",15]],[["result",6],["jsonvalue",4]]]],[11,"remove","","Deletes the values for one or more keys. As with <code>get</code>, <code>keys</code>…",12,[[["jsonvalue",4],["str",15]],[["storagechanges",3],["result",6]]]],[11,"clear","","Deletes all key-value pairs for the extension. As with …",12,[[["str",15]],[["storagechanges",3],["result",6]]]],[11,"get_bytes_in_use","","Returns the bytes in use for the specified items (which …",12,[[["jsonvalue",4],["str",15]],[["usize",15],["result",6]]]],[11,"bridged_engine","","Returns a bridged sync engine for Desktop for this store.",12,[[],["bridgedengine",3]]],[11,"close","","Closes the store and its database connection. See the …",12,[[],["result",4]]],[11,"get_synced_changes","","Gets the changes which the current sync applied. Should …",12,[[],[["result",6],["vec",3]]]],[11,"migrate","","Migrates data from a database in the format of the \\\"old\\\" …",12,[[],["result",6]]],[11,"take_migration_info","","Read-and-delete (e.g. <code>take</code> in rust parlance, see …",12,[[],[["option",4],["result",6]]]],[0,"sync","webext_storage","",null,null],[0,"bridge","webext_storage::sync","",null,null],[17,"LAST_SYNC_META_KEY","webext_storage::sync::bridge","",null,null],[17,"SYNC_ID_META_KEY","","",null,null],[3,"BridgedEngine","","A bridged engine implements all the methods needed to …",null,null],[12,"db","","",13,null],[11,"new","","Creates a bridged engine for syncing.",13,[[["storagedb",3]]]],[11,"do_reset","","",13,[[["transaction",3]],["result",6]]],[0,"incoming","webext_storage::sync","",null,null],[4,"DataState","webext_storage::sync::incoming","The state data can be in. Could be represented as Option, …",null,null],[13,"Deleted","","The data was deleted.",14,null],[13,"Exists","","Data exists, as stored in the map.",14,null],[5,"changes_for_new_incoming","","",null,[[["map",3]],["storagechanges",3]]],[5,"json_map_from_row","","",null,[[["str",15],["row",3]],[["datastate",4],["result",6]]]],[5,"stage_incoming","","The first thing we do with incoming items is to \\\"stage\\\" …",null,[[["payload",3],["vec",3],["transaction",3],["interruptee",8]],["result",6]]],[4,"IncomingState","","The \\\"state\\\" we find ourselves in when considering an …",null,null],[13,"IncomingOnlyData","","There\'s an incoming item, but data for that extension …",15,null],[12,"ext_id","webext_storage::sync::incoming::IncomingState","",16,null],[12,"data","","",16,null],[13,"IncomingOnlyTombstone","webext_storage::sync::incoming","An incoming tombstone that doesn\'t exist locally. Because …",15,null],[13,"HasLocal","","There\'s an incoming item and we have data for the same …",15,null],[12,"ext_id","webext_storage::sync::incoming::IncomingState","",17,null],[12,"incoming","","",17,null],[12,"local","","",17,null],[13,"NotLocal","webext_storage::sync::incoming","There\'s an incoming item and there\'s an item for the same …",15,null],[12,"ext_id","webext_storage::sync::incoming::IncomingState","",18,null],[12,"incoming","","",18,null],[12,"mirror","","",18,null],[13,"Everywhere","webext_storage::sync::incoming","This will be the most common \\\"incoming\\\" case - there\'s …",15,null],[12,"ext_id","webext_storage::sync::incoming::IncomingState","",19,null],[12,"incoming","","",19,null],[12,"mirror","","",19,null],[12,"local","","",19,null],[5,"get_incoming","webext_storage::sync::incoming","Get the items we need to process from the staging table. …",null,[[["connection",3]],[["result",6],["vec",3]]]],[4,"IncomingAction","","This is the set of actions we know how to take <em>locally</em> …",null,null],[13,"DeleteLocally","","We should locally delete the data for this record",20,null],[12,"ext_id","webext_storage::sync::incoming::IncomingAction","",21,null],[12,"changes","","",21,null],[13,"TakeRemote","webext_storage::sync::incoming","We will take the remote.",20,null],[12,"ext_id","webext_storage::sync::incoming::IncomingAction","",22,null],[12,"data","","",22,null],[12,"changes","","",22,null],[13,"Merge","webext_storage::sync::incoming","We merged this data - this is what we came up with.",20,null],[12,"ext_id","webext_storage::sync::incoming::IncomingAction","",23,null],[12,"data","","",23,null],[12,"changes","","",23,null],[13,"Same","webext_storage::sync::incoming","Entry exists locally and it\'s the same as the incoming …",20,null],[12,"ext_id","webext_storage::sync::incoming::IncomingAction","",24,null],[13,"Nothing","webext_storage::sync::incoming","Incoming tombstone for an item we\'ve never seen.",20,null],[5,"plan_incoming","","Takes the state of an item and returns the action we …",null,[[["incomingstate",4]],["incomingaction",4]]],[5,"insert_changes","","",null,[[["storagechanges",3],["transaction",3],["str",15]],["result",6]]],[5,"apply_actions","","",null,[[["vec",3],["transaction",3],["interruptee",8]],["result",6]]],[0,"outgoing","webext_storage::sync","",null,null],[5,"outgoing_from_row","webext_storage::sync::outgoing","",null,[[["row",3]],[["payload",3],["result",6]]]],[5,"stage_outgoing","","Stages info about what should be uploaded in a temp …",null,[[["transaction",3]],["result",6]]],[5,"get_outgoing","","Returns a vec of the payloads which should be uploaded.",null,[[["connection",3],["interruptee",8]],[["result",6],["vec",3]]]],[5,"record_uploaded","","Record the fact that items were uploaded. This updates …",null,[[["transaction",3],["interruptee",8]],["result",6]]],[6,"JsonMap","webext_storage::sync","",null,null],[17,"STORAGE_VERSION","","",null,null],[4,"RecordData","","",null,null],[13,"Data","","",25,null],[12,"ext_id","webext_storage::sync::RecordData","",26,null],[12,"data","","",26,null],[13,"Tombstone","webext_storage::sync","",25,null],[5,"deserialize_record_data","","",null,[[],[["result",6],["recorddata",4]]]],[3,"Record","","",null,null],[12,"guid","","",27,null],[12,"data","","",27,null],[5,"merge","","",null,[[["value",4],["map",3],["option",4],["string",3]],["incomingaction",4]]],[5,"remove_matching_keys","","",null,[[["value",4],["map",3],["map",3],["string",3]]]],[3,"SyncedExtensionChange","","Holds a JSON-serialized map of all synced changes for an …",null,null],[12,"ext_id","","The extension ID.",28,null],[12,"changes","","The contents of a <code>StorageChanges</code> struct, in JSON format. …",28,null],[5,"get_synced_changes","","",null,[[["storagedb",3]],[["vec",3],["result",6]]]],[3,"MigrationInfo","webext_storage","",null,null],[12,"entries","","The number of entries (rows in the original table) we …",11,null],[12,"entries_successful","","The number of records we successfully migrated (equal to …",11,null],[12,"extensions","","The number of extensions (distinct extension ids) in the …",11,null],[12,"extensions_successful","","The number of extensions we successfully migrated",11,null],[12,"open_failure","","True iff we failed to open the source DB at all.",11,null],[17,"STORAGE_VERSION","","",null,null],[17,"SYNC_MAX_ITEMS","","",null,null],[17,"SYNC_QUOTA_BYTES","","",null,null],[17,"SYNC_QUOTA_BYTES_PER_ITEM","","",null,null],[3,"UsageInfo","","Information about the usage of a single extension.",null,null],[12,"ext_id","","The extension id.",3,null],[12,"num_keys","","The number of keys the extension uses.",3,null],[12,"num_bytes","","The number of bytes used by the extension. This result is …",3,null],[11,"from","webext_storage::api","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","webext_storage::db","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","webext_storage::error","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","webext_storage::migration","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","webext_storage::store","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","webext_storage::sync::bridge","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","webext_storage::sync::incoming","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","webext_storage::sync","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","webext_storage::error","",6,[[["error",3]]]],[11,"from","","",6,[[["error",4]]]],[11,"from","","",6,[[["error",3]]]],[11,"from","","",6,[[["interrupted",3]]]],[11,"from","","",6,[[["utf8error",3]]]],[11,"from","","",6,[[["payloaderror",4]]]],[11,"from","","",8,[[["errorkind",4]],["error",3]]],[11,"from","","",8,[[["error",3]]]],[11,"from","","",8,[[["error",4]]]],[11,"from","","",8,[[["error",3]]]],[11,"from","","",8,[[["interrupted",3]]]],[11,"from","","",8,[[["utf8error",3]]]],[11,"from","","",8,[[["payloaderror",4]]]],[11,"clone","webext_storage::api","",1,[[],["storagevaluechange",3]]],[11,"clone","","",2,[[],["storagechanges",3]]],[11,"clone","","",3,[[],["usageinfo",3]]],[11,"clone","webext_storage::migration","",11,[[],["migrationinfo",3]]],[11,"clone","webext_storage::sync","",28,[[],["syncedextensionchange",3]]],[11,"default","webext_storage::api","",2,[[],["storagechanges",3]]],[11,"default","webext_storage::migration","",11,[[],["migrationinfo",3]]],[11,"eq","webext_storage::api","",1,[[["storagevaluechange",3]],["bool",15]]],[11,"ne","","",1,[[["storagevaluechange",3]],["bool",15]]],[11,"eq","","",2,[[["storagechanges",3]],["bool",15]]],[11,"ne","","",2,[[["storagechanges",3]],["bool",15]]],[11,"eq","","",3,[[["usageinfo",3]],["bool",15]]],[11,"ne","","",3,[[["usageinfo",3]],["bool",15]]],[11,"eq","webext_storage::migration","",11,[[["migrationinfo",3]],["bool",15]]],[11,"ne","","",11,[[["migrationinfo",3]],["bool",15]]],[11,"eq","webext_storage::sync::incoming","",14,[[["datastate",4]],["bool",15]]],[11,"ne","","",14,[[["datastate",4]],["bool",15]]],[11,"eq","","",15,[[["incomingstate",4]],["bool",15]]],[11,"ne","","",15,[[["incomingstate",4]],["bool",15]]],[11,"eq","","",20,[[["incomingaction",4]],["bool",15]]],[11,"ne","","",20,[[["incomingaction",4]],["bool",15]]],[11,"eq","webext_storage::sync","",25,[[["recorddata",4]],["bool",15]]],[11,"ne","","",25,[[["recorddata",4]],["bool",15]]],[11,"eq","","",28,[[["syncedextensionchange",3]],["bool",15]]],[11,"ne","","",28,[[["syncedextensionchange",3]],["bool",15]]],[11,"deref","webext_storage::db","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","webext_storage::api","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage::error","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage::migration","",11,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage::sync::incoming","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage::sync","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","webext_storage::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"serialize","webext_storage::api","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",6]]],[11,"serialize","webext_storage::migration","",11,[[],["result",4]]],[11,"serialize","webext_storage::sync","",25,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"deserialize","webext_storage::migration","",11,[[],["result",4]]],[11,"deserialize","webext_storage::sync","",25,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"last_sync","webext_storage::sync::bridge","",13,[[],[["i64",15],["result",6]]]],[11,"set_last_sync","","",13,[[["i64",15]],["result",6]]],[11,"sync_id","","",13,[[],[["result",6],["option",4]]]],[11,"reset_sync_id","","",13,[[],[["result",6],["string",3]]]],[11,"ensure_current_sync_id","","",13,[[["str",15]],[["result",6],["string",3]]]],[11,"sync_started","","",13,[[],["result",6]]],[11,"store_incoming","","",13,[[],["result",6]]],[11,"apply","","",13,[[],[["applyresults",3],["result",6]]]],[11,"set_uploaded","","",13,[[["i64",15]],["result",6]]],[11,"sync_finished","","",13,[[],["result",6]]],[11,"reset","","",13,[[],["result",6]]],[11,"wipe","","",13,[[],["result",6]]]],"p":[[4,"StorageChangeOp"],[3,"StorageValueChange"],[3,"StorageChanges"],[3,"UsageInfo"],[3,"StorageDb"],[4,"QuotaReason"],[4,"ErrorKind"],[3,"ErrorData"],[3,"Error"],[3,"LegacyRow"],[3,"Parsed"],[3,"MigrationInfo"],[3,"Store"],[3,"BridgedEngine"],[4,"DataState"],[4,"IncomingState"],[13,"IncomingOnlyData"],[13,"HasLocal"],[13,"NotLocal"],[13,"Everywhere"],[4,"IncomingAction"],[13,"DeleteLocally"],[13,"TakeRemote"],[13,"Merge"],[13,"Same"],[4,"RecordData"],[13,"Data"],[3,"Record"],[3,"SyncedExtensionChange"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);